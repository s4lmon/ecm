Microchip MPLAB XC8 Compiler V2.00 ()

Linker command line:

-W-3 --edf=/Applications/microchip/xc8/v2.00/pic/dat/en_msgs.txt -cs \
  -h+dist/default/production/ecm.production.sym \
  --cmf=dist/default/production/ecm.production.cmf -z -Q18F4331 \
  -o/tmp/xc66fCKnE --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/ecm.production.map -E1 -ver=XC8 --acfsm=1493 \
  -ASTACK=0F9h-02ffh -pstack=STACK -ACODE=00h-01FFFh -ACONST=00h-01FFFh \
  -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-02FFh -ABIGRAM=01h-02FFh -ARAM=060h-0FFh,0100h-01FFhx2 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ASFR=0F60h-0FFFh -preset_vec=00h,intcode=08h,intcodelo,powerup,init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xcnJ1NQKQ.o dist/default/production/ecm.production.o 

Object code version is 3.11

Machine type is 18F4331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcnJ1NQKQ.o
                init                                 78       78        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/ecm.production.o
                intcode                               8        8       70        4       0
                temp                                 4D       4D        1        1       1
                smallconst                          300      300       44      180       0
                text26                             14B6     14B6       16      1A2       0
                text25                             11F4     11F4       78      1A2       0
                text24                             13BE     13BE       2C      1A2       0
                text23                              D04      D04       EA      1A2       0
                text22                             10F4     10F4       84      1A2       0
                text21                             13EA     13EA       26      1A2       0
                text20                              A0E      A0E      182      1A2       0
                text19                             105E     105E       96      1A2       0
                text18                              FC8      FC8       96      1A2       0
                text17                             142E     142E       1E      1A2       0
                text16                             149C     149C       1A      1A2       0
                text15                             1482     1482       1A      1A2       0
                text14                             1468     1468       1A      1A2       0
                text13                             14CC     14CC       14      1A2       0
                text12                             144C     144C       1C      1A2       0
                text11                             138E     138E       30      1A2       0
                text10                             135E     135E       30      1A2       0
                text9                              12CA     12CA       52      1A2       0
                text8                              131C     131C       42      1A2       0
                text7                               B90      B90      174      1A2       0
                text6                               DEE      DEE       AE      1A2       0
                text5                              1178     1178       7C      1A2       0
                text4                               830      830      1DE      1A2       0
                text3                              126C     126C       5E      1A2       0
                text2                               F32      F32       96      1A2       0
                text1                               E9C      E9C       96      1A2       0
                text0                               344      344      4EC      1A2       0
                cstackCOMRAM                          1        1       38        1       1
                cstackBANK0                          60       60       98       60       1
                bssBANK0                             F8       F8        1       60       1
                bssCOMRAM                            39       39       14        1       1
                cinit                              1410     1410       1E      1A2       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8       70         0
                init                                 78       78        4         0
                reset_vec                             0        0        4         0
                text26                             14B6     14B6       16         0
                text25                             11F4     11F4       78         0
                text24                             13BE     13BE       2C         0
                text23                              D04      D04       EA         0
                text22                             10F4     10F4       84         0
                text21                             13EA     13EA       26         0
                text20                              A0E      A0E      182         0
                text19                             105E     105E       96         0
                text18                              FC8      FC8       96         0
                text17                             142E     142E       1E         0
                text16                             149C     149C       1A         0
                text15                             1482     1482       1A         0
                text14                             1468     1468       1A         0
                text13                             14CC     14CC       14         0
                text12                             144C     144C       1C         0
                text11                             138E     138E       30         0
                text10                             135E     135E       30         0
                text9                              12CA     12CA       52         0
                text8                              131C     131C       42         0
                text7                               B90      B90      174         0
                text6                               DEE      DEE       AE         0
                text5                              1178     1178       7C         0
                text4                               830      830      1DE         0
                text3                              126C     126C       5E         0
                text2                               F32      F32       96         0
                text1                               E9C      E9C       96         0
                text0                               344      344      4EC         0
                cinit                              1410     1410       1E         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       44         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 4D       4D        1         1
                cstackCOMRAM                          1        1       38         1
                bssCOMRAM                            39       39       14         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       98         1
                bssBANK0                             F8       F8        1         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00004D  00004E         1       1  COMRAM  
                intcode                        000008  000074  00007C         4       0  CODE    
                cstackBANK0                    000060  000099  0000F9        60       1  BANK0   
                smallconst                     000300  000044  000344       180       0  SMALLCON
                text0                          000344  00119C  0014E0       1A2       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000F9-0000FF                7
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           00004E-00005F               12
                         0000F9-0002FF              207
        CODE             000004-000007                4
                         00007C-0002FF              284
                         0014E0-001FFF              B20
        COMRAM           00004E-00005F               12
        CONST            000004-000007                4
                         00007C-0002FF              284
                         0014E0-001FFF              B20
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      0014E0-001FFF              B20
        RAM              0000F9-0002FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       0014E0-001FFF              100
        STACK            0000F9-0002FF              207

                                  Symbol Table

?___awdiv                      cstackCOMRAM 00000C
?___lwdiv                      cstackCOMRAM 000006
?___lwmod                      cstackCOMRAM 00000D
?___wmul                       cstackCOMRAM 000006
?_sprintf                      cstackCOMRAM 000012
InterruptHandlerHigh@count     bssCOMRAM    000039
InterruptHandlerHigh@rx_char   cstackCOMRAM 000005
LCD_line@line                  cstackCOMRAM 00000A
LCD_out@number                 cstackCOMRAM 000007
LCD_send@Byte                  cstackCOMRAM 000009
LCD_send@type                  cstackCOMRAM 000008
LCD_string@string              cstackCOMRAM 00000A
_ANSEL0                        (abs)        000FB8
_ANSEL1                        (abs)        000FB9
_BAUDCONbits                   (abs)        000FAA
_CAP1BUFH                      (abs)        000F69
_CAP1BUFL                      (abs)        000F68
_CAP1CON                       (abs)        000F63
_CAP2BUFH                      (abs)        000F67
_CAP2BUFL                      (abs)        000F66
_CAP2CON                       (abs)        000F62
_DFLTCON                       (abs)        000F60
_Direction                     bssCOMRAM    00003B
_E_TOG                         text26       0014B6
_INTCON2bits                   (abs)        000FF1
_INTCON3bits                   (abs)        000FF0
_INTCONbits                    (abs)        000FF2
_InterruptHandlerHigh          intcode      000008
_LATA                          (abs)        000F89
_LATB                          (abs)        000F8A
_LATC                          (abs)        000F8B
_LATCbits                      (abs)        000F8B
_LATD                          (abs)        000F8C
_LCD_clear                     text12       00144C
_LCD_init                      text23       000D04
_LCD_line                      text11       00138E
_LCD_out                       text25       0011F4
_LCD_send                      text24       0013BE
_LCD_string                    text10       00135E
_OSCCON                        (abs)        000FD3
_OSCCONbits                    (abs)        000FD3
_PDC0H                         (abs)        000F78
_PDC0L                         (abs)        000F79
_PDC1H                         (abs)        000F76
_PDC1L                         (abs)        000F77
_PIE1bits                      (abs)        000F9D
_PIR1bits                      (abs)        000F9E
_PORTAbits                     (abs)        000F80
_PORTCbits                     (abs)        000F82
_PORTDbits                     (abs)        000F83
_PTCON0                        (abs)        000F7F
_PTCON1                        (abs)        000F7E
_PTPERH                        (abs)        000F7A
_PTPERL                        (abs)        000F7B
_PWMCON0                       (abs)        000F6F
_PWMCON1                       (abs)        000F6E
_RCREG                         (abs)        000FAE
_RCSTAbits                     (abs)        000FAB
_SPBRG                         (abs)        000FAF
_SPBRGH                        (abs)        000FB0
_T0CONbits                     (abs)        000FD5
_T5CON                         (abs)        000FB7
_T5CONbits                     (abs)        000FB7
_TMR0H                         (abs)        000FD7
_TMR0L                         (abs)        000FD6
_TRISA                         (abs)        000F92
_TRISB                         (abs)        000F93
_TRISC                         (abs)        000F94
_TRISCbits                     (abs)        000F94
_TRISD                         (abs)        000F95
_TXSTAbits                     (abs)        000FAC
__CFG_LVP$OFF                  (abs)        000000
__CFG_MCLRE$OFF                (abs)        000000
__CFG_OSC$IRCIO                (abs)        000000
__HRAM                         (abs)        000000
__Habs1                        abs1         000000
__Hbank0                       bank0        000000
__Hbank1                       bank1        000000
__Hbank2                       bank2        000000
__Hbigbss                      bigbss       000000
__Hbigdata                     bigdata      000000
__Hbigram                      bigram       000000
__Hbss                         bss          000000
__HbssBANK0                    bssBANK0     000000
__HbssCOMRAM                   bssCOMRAM    000000
__Hcinit                       cinit        000000
__Hclrtext                     clrtext      000000
__Hcomram                      comram       000000
__Hconfig                      config       30000E
__Hconst                       const        000000
__HcstackBANK0                 cstackBANK0  000000
__HcstackCOMRAM                cstackCOMRAM 000000
__Hdata                        data         000000
__Heeprom_data                 eeprom_data  000000
__Hfarbss                      farbss       000000
__Hfardata                     fardata      000000
__Hibigdata                    ibigdata     000000
__Hidata                       idata        000000
__Hidloc                       idloc        200008
__Hifardata                    ifardata     000000
__Hinit                        init         00007C
__Hintcode                     intcode      000078
__Hintcode_body                intcode_body 000000
__Hintcodelo                   intcodelo    000078
__Hintentry                    intentry     000000
__Hintret                      intret       000000
__Hintsave_regs                intsave_regs 000000
__Hirdata                      irdata       000000
__Hmediumconst                 mediumconst  000000
__HnvFARRAM                    nvFARRAM     000000
__Hnvbit                       nvbit        000000
__Hnvrram                      nvrram       000000
__Hparam                       rparam       000000
__Hpowerup                     powerup      000078
__Hram                         ram          000000
__Hramtop                      ramtop       000300
__Hrbit                        rbit         000000
__Hrbss                        rbss         000000
__Hrdata                       rdata        000000
__Hreset_vec                   reset_vec    000004
__Hrparam                      rparam       000000
__Hsfr                         sfr          000000
__Hsmallconst                  smallconst   000344
__Hspace_0                     (abs)        30000E
__Hspace_1                     (abs)        0000F9
__Hspace_2                     (abs)        000000
__Hstack                       stack        000000
__Hstruct                      struct       000000
__Htemp                        temp         00004E
__Htext                        text         000000
__Htext0                       text0        000000
__Htext1                       text1        000000
__Htext10                      text10       000000
__Htext11                      text11       000000
__Htext12                      text12       000000
__Htext13                      text13       000000
__Htext14                      text14       000000
__Htext15                      text15       000000
__Htext16                      text16       000000
__Htext17                      text17       000000
__Htext18                      text18       000000
__Htext19                      text19       000000
__Htext2                       text2        000000
__Htext20                      text20       000000
__Htext21                      text21       000000
__Htext22                      text22       000000
__Htext23                      text23       000000
__Htext24                      text24       000000
__Htext25                      text25       000000
__Htext26                      text26       000000
__Htext3                       text3        000000
__Htext4                       text4        000000
__Htext5                       text5        000000
__Htext6                       text6        000000
__Htext7                       text7        000000
__Htext8                       text8        000000
__Htext9                       text9        000000
__LRAM                         (abs)        000001
__Labs1                        abs1         000000
__Lbank0                       bank0        000000
__Lbank1                       bank1        000000
__Lbank2                       bank2        000000
__Lbigbss                      bigbss       000000
__Lbigdata                     bigdata      000000
__Lbigram                      bigram       000000
__Lbss                         bss          000000
__LbssBANK0                    bssBANK0     000000
__LbssCOMRAM                   bssCOMRAM    000000
__Lcinit                       cinit        000000
__Lclrtext                     clrtext      000000
__Lcomram                      comram       000000
__Lconfig                      config       300000
__Lconst                       const        000000
__LcstackBANK0                 cstackBANK0  000000
__LcstackCOMRAM                cstackCOMRAM 000000
__Ldata                        data         000000
__Leeprom_data                 eeprom_data  000000
__Lfarbss                      farbss       000000
__Lfardata                     fardata      000000
__Libigdata                    ibigdata     000000
__Lidata                       idata        000000
__Lidloc                       idloc        200000
__Lifardata                    ifardata     000000
__Linit                        init         000078
__Lintcode                     intcode      000008
__Lintcode_body                intcode_body 000000
__Lintcodelo                   intcodelo    000078
__Lintentry                    intentry     000000
__Lintret                      intret       000000
__Lintsave_regs                intsave_regs 000000
__Lirdata                      irdata       000000
__Lmediumconst                 mediumconst  000000
__LnvFARRAM                    nvFARRAM     000000
__Lnvbit                       nvbit        000000
__Lnvrram                      nvrram       000000
__Lparam                       rparam       000000
__Lpowerup                     powerup      000078
__Lram                         ram          000000
__Lramtop                      ramtop       000300
__Lrbit                        rbit         000000
__Lrbss                        rbss         000000
__Lrdata                       rdata        000000
__Lreset_vec                   reset_vec    000000
__Lrparam                      rparam       000000
__Lsfr                         sfr          000000
__Lsmallconst                  smallconst   000300
__Lspace_0                     (abs)        000000
__Lspace_1                     (abs)        000000
__Lspace_2                     (abs)        000000
__Lstack                       stack        000000
__Lstruct                      struct       000000
__Ltemp                        temp         00004D
__Ltext                        text         000000
__Ltext0                       text0        000000
__Ltext1                       text1        000000
__Ltext10                      text10       000000
__Ltext11                      text11       000000
__Ltext12                      text12       000000
__Ltext13                      text13       000000
__Ltext14                      text14       000000
__Ltext15                      text15       000000
__Ltext16                      text16       000000
__Ltext17                      text17       000000
__Ltext18                      text18       000000
__Ltext19                      text19       000000
__Ltext2                       text2        000000
__Ltext20                      text20       000000
__Ltext21                      text21       000000
__Ltext22                      text22       000000
__Ltext23                      text23       000000
__Ltext24                      text24       000000
__Ltext25                      text25       000000
__Ltext26                      text26       000000
__Ltext3                       text3        000000
__Ltext4                       text4        000000
__Ltext5                       text5        000000
__Ltext6                       text6        000000
__Ltext7                       text7        000000
__Ltext8                       text8        000000
__Ltext9                       text9        000000
__S0                           (abs)        30000E
__S1                           (abs)        0000F9
__S2                           (abs)        000000
___awdiv                       text22       0010F4
___awdiv@counter               cstackCOMRAM 000010
___awdiv@dividend              cstackCOMRAM 00000C
___awdiv@divisor               cstackCOMRAM 00000E
___awdiv@quotient              cstackCOMRAM 000012
___awdiv@sign                  cstackCOMRAM 000011
___inthi_sp                    stack        000000
___intlo_sp                    stack        000000
___lwdiv                       text9        0012CA
___lwdiv@counter               cstackCOMRAM 00000C
___lwdiv@dividend              cstackCOMRAM 000006
___lwdiv@divisor               cstackCOMRAM 000008
___lwdiv@quotient              cstackCOMRAM 00000A
___lwmod                       text8        00131C
___lwmod@counter               cstackCOMRAM 000011
___lwmod@dividend              cstackCOMRAM 00000D
___lwmod@divisor               cstackCOMRAM 00000F
___param_bank                  (abs)        000000
___rparam_used                 (abs)        000001
___sp                          stack        000000
___wmul                        text21       0013EA
___wmul@multiplicand           cstackCOMRAM 000008
___wmul@multiplier             cstackCOMRAM 000006
___wmul@product                cstackCOMRAM 00000A
__accesstop                    (abs)        000060
__activetblptr                 (abs)        000002
__end_of_E_TOG                 text26       0014CC
__end_of_InterruptHandlerHigh  intcode      000078
__end_of_LCD_clear             text12       001468
__end_of_LCD_init              text23       000DEE
__end_of_LCD_line              text11       0013BE
__end_of_LCD_out               text25       00126C
__end_of_LCD_send              text24       0013EA
__end_of_LCD_string            text10       00138E
__end_of___awdiv               text22       001178
__end_of___lwdiv               text9        00131C
__end_of___lwmod               text8        00135E
__end_of___wmul                text21       001410
__end_of__initialization       cinit        001420
__end_of_backwards             text19       0010F4
__end_of_dpowers               smallconst   00030B
__end_of_forwards              text18       00105E
__end_of_initPWM               text17       00144C
__end_of_init_RFID             text16       0014B6
__end_of_init_TIMER5           text15       00149C
__end_of_init_capture          text14       001482
__end_of_interrupt_EUSART      text13       0014E0
__end_of_main                  text0        000830
__end_of_print_IR              text6        000E9C
__end_of_print_RFID            text5        0011F4
__end_of_read_IR               text4        000A0E
__end_of_setMotorPWM           text20       000B90
__end_of_sprintf               text7        000D04
__end_of_stop                  text3        0012CA
__end_of_turnLeft              text2        000FC8
__end_of_turnRight             text1        000F32
__initialization               cinit        001410
__mediumconst                  mediumconst  000000
__pbssBANK0                    bssBANK0     0000F8
__pbssCOMRAM                   bssCOMRAM    000039
__pcinit                       cinit        001410
__pcstackBANK0                 cstackBANK0  000060
__pcstackCOMRAM                cstackCOMRAM 000001
__pintcode                     intcode      000008
__psmallconst                  smallconst   000300
__ptext0                       text0        000344
__ptext1                       text1        000E9C
__ptext10                      text10       00135E
__ptext11                      text11       00138E
__ptext12                      text12       00144C
__ptext13                      text13       0014CC
__ptext14                      text14       001468
__ptext15                      text15       001482
__ptext16                      text16       00149C
__ptext17                      text17       00142E
__ptext18                      text18       000FC8
__ptext19                      text19       00105E
__ptext2                       text2        000F32
__ptext20                      text20       000A0E
__ptext21                      text21       0013EA
__ptext22                      text22       0010F4
__ptext23                      text23       000D04
__ptext24                      text24       0013BE
__ptext25                      text25       0011F4
__ptext26                      text26       0014B6
__ptext3                       text3        00126C
__ptext4                       text4        000830
__ptext5                       text5        001178
__ptext6                       text6        000DEE
__ptext7                       text7        000B90
__ptext8                       text8        00131C
__ptext9                       text9        0012CA
__ramtop                       ramtop       000300
__size_of_E_TOG                (abs)        000000
__size_of_InterruptHandlerHigh (abs)        000000
__size_of_LCD_clear            (abs)        000000
__size_of_LCD_init             (abs)        000000
__size_of_LCD_line             (abs)        000000
__size_of_LCD_out              (abs)        000000
__size_of_LCD_send             (abs)        000000
__size_of_LCD_string           (abs)        000000
__size_of___awdiv              (abs)        000000
__size_of___lwdiv              (abs)        000000
__size_of___lwmod              (abs)        000000
__size_of___wmul               (abs)        000000
__size_of_backwards            (abs)        000000
__size_of_forwards             (abs)        000000
__size_of_initPWM              (abs)        000000
__size_of_init_RFID            (abs)        000000
__size_of_init_TIMER5          (abs)        000000
__size_of_init_capture         (abs)        000000
__size_of_interrupt_EUSART     (abs)        000000
__size_of_main                 (abs)        000000
__size_of_print_IR             (abs)        000000
__size_of_print_RFID           (abs)        000000
__size_of_read_IR              (abs)        000000
__size_of_setMotorPWM          (abs)        000000
__size_of_sprintf              (abs)        000000
__size_of_stop                 (abs)        000000
__size_of_turnLeft             (abs)        000000
__size_of_turnRight            (abs)        000000
__smallconst                   smallconst   000300
_backwards                     text19       00105E
_card_read                     bssBANK0     0000F8
_count_encoder                 bssCOMRAM    00003A
_dpowers                       smallconst   000301
_forwards                      text18       000FC8
_initPWM                       text17       00142E
_init_RFID                     text16       00149C
_init_TIMER5                   text15       001482
_init_capture                  text14       001468
_interrupt_EUSART              text13       0014CC
_main                          text0        000344
_print_IR                      text6        000DEE
_print_RFID                    text5        001178
_read_IR                       text4        000830
_setMotorPWM                   text20       000A0E
_sprintf                       text7        000B90
_stop                          text3        00126C
_string_rfid                   bssCOMRAM    00003C
_turnLeft                      text2        000F32
_turnRight                     text1        000E9C
backwards@mL                   cstackCOMRAM 00001B
backwards@mR                   cstackCOMRAM 00001D
btemp                          temp         00004D
end_of_initialization          cinit        001420
forwards@mL                    cstackCOMRAM 00001B
forwards@mR                    cstackCOMRAM 00001D
int$flags                      temp         00004D
intlevel0                      text         000000
intlevel1                      text         000000
intlevel2                      text         000000
intlevel3                      text         000000
main@PWMcycle                  cstackBANK0  0000D4
main@Values                    cstackBANK0  0000DE
main@buf                       cstackBANK0  0000C4
main@counter                   cstackBANK0  0000DD
main@diff                      cstackBANK0  0000D6
main@direction                 cstackBANK0  0000DB
main@forwardsDirection         cstackBANK0  000060
main@ii                        cstackBANK0  0000DA
main@mL                        cstackBANK0  0000E6
main@mR                        cstackBANK0  0000EF
main@threshold                 cstackBANK0  0000D8
print_IR@Values                cstackCOMRAM 000020
print_IR@buf                   cstackCOMRAM 000023
print_RFID@dis                 cstackCOMRAM 00000D
print_RFID@pa                  cstackCOMRAM 00000B
read_IR@Values                 cstackCOMRAM 000006
setMotorPWM@PWMduty            cstackCOMRAM 000019
setMotorPWM@m                  cstackCOMRAM 000014
sprintf@ap                     cstackCOMRAM 00001A
sprintf@c                      cstackCOMRAM 00001F
sprintf@f                      cstackCOMRAM 000014
sprintf@flag                   cstackCOMRAM 00001C
sprintf@prec                   cstackCOMRAM 000019
sprintf@sp                     cstackCOMRAM 000012
sprintf@val                    cstackCOMRAM 00001D
stackhi                        (abs)        0002FF
stacklo                        (abs)        0000F9
start                          init         000078
start_initialization           cinit        001410
stop@mL                        cstackCOMRAM 00001B
stop@mR                        cstackCOMRAM 00001D
ttemp5                         temp         00004E
ttemp6                         temp         000051
ttemp7                         temp         000055
turnLeft@mL                    cstackCOMRAM 00001B
turnLeft@mR                    cstackCOMRAM 00001D
turnRight@mL                   cstackCOMRAM 00001B
turnRight@mR                   cstackCOMRAM 00001D
wtemp8                         temp         00004E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 61 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ii              1  122[BANK0 ] unsigned char 
  threshold       2  120[BANK0 ] int 
  diff            2  118[BANK0 ] int 
  buf            16  100[BANK0 ] unsigned char [16]
  direction       2  123[BANK0 ] int 
  forwardsDire  100    0[BANK0 ] int [50]
  mR              9  143[BANK0 ] struct Motor
  mL              9  134[BANK0 ] struct Motor
  Values          8  126[BANK0 ] struct Sensor_ir
  PWMcycle        2  116[BANK0 ] int 
  counter         1  125[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0     152       0       0
      Temps:          6       0       0       0
      Totals:         6     152       0       0
Total ram usage:      158 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_init
		_LCD_line
		_LCD_string
		_backwards
		_forwards
		_initPWM
		_init_RFID
		_init_TIMER5
		_init_capture
		_interrupt_EUSART
		_print_IR
		_print_RFID
		_read_IR
		_sprintf
		_stop
		_turnLeft
		_turnRight
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _turnRight *****************
 Defined at:
		line 114 in file "motor.c"
 Parameters:    Size  Location     Type
  mL              2   26[COMRAM] PTR struct Motor
		 -> main@mL(9), 
  mR              2   28[COMRAM] PTR struct Motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _turnLeft *****************
 Defined at:
		line 95 in file "motor.c"
 Parameters:    Size  Location     Type
  mL              2   26[COMRAM] PTR struct Motor
		 -> main@mL(9), 
  mR              2   28[COMRAM] PTR struct Motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 71 in file "motor.c"
 Parameters:    Size  Location     Type
  mL              2   26[COMRAM] PTR struct Motor
		 -> main@mL(9), 
  mR              2   28[COMRAM] PTR struct Motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _read_IR *****************
 Defined at:
		line 38 in file "ir.c"
 Parameters:    Size  Location     Type
  Values          2    5[COMRAM] PTR struct Sensor_ir
		 -> main@Values(8), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          4       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _print_RFID *****************
 Defined at:
		line 27 in file "rfid.c"
 Parameters:    Size  Location     Type
  pa              2   10[COMRAM] PTR unsigned char 
		 -> string_rfid(17), 
  dis             2   12[COMRAM] PTR unsigned char 
		 -> string_rfid(17), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          6       0       0       0
      Totals:        10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_clear
		_LCD_line
		_LCD_send
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _print_IR *****************
 Defined at:
		line 123 in file "lcd.c"
 Parameters:    Size  Location     Type
  Values          2   31[COMRAM] PTR struct Sensor_ir
		 -> main@Values(8), 
 Auto vars:     Size  Location     Type
  buf            16   34[COMRAM] unsigned char [16]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:        16       0       0       0
      Temps:          1       0       0       0
      Totals:        19       0       0       0
Total ram usage:       19 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_clear
		_LCD_line
		_LCD_string
		_sprintf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 500 in file "/Applications/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
 Parameters:    Size  Location     Type
  sp              2   17[COMRAM] PTR unsigned char 
		 -> check_sum@buf_cs(16), main@buf(16), print_IR@buf(16), 
  f               2   19[COMRAM] PTR const unsigned char 
		 -> STR_5(16), STR_4(14), STR_3(6), STR_2(10), 
		 -> STR_1(9), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  val             2   28[COMRAM] unsigned int 
  ap              2   25[COMRAM] PTR void [1]
		 -> ?_sprintf(2), 
  len             2    0        unsigned int 
  c               1   30[COMRAM] unsigned char 
  flag            1   27[COMRAM] unsigned char 
  prec            1   24[COMRAM] char 
 Return value:  Size  Location     Type
                  2   17[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         7       0       0       0
      Temps:          1       0       0       0
      Totals:        14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_print_IR
		_main
		_check_sum
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 7 in file "/Applications/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
 Parameters:    Size  Location     Type
  dividend        2   12[COMRAM] unsigned int 
  divisor         2   14[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   12[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 7 in file "/Applications/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    5[COMRAM] unsigned int 
  divisor         2    7[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    9[COMRAM] unsigned int 
  counter         1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    5[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _LCD_string *****************
 Defined at:
		line 101 in file "lcd.c"
 Parameters:    Size  Location     Type
  string          2    9[COMRAM] PTR unsigned char 
		 -> check_sum@buf_cs(16), main@buf(16), print_IR@buf(16), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_send
 This function is called by:
		_print_IR
		_main
		_check_sum
 This function uses a non-reentrant model


 *************** function _LCD_line *****************
 Defined at:
		line 89 in file "lcd.c"
 Parameters:    Size  Location     Type
  line            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  line            1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_send
 This function is called by:
		_print_IR
		_main
		_print_RFID
 This function uses a non-reentrant model


 *************** function _LCD_clear *****************
 Defined at:
		line 115 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_send
 This function is called by:
		_print_IR
		_print_RFID
 This function uses a non-reentrant model


 *************** function _interrupt_EUSART *****************
 Defined at:
		line 14 in file "rfid.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _init_capture *****************
 Defined at:
		line 25 in file "ir.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _init_TIMER5 *****************
 Defined at:
		line 6 in file "ir.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _init_RFID *****************
 Defined at:
		line 3 in file "rfid.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initPWM *****************
 Defined at:
		line 10 in file "motor.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _forwards *****************
 Defined at:
		line 152 in file "motor.c"
 Parameters:    Size  Location     Type
  mL              2   26[COMRAM] PTR struct Motor
		 -> main@mL(9), 
  mR              2   28[COMRAM] PTR struct Motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _backwards *****************
 Defined at:
		line 181 in file "motor.c"
 Parameters:    Size  Location     Type
  mL              2   26[COMRAM] PTR struct Motor
		 -> main@mL(9), 
  mR              2   28[COMRAM] PTR struct Motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setMotorPWM *****************
 Defined at:
		line 24 in file "motor.c"
 Parameters:    Size  Location     Type
  m               2   19[COMRAM] PTR struct Motor
		 -> main@mR(9), main@mL(9), 
 Auto vars:     Size  Location     Type
  PWMduty         2   24[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          3       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_stop
		_turnLeft
		_turnRight
		_forwards
		_backwards
		_accelerate
		_accelerate2
		_decelerate
		_smoothRight
		_smoothLeft
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    5[COMRAM] unsigned int 
  multiplicand    2    7[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    9[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    5[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "/Applications/microchip/xc8/v2.00/pic/sources/c90/common/awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   11[COMRAM] int 
  divisor         2   13[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   17[COMRAM] int 
  sign            1   16[COMRAM] unsigned char 
  counter         1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   11[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function _LCD_init *****************
 Defined at:
		line 49 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_out
		_LCD_send
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_send *****************
 Defined at:
		line 34 in file "lcd.c"
 Parameters:    Size  Location     Type
  Byte            1    wreg     unsigned char 
  type            1    7[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Byte            1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_out
 This function is called by:
		_LCD_init
		_LCD_line
		_LCD_string
		_LCD_clear
		_print_RFID
 This function uses a non-reentrant model


 *************** function _LCD_out *****************
 Defined at:
		line 19 in file "lcd.c"
 Parameters:    Size  Location     Type
  number          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  number          1    6[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_E_TOG
 This function is called by:
		_LCD_send
		_LCD_init
 This function uses a non-reentrant model


 *************** function _E_TOG *****************
 Defined at:
		line 4 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_out
 This function uses a non-reentrant model


 *************** function _InterruptHandlerHigh *****************
 Defined at:
		line 21 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  rx_char         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          4       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
/Applications/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c
		___wmul        		CODE           	13EA	0000	39

/Applications/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c estimated size: 39

/Applications/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c
		___lwdiv       		CODE           	12CA	0000	83

/Applications/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c estimated size: 83

/Applications/microchip/xc8/v2.00/pic/sources/c90/common/awdiv.c
		___awdiv       		CODE           	10F4	0000	133

/Applications/microchip/xc8/v2.00/pic/sources/c90/common/awdiv.c estimated size: 133

motor.c
		_turnLeft      		CODE           	0F32	0000	151
		_stop          		CODE           	126C	0000	95
		_turnRight     		CODE           	0E9C	0000	151
		_forwards      		CODE           	0FC8	0000	151
		_setMotorPWM   		CODE           	0A0E	0000	387
		_initPWM       		CODE           	142E	0000	31
		_backwards     		CODE           	105E	0000	151

motor.c estimated size: 1117

rfid.c
		_interrupt_EUSART		CODE           	14CC	0000	21
		_print_RFID    		CODE           	1178	0000	125
		_init_RFID     		CODE           	149C	0000	27

rfid.c estimated size: 173

shared
		_dpowers       		SMALLCONST     	0301	0000	11
		__initialization		CODE           	1410	0000	17

shared estimated size: 28

ir.c
		_read_IR       		CODE           	0830	0000	479
		_init_capture  		CODE           	1468	0000	27
		_init_TIMER5   		CODE           	1482	0000	27

ir.c estimated size: 533

lcd.c
		_LCD_clear     		CODE           	144C	0000	29
		_E_TOG         		CODE           	14B6	0000	23
		_LCD_string    		CODE           	135E	0000	49
		_print_IR      		CODE           	0DEE	0000	175
		_LCD_init      		CODE           	0D04	0000	235
		_LCD_out       		CODE           	11F4	0000	121
		_LCD_send      		CODE           	13BE	0000	45
		_LCD_line      		CODE           	138E	0000	49

lcd.c estimated size: 726

main.c
		_main          		CODE           	0344	0000	1261
		_InterruptHandlerHigh		CODE           	0008	0000	113

main.c estimated size: 1374

/Applications/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c
		_sprintf       		CODE           	0B90	0000	373

/Applications/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c estimated size: 373

/Applications/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c
		___lwmod       		CODE           	131C	0000	67

/Applications/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c estimated size: 67

