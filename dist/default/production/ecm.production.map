Microchip MPLAB XC8 Compiler V2.00 ()

Linker command line:

-W-3 --edf=/Applications/microchip/xc8/v2.00/pic/dat/en_msgs.txt -cs \
  -h+dist/default/production/ecm.production.sym \
  --cmf=dist/default/production/ecm.production.cmf -z -Q18F4331 \
  -o/tmp/xcoJHbWxj --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/ecm.production.map -E1 -ver=XC8 --acfsm=1493 \
  -ASTACK=0A8h-02ffh -pstack=STACK -ACODE=00h-01FFFh -ACONST=00h-01FFFh \
  -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-02FFh -ABIGRAM=01h-02FFh -ARAM=060h-0FFh,0100h-01FFhx2 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ASFR=0F60h-0FFFh -preset_vec=00h,intcode,intcodelo,powerup,init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xc1eRe8D6.o dist/default/production/ecm.production.o 

Object code version is 3.11

Machine type is 18F4331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xc1eRe8D6.o
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/ecm.production.o
                smallconst                          300      300       16      180       0
                text21                              FB8      FB8       16      18B       0
                text20                              C16      C16       78      18B       0
                text19                              F3C      F3C       2C      18B       0
                text18                              7E6      7E6       EA      18B       0
                text17                              F9E      F9E       1A      18B       0
                text16                              F68      F68       1C      18B       0
                text15                              E5E      E5E       4E      18B       0
                text14                              EF8      EF8       44      18B       0
                text13                              6E2      6E2      104      18B       0
                text12                              8D0      8D0       E4      18B       0
                text11                              FCE      FCE        2      18B       0
                text10                              9B4      9B4       DE      18B       0
                text9                               EAC      EAC       4C      18B       0
                text8                               DBE      DBE       52      18B       0
                text7                               A92      A92       D6      18B       0
                text6                               316      316      226      18B       0
                text5                               53C      53C      1A6      18B       0
                text4                               CFA      CFA       66      18B       0
                text3                               D60      D60       5E      18B       0
                text2                               B68      B68       AE      18B       0
                text1                               E10      E10       4E      18B       0
                text0                               C8E      C8E       6C      18B       0
                cstackCOMRAM                          1        1       5E        1       1
                cstackBANK0                          88       88       20       60       1
                bssBANK0                             60       60       28       60       1
                cinit                               F84      F84       1A      18B       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text21                              FB8      FB8       16         0
                text20                              C16      C16       78         0
                text19                              F3C      F3C       2C         0
                text18                              7E6      7E6       EA         0
                text17                              F9E      F9E       1A         0
                text16                              F68      F68       1C         0
                text15                              E5E      E5E       4E         0
                text14                              EF8      EF8       44         0
                text13                              6E2      6E2      104         0
                text12                              8D0      8D0       E4         0
                text11                              FCE      FCE        2         0
                text10                              9B4      9B4       DE         0
                text9                               EAC      EAC       4C         0
                text8                               DBE      DBE       52         0
                text7                               A92      A92       D6         0
                text6                               316      316      226         0
                text5                               53C      53C      1A6         0
                text4                               CFA      CFA       66         0
                text3                               D60      D60       5E         0
                text2                               B68      B68       AE         0
                text1                               E10      E10       4E         0
                text0                               C8E      C8E       6C         0
                cinit                               F84      F84       1A         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       16         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       5E         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          88       88       20         1
                bssBANK0                             60       60       28         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00005E  00005F         1       1  COMRAM  
                bssBANK0                       000060  000048  0000A8        60       1  BANK0   
                smallconst                     000300  000016  000316       180       0  SMALLCON
                text6                          000316  000CBA  000FD0       18B       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000A8-0000FF               58
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           00005F-00005F                1
                         0000A8-0002FF              258
        CODE             000004-0002FF              2FC
                         000FD0-001FFF             1030
        COMRAM           00005F-00005F                1
        CONST            000004-0002FF              2FC
                         000FD0-001FFF             1030
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000FD0-001FFF             1030
        RAM              0000A8-0002FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000FD0-001FFF              100
        STACK            0000A8-0002FF              258

                                  Symbol Table

?___lodiv                cstackCOMRAM 000001
?___lomod                cstackCOMRAM 000001
?_pad                    cstackCOMRAM 000011
?_sprintf                cstackCOMRAM 000056
?_strlen                 cstackCOMRAM 000001
?_utoa                   cstackCOMRAM 00001C
?_vfpfcnvrt              cstackCOMRAM 00003C
?_vfprintf               cstackCOMRAM 00004E
LCD_line@line            cstackCOMRAM 000005
LCD_out@number           cstackCOMRAM 000002
LCD_send@Byte            cstackCOMRAM 000004
LCD_send@type            cstackCOMRAM 000003
LCD_string@string        cstackCOMRAM 000005
_ANSEL0                  (abs)        000FB8
_ANSEL1                  (abs)        000FB9
_CAP1BUFH                (abs)        000F69
_CAP1BUFL                (abs)        000F68
_CAP1CON                 (abs)        000F63
_CAP2BUFH                (abs)        000F67
_CAP2BUFL                (abs)        000F66
_CAP2CON                 (abs)        000F62
_DFLTCON                 (abs)        000F60
_E_TOG                   text21       000FB8
_LATA                    (abs)        000F89
_LATC                    (abs)        000F8B
_LATD                    (abs)        000F8C
_LCD_clear               text16       000F68
_LCD_init                text18       0007E6
_LCD_line                text15       000E5E
_LCD_out                 text20       000C16
_LCD_send                text19       000F3C
_LCD_string              text14       000EF8
_OSCCON                  (abs)        000FD3
_OSCCONbits              (abs)        000FD3
_PORTAbits               (abs)        000F80
_PORTCbits               (abs)        000F82
_PORTDbits               (abs)        000F83
_T5CON                   (abs)        000FB7
_T5CONbits               (abs)        000FB7
_TRISA                   (abs)        000F92
_TRISC                   (abs)        000F94
_TRISD                   (abs)        000F95
__CFG_LVP$OFF            (abs)        000000
__CFG_MCLRE$OFF          (abs)        000000
__CFG_OSC$IRCIO          (abs)        000000
__HRAM                   (abs)        000000
__Habs1                  abs1         000000
__Hbank0                 bank0        000000
__Hbank1                 bank1        000000
__Hbank2                 bank2        000000
__Hbigbss                bigbss       000000
__Hbigdata               bigdata      000000
__Hbigram                bigram       000000
__Hbss                   bss          000000
__HbssBANK0              bssBANK0     000000
__Hcinit                 cinit        000000
__Hclrtext               clrtext      000000
__Hcomram                comram       000000
__Hconfig                config       30000E
__Hconst                 const        000000
__HcstackBANK0           cstackBANK0  000000
__HcstackCOMRAM          cstackCOMRAM 000000
__Hdata                  data         000000
__Heeprom_data           eeprom_data  000000
__Hfarbss                farbss       000000
__Hfardata               fardata      000000
__Hibigdata              ibigdata     000000
__Hidata                 idata        000000
__Hidloc                 idloc        200008
__Hifardata              ifardata     000000
__Hinit                  init         000004
__Hintcode               intcode      000000
__Hintcode_body          intcode_body 000000
__Hintcodelo             intcodelo    000000
__Hintentry              intentry     000000
__Hintret                intret       000000
__Hintsave_regs          intsave_regs 000000
__Hirdata                irdata       000000
__Hmediumconst           mediumconst  000000
__HnvFARRAM              nvFARRAM     000000
__Hnvbit                 nvbit        000000
__Hnvrram                nvrram       000000
__Hparam                 rparam       000000
__Hpowerup               powerup      000000
__Hram                   ram          000000
__Hramtop                ramtop       000300
__Hrbit                  rbit         000000
__Hrbss                  rbss         000000
__Hrdata                 rdata        000000
__Hreset_vec             reset_vec    000000
__Hrparam                rparam       000000
__Hsfr                   sfr          000000
__Hsmallconst            smallconst   000316
__Hspace_0               (abs)        30000E
__Hspace_1               (abs)        0000A8
__Hspace_2               (abs)        000000
__Hstack                 stack        000000
__Hstruct                struct       000000
__Htemp                  temp         000000
__Htext                  text         000000
__Htext0                 text0        000000
__Htext1                 text1        000000
__Htext10                text10       000000
__Htext11                text11       000000
__Htext12                text12       000000
__Htext13                text13       000000
__Htext14                text14       000000
__Htext15                text15       000000
__Htext16                text16       000000
__Htext17                text17       000000
__Htext18                text18       000000
__Htext19                text19       000000
__Htext2                 text2        000000
__Htext20                text20       000000
__Htext21                text21       000000
__Htext3                 text3        000000
__Htext4                 text4        000000
__Htext5                 text5        000000
__Htext6                 text6        000000
__Htext7                 text7        000000
__Htext8                 text8        000000
__Htext9                 text9        000000
__LRAM                   (abs)        000001
__Labs1                  abs1         000000
__Lbank0                 bank0        000000
__Lbank1                 bank1        000000
__Lbank2                 bank2        000000
__Lbigbss                bigbss       000000
__Lbigdata               bigdata      000000
__Lbigram                bigram       000000
__Lbss                   bss          000000
__LbssBANK0              bssBANK0     000000
__Lcinit                 cinit        000000
__Lclrtext               clrtext      000000
__Lcomram                comram       000000
__Lconfig                config       300000
__Lconst                 const        000000
__LcstackBANK0           cstackBANK0  000000
__LcstackCOMRAM          cstackCOMRAM 000000
__Ldata                  data         000000
__Leeprom_data           eeprom_data  000000
__Lfarbss                farbss       000000
__Lfardata               fardata      000000
__Libigdata              ibigdata     000000
__Lidata                 idata        000000
__Lidloc                 idloc        200000
__Lifardata              ifardata     000000
__Linit                  init         000000
__Lintcode               intcode      000000
__Lintcode_body          intcode_body 000000
__Lintcodelo             intcodelo    000000
__Lintentry              intentry     000000
__Lintret                intret       000000
__Lintsave_regs          intsave_regs 000000
__Lirdata                irdata       000000
__Lmediumconst           mediumconst  000000
__LnvFARRAM              nvFARRAM     000000
__Lnvbit                 nvbit        000000
__Lnvrram                nvrram       000000
__Lparam                 rparam       000000
__Lpowerup               powerup      000000
__Lram                   ram          000000
__Lramtop                ramtop       000300
__Lrbit                  rbit         000000
__Lrbss                  rbss         000000
__Lrdata                 rdata        000000
__Lreset_vec             reset_vec    000000
__Lrparam                rparam       000000
__Lsfr                   sfr          000000
__Lsmallconst            smallconst   000300
__Lspace_0               (abs)        000000
__Lspace_1               (abs)        000000
__Lspace_2               (abs)        000000
__Lstack                 stack        000000
__Lstruct                struct       000000
__Ltemp                  temp         000000
__Ltext                  text         000000
__Ltext0                 text0        000000
__Ltext1                 text1        000000
__Ltext10                text10       000000
__Ltext11                text11       000000
__Ltext12                text12       000000
__Ltext13                text13       000000
__Ltext14                text14       000000
__Ltext15                text15       000000
__Ltext16                text16       000000
__Ltext17                text17       000000
__Ltext18                text18       000000
__Ltext19                text19       000000
__Ltext2                 text2        000000
__Ltext20                text20       000000
__Ltext21                text21       000000
__Ltext3                 text3        000000
__Ltext4                 text4        000000
__Ltext5                 text5        000000
__Ltext6                 text6        000000
__Ltext7                 text7        000000
__Ltext8                 text8        000000
__Ltext9                 text9        000000
__S0                     (abs)        30000E
__S1                     (abs)        0000A8
__S2                     (abs)        000000
___inthi_sp              stack        000000
___intlo_sp              stack        000000
___lodiv                 text13       0006E2
___lodiv@counter         cstackCOMRAM 000019
___lodiv@dividend        cstackCOMRAM 000001
___lodiv@divisor         cstackCOMRAM 000009
___lodiv@quotient        cstackCOMRAM 000011
___lomod                 text12       0008D0
___lomod@counter         cstackCOMRAM 000011
___lomod@dividend        cstackCOMRAM 000001
___lomod@divisor         cstackCOMRAM 000009
___param_bank            (abs)        000000
___rparam_used           (abs)        000001
___sp                    stack        000000
__accesstop              (abs)        000060
__activetblptr           (abs)        000001
__end_of_E_TOG           text21       000FCE
__end_of_LCD_clear       text16       000F84
__end_of_LCD_init        text18       0008D0
__end_of_LCD_line        text15       000EAC
__end_of_LCD_out         text20       000C8E
__end_of_LCD_send        text19       000F68
__end_of_LCD_string      text14       000F3C
__end_of___lodiv         text13       0007E6
__end_of___lomod         text12       0009B4
__end_of__initialization cinit        000F90
__end_of_fputc           text10       000A92
__end_of_fputs           text9        000EF8
__end_of_init_capture    text17       000FB8
__end_of_main            text0        000CFA
__end_of_pad             text7        000B68
__end_of_print_IR        text2        000C16
__end_of_putch           text11       000FD0
__end_of_read_IR         text1        000E5E
__end_of_sprintf         text3        000DBE
__end_of_strlen          text8        000E10
__end_of_utoa            text6        00053C
__end_of_vfpfcnvrt       text5        0006E2
__end_of_vfprintf        text4        000D60
__initialization         cinit        000F84
__mediumconst            mediumconst  000000
__pbssBANK0              bssBANK0     000060
__pcinit                 cinit        000F84
__pcstackBANK0           cstackBANK0  000088
__pcstackCOMRAM          cstackCOMRAM 000001
__psmallconst            smallconst   000300
__ptext0                 text0        000C8E
__ptext1                 text1        000E10
__ptext10                text10       0009B4
__ptext11                text11       000FCE
__ptext12                text12       0008D0
__ptext13                text13       0006E2
__ptext14                text14       000EF8
__ptext15                text15       000E5E
__ptext16                text16       000F68
__ptext17                text17       000F9E
__ptext18                text18       0007E6
__ptext19                text19       000F3C
__ptext2                 text2        000B68
__ptext20                text20       000C16
__ptext21                text21       000FB8
__ptext3                 text3        000D60
__ptext4                 text4        000CFA
__ptext5                 text5        00053C
__ptext6                 text6        000316
__ptext7                 text7        000A92
__ptext8                 text8        000DBE
__ptext9                 text9        000EAC
__ramtop                 ramtop       000300
__size_of_E_TOG          (abs)        000000
__size_of_LCD_clear      (abs)        000000
__size_of_LCD_init       (abs)        000000
__size_of_LCD_line       (abs)        000000
__size_of_LCD_out        (abs)        000000
__size_of_LCD_send       (abs)        000000
__size_of_LCD_string     (abs)        000000
__size_of___lodiv        (abs)        000000
__size_of___lomod        (abs)        000000
__size_of_fputc          (abs)        000000
__size_of_fputs          (abs)        000000
__size_of_init_capture   (abs)        000000
__size_of_main           (abs)        000000
__size_of_pad            (abs)        000000
__size_of_print_IR       (abs)        000000
__size_of_putch          (abs)        000000
__size_of_read_IR        (abs)        000000
__size_of_sprintf        (abs)        000000
__size_of_strlen         (abs)        000000
__size_of_utoa           (abs)        000000
__size_of_vfpfcnvrt      (abs)        000000
__size_of_vfprintf       (abs)        000000
__smallconst             smallconst   000300
_dbuf                    bssBANK0     000068
_flags                   bssBANK0     000066
_fputc                   text10       0009B4
_fputs                   text9        000EAC
_init_capture            text17       000F9E
_main                    text0        000C8E
_nout                    bssBANK0     000060
_pad                     text7        000A92
_prec                    bssBANK0     000064
_print_IR                text2        000B68
_putch                   text11       000FCE
_read_IR                 text1        000E10
_sprintf                 text3        000D60
_strlen                  text8        000DBE
_utoa                    text6        000316
_vfpfcnvrt               text5        00053C
_vfprintf                text4        000CFA
_width                   bssBANK0     000062
end_of_initialization    cinit        000F90
fputc@c                  cstackCOMRAM 000001
fputc@fp                 cstackCOMRAM 000003
fputs@c                  cstackCOMRAM 00000E
fputs@fp                 cstackCOMRAM 00000C
fputs@i                  cstackCOMRAM 00000F
fputs@s                  cstackCOMRAM 00000A
intlevel0                text         000000
intlevel1                text         000000
intlevel2                text         000000
intlevel3                text         000000
main@Values              cstackBANK0  0000A4
pad@buf                  cstackCOMRAM 000013
pad@fp                   cstackCOMRAM 000011
pad@i                    cstackCOMRAM 000018
pad@p                    cstackCOMRAM 000015
pad@w                    cstackCOMRAM 00001A
print_IR@Values          cstackCOMRAM 00005C
print_IR@buf             cstackBANK0  000092
read_IR@Values           cstackCOMRAM 000001
sprintf@ap               cstackBANK0  00008A
sprintf@f                cstackBANK0  00008C
sprintf@fmt              cstackCOMRAM 000058
sprintf@ret              cstackBANK0  000088
sprintf@s                cstackCOMRAM 000056
stackhi                  (abs)        0002FF
stacklo                  (abs)        0000A8
start                    init         000000
start_initialization     cinit        000F84
strlen@a                 cstackCOMRAM 000005
strlen@s                 cstackCOMRAM 000001
utoa@d                   cstackCOMRAM 00001E
utoa@fp                  cstackCOMRAM 00001C
utoa@i                   cstackCOMRAM 00003A
utoa@n                   cstackCOMRAM 000032
utoa@p                   cstackCOMRAM 00002E
utoa@w                   cstackCOMRAM 000030
vfpfcnvrt@ap             cstackCOMRAM 000040
vfpfcnvrt@fmt            cstackCOMRAM 00003E
vfpfcnvrt@fp             cstackCOMRAM 00003C
vfpfcnvrt@llu            cstackCOMRAM 000046
vfprintf@ap              cstackCOMRAM 000052
vfprintf@cfmt            cstackCOMRAM 000054
vfprintf@fmt             cstackCOMRAM 000050
vfprintf@fp              cstackCOMRAM 00004E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 21 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  Values          4   28[BANK0 ] struct Sensor_ir
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels required when called:    9
 This function calls:
		_LCD_init
		_init_capture
		_print_IR
		_read_IR
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _read_IR *****************
 Defined at:
		line 52 in file "ir.c"
 Parameters:    Size  Location     Type
  Values          2    0[COMRAM] PTR struct Sensor_ir
		 -> main@Values(4), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          2       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _print_IR *****************
 Defined at:
		line 123 in file "lcd.c"
 Parameters:    Size  Location     Type
  Values          2   91[COMRAM] PTR struct Sensor_ir
		 -> main@Values(4), 
 Auto vars:     Size  Location     Type
  buf            16   10[BANK0 ] unsigned char [16]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0      16       0       0
      Temps:          1       0       0       0
      Totals:         3      16       0       0
Total ram usage:       19 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_LCD_clear
		_LCD_line
		_LCD_string
		_sprintf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 9 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_sprintf.c"
 Parameters:    Size  Location     Type
  s               2   85[COMRAM] PTR unsigned char 
		 -> print_IR@buf(16), 
  fmt             2   87[COMRAM] PTR const unsigned char 
		 -> STR_2(10), STR_1(9), 
 Auto vars:     Size  Location     Type
  f               6    4[BANK0 ] struct _IO_FILE
  ap              2    2[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
  ret             2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  2   85[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         0      10       0       0
      Temps:          0       0       0       0
      Totals:         6      10       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_vfprintf
 This function is called by:
		_print_IR
 This function uses a non-reentrant model


 *************** function _vfprintf *****************
 Defined at:
		line 1368 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   77[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  fmt             2   79[COMRAM] PTR const unsigned char 
		 -> STR_2(10), STR_1(9), 
  ap              2   81[COMRAM] PTR PTR void 
		 -> sprintf@ap(2), 
 Auto vars:     Size  Location     Type
  cfmt            2   83[COMRAM] PTR unsigned char 
		 -> STR_2(10), STR_1(9), 
 Return value:  Size  Location     Type
                  2   77[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_vfpfcnvrt
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _vfpfcnvrt *****************
 Defined at:
		line 670 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   59[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  fmt             2   61[COMRAM] PTR PTR unsigned char 
		 -> vfprintf@cfmt(2), 
  ap              2   63[COMRAM] PTR PTR void 
		 -> sprintf@ap(2), 
 Auto vars:     Size  Location     Type
  llu             8   69[COMRAM] unsigned long long 
  ll              8    0        long long 
  f               4    0        long long 
  vp              3    0        PTR void 
  ct              3    0        unsigned char [3]
  cp              3    0        PTR unsigned char 
  i               2    0        int 
  done            2    0        int 
  c               1    0        unsigned char 
 Return value:  Size  Location     Type
                  2   59[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         8       0       0       0
      Temps:          4       0       0       0
      Totals:        18       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_fputc
		_utoa
 This function is called by:
		_vfprintf
 This function uses a non-reentrant model


 *************** function _utoa *****************
 Defined at:
		line 593 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   27[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  d               8   29[COMRAM] unsigned long long 
 Auto vars:     Size  Location     Type
  n               8   49[COMRAM] unsigned long long 
  i               2   57[COMRAM] int 
  w               2   47[COMRAM] int 
  p               2   45[COMRAM] int 
 Return value:  Size  Location     Type
                  2   27[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:        10       0       0       0
      Locals:        14       0       0       0
      Temps:          8       0       0       0
      Totals:        32       0       0       0
Total ram usage:       32 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___lodiv
		___lomod
		_pad
 This function is called by:
		_vfpfcnvrt
 This function uses a non-reentrant model


 *************** function _pad *****************
 Defined at:
		line 72 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   16[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  buf             2   18[COMRAM] PTR unsigned char 
		 -> dbuf(32), 
  p               2   20[COMRAM] int 
 Auto vars:     Size  Location     Type
  w               2   25[COMRAM] int 
  i               2   23[COMRAM] int 
 Return value:  Size  Location     Type
                  2   16[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         4       0       0       0
      Temps:          1       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_fputc
		_fputs
		_strlen
 This function is called by:
		_utoa
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 12 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c"
 Parameters:    Size  Location     Type
  s               2    0[COMRAM] PTR const unsigned char 
		 -> dbuf(32), 
 Auto vars:     Size  Location     Type
  a               2    4[COMRAM] PTR const unsigned char 
		 -> dbuf(32), 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_pad
 This function uses a non-reentrant model


 *************** function _fputs *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputs.c"
 Parameters:    Size  Location     Type
  s               2    9[COMRAM] PTR const unsigned char 
		 -> dbuf(32), 
  fp              2   11[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
 Auto vars:     Size  Location     Type
  i               2   14[COMRAM] int 
  c               1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    9[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_fputc
 This function is called by:
		_pad
 This function uses a non-reentrant model


 *************** function _fputc *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputc.c"
 Parameters:    Size  Location     Type
  c               2    0[COMRAM] int 
  fp              2    2[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          5       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_putch
 This function is called by:
		_pad
		_vfpfcnvrt
		_fputs
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_fputc
 This function uses a non-reentrant model


 *************** function ___lomod *****************
 Defined at:
		line 9 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lomod.c"
 Parameters:    Size  Location     Type
  dividend        8    0[COMRAM] unsigned long long 
  divisor         8    8[COMRAM] unsigned long long 
 Auto vars:     Size  Location     Type
  counter         1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  8    0[COMRAM] unsigned long long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:        16       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:        17       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_utoa
 This function uses a non-reentrant model


 *************** function ___lodiv *****************
 Defined at:
		line 9 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lodiv.c"
 Parameters:    Size  Location     Type
  dividend        8    0[COMRAM] unsigned long long 
  divisor         8    8[COMRAM] unsigned long long 
 Auto vars:     Size  Location     Type
  quotient        8   16[COMRAM] unsigned long long 
  counter         1   24[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  8    0[COMRAM] unsigned long long 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:        16       0       0       0
      Locals:         9       0       0       0
      Temps:          0       0       0       0
      Totals:        25       0       0       0
Total ram usage:       25 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_utoa
 This function uses a non-reentrant model


 *************** function _LCD_string *****************
 Defined at:
		line 101 in file "lcd.c"
 Parameters:    Size  Location     Type
  string          2    4[COMRAM] PTR unsigned char 
		 -> print_IR@buf(16), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_send
 This function is called by:
		_print_IR
 This function uses a non-reentrant model


 *************** function _LCD_line *****************
 Defined at:
		line 89 in file "lcd.c"
 Parameters:    Size  Location     Type
  line            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  line            1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_send
 This function is called by:
		_print_IR
 This function uses a non-reentrant model


 *************** function _LCD_clear *****************
 Defined at:
		line 115 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_send
 This function is called by:
		_print_IR
 This function uses a non-reentrant model


 *************** function _init_capture *****************
 Defined at:
		line 27 in file "ir.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_init *****************
 Defined at:
		line 49 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_out
		_LCD_send
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_send *****************
 Defined at:
		line 34 in file "lcd.c"
 Parameters:    Size  Location     Type
  Byte            1    wreg     unsigned char 
  type            1    2[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Byte            1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_out
 This function is called by:
		_LCD_init
		_LCD_line
		_LCD_string
		_LCD_clear
 This function uses a non-reentrant model


 *************** function _LCD_out *****************
 Defined at:
		line 19 in file "lcd.c"
 Parameters:    Size  Location     Type
  number          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  number          1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_E_TOG
 This function is called by:
		_LCD_send
		_LCD_init
 This function uses a non-reentrant model


 *************** function _E_TOG *****************
 Defined at:
		line 4 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_out
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
/Applications/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c
		_strlen        		CODE           	0DBE	0000	83

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c estimated size: 83

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/putch.c
		_putch         		CODE           	0FCE	0000	3

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/putch.c estimated size: 3

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_sprintf.c
		_sprintf       		CODE           	0D60	0000	95

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_sprintf.c estimated size: 95

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lodiv.c
		___lodiv       		CODE           	06E2	0000	261

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lodiv.c estimated size: 261

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputs.c
		_fputs         		CODE           	0EAC	0000	77

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputs.c estimated size: 77

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c
		_vfpfcnvrt     		CODE           	053C	0000	423
		_pad           		CODE           	0A92	0000	215
		_vfprintf      		CODE           	0CFA	0000	103
		_utoa          		CODE           	0316	0000	551

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c estimated size: 1292

shared
		__initialization		CODE           	0F84	0000	13

shared estimated size: 13

ir.c
		_read_IR       		CODE           	0E10	0000	79
		_init_capture  		CODE           	0F9E	0000	27

ir.c estimated size: 106

lcd.c
		_LCD_clear     		CODE           	0F68	0000	29
		_E_TOG         		CODE           	0FB8	0000	23
		_LCD_string    		CODE           	0EF8	0000	69
		_print_IR      		CODE           	0B68	0000	175
		_LCD_init      		CODE           	07E6	0000	235
		_LCD_out       		CODE           	0C16	0000	121
		_LCD_send      		CODE           	0F3C	0000	45
		_LCD_line      		CODE           	0E5E	0000	79

lcd.c estimated size: 776

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputc.c
		_fputc         		CODE           	09B4	0000	223

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputc.c estimated size: 223

main.c
		_main          		CODE           	0C8E	0000	109

main.c estimated size: 109

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lomod.c
		___lomod       		CODE           	08D0	0000	229

/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lomod.c estimated size: 229

