

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Nov 30 11:58:30 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4331 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   108                           DFLTCON equ 0F60h ;# 
   109  0000                     # 118 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   110                           CAP3CON equ 0F61h ;# 
   111  0000                     # 177 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   112                           CAP2CON equ 0F62h ;# 
   113  0000                     # 236 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   114                           CAP1CON equ 0F63h ;# 
   115  0000                     # 295 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   116                           CAP3BUFL equ 0F64h ;# 
   117  0000                     # 300 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   118                           MAXCNTL equ 0F64h ;# 
   119  0000                     # 307 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   120                           CAP3BUFH equ 0F65h ;# 
   121  0000                     # 312 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   122                           MAXCNTH equ 0F65h ;# 
   123  0000                     # 319 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   124                           CAP2BUFL equ 0F66h ;# 
   125  0000                     # 324 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   126                           POSCNTL equ 0F66h ;# 
   127  0000                     # 331 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   128                           CAP2BUFH equ 0F67h ;# 
   129  0000                     # 336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   130                           POSCNTH equ 0F67h ;# 
   131  0000                     # 343 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   132                           CAP1BUFL equ 0F68h ;# 
   133  0000                     # 348 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   134                           VELRL equ 0F68h ;# 
   135  0000                     # 355 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   136                           CAP1BUFH equ 0F69h ;# 
   137  0000                     # 360 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   138                           VELRH equ 0F69h ;# 
   139  0000                     # 367 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   140                           OVDCONS equ 0F6Ah ;# 
   141  0000                     # 437 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   142                           OVDCOND equ 0F6Bh ;# 
   143  0000                     # 507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   144                           FLTCONFIG equ 0F6Ch ;# 
   145  0000                     # 569 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   146                           DTCON equ 0F6Dh ;# 
   147  0000                     # 695 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   148                           PWMCON1 equ 0F6Eh ;# 
   149  0000                     # 761 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   150                           PWMCON0 equ 0F6Fh ;# 
   151  0000                     # 831 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   152                           SEVTCMPH equ 0F70h ;# 
   153  0000                     # 838 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   154                           SEVTCMPL equ 0F71h ;# 
   155  0000                     # 845 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   156                           PDC3H equ 0F72h ;# 
   157  0000                     # 852 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   158                           PDC3L equ 0F73h ;# 
   159  0000                     # 859 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   160                           PDC2H equ 0F74h ;# 
   161  0000                     # 866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   162                           PDC2L equ 0F75h ;# 
   163  0000                     # 873 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   164                           PDC1H equ 0F76h ;# 
   165  0000                     # 880 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   166                           PDC1L equ 0F77h ;# 
   167  0000                     # 887 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   168                           PDC0H equ 0F78h ;# 
   169  0000                     # 894 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   170                           PDC0L equ 0F79h ;# 
   171  0000                     # 901 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   172                           PTPERH equ 0F7Ah ;# 
   173  0000                     # 908 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   174                           PTPERL equ 0F7Bh ;# 
   175  0000                     # 915 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   176                           PTMRH equ 0F7Ch ;# 
   177  0000                     # 922 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   178                           PTMRL equ 0F7Dh ;# 
   179  0000                     # 929 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   180                           PTCON1 equ 0F7Eh ;# 
   181  0000                     # 956 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   182                           PTCON0 equ 0F7Fh ;# 
   183  0000                     # 1038 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   184                           PORTA equ 0F80h ;# 
   185  0000                     # 1199 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   186                           PORTB equ 0F81h ;# 
   187  0000                     # 1270 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   188                           PORTC equ 0F82h ;# 
   189  0000                     # 1536 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   190                           PORTD equ 0F83h ;# 
   191  0000                     # 1607 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   192                           PORTE equ 0F84h ;# 
   193  0000                     # 1733 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   194                           TMR5 equ 0F87h ;# 
   195  0000                     # 1740 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   196                           TMR5L equ 0F87h ;# 
   197  0000                     # 1747 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   198                           TMR5H equ 0F88h ;# 
   199  0000                     # 1754 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   200                           LATA equ 0F89h ;# 
   201  0000                     # 1866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   202                           LATB equ 0F8Ah ;# 
   203  0000                     # 1978 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   204                           LATC equ 0F8Bh ;# 
   205  0000                     # 2090 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   206                           LATD equ 0F8Ch ;# 
   207  0000                     # 2202 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   208                           LATE equ 0F8Dh ;# 
   209  0000                     # 2254 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   210                           PR5 equ 0F90h ;# 
   211  0000                     # 2261 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   212                           PR5L equ 0F90h ;# 
   213  0000                     # 2268 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   214                           PR5H equ 0F91h ;# 
   215  0000                     # 2275 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   216                           TRISA equ 0F92h ;# 
   217  0000                     # 2280 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   218                           DDRA equ 0F92h ;# 
   219  0000                     # 2497 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   220                           TRISB equ 0F93h ;# 
   221  0000                     # 2502 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   222                           DDRB equ 0F93h ;# 
   223  0000                     # 2719 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   224                           TRISC equ 0F94h ;# 
   225  0000                     # 2724 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   226                           DDRC equ 0F94h ;# 
   227  0000                     # 2941 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   228                           TRISD equ 0F95h ;# 
   229  0000                     # 2946 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   230                           DDRD equ 0F95h ;# 
   231  0000                     # 3163 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   232                           TRISE equ 0F96h ;# 
   233  0000                     # 3168 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   234                           DDRE equ 0F96h ;# 
   235  0000                     # 3265 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   236                           ADCHS equ 0F99h ;# 
   237  0000                     # 3403 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   238                           ADCON3 equ 0F9Ah ;# 
   239  0000                     # 3475 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   240                           OSCTUNE equ 0F9Bh ;# 
   241  0000                     # 3533 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   242                           PIE1 equ 0F9Dh ;# 
   243  0000                     # 3613 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   244                           PIR1 equ 0F9Eh ;# 
   245  0000                     # 3693 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   246                           IPR1 equ 0F9Fh ;# 
   247  0000                     # 3773 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   248                           PIE2 equ 0FA0h ;# 
   249  0000                     # 3814 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   250                           PIR2 equ 0FA1h ;# 
   251  0000                     # 3855 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   252                           IPR2 equ 0FA2h ;# 
   253  0000                     # 3896 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   254                           PIE3 equ 0FA3h ;# 
   255  0000                     # 3988 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   256                           PIR3 equ 0FA4h ;# 
   257  0000                     # 4048 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   258                           IPR3 equ 0FA5h ;# 
   259  0000                     # 4108 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   260                           EECON1 equ 0FA6h ;# 
   261  0000                     # 4174 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   262                           EECON2 equ 0FA7h ;# 
   263  0000                     # 4181 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   264                           EEDATA equ 0FA8h ;# 
   265  0000                     # 4188 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   266                           EEADR equ 0FA9h ;# 
   267  0000                     # 4195 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   268                           BAUDCON equ 0FAAh ;# 
   269  0000                     # 4200 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   270                           BAUDCTL equ 0FAAh ;# 
   271  0000                     # 4375 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   272                           RCSTA equ 0FABh ;# 
   273  0000                     # 4380 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   274                           RCSTA1 equ 0FABh ;# 
   275  0000                     # 4585 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   276                           TXSTA equ 0FACh ;# 
   277  0000                     # 4590 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   278                           TXSTA1 equ 0FACh ;# 
   279  0000                     # 4841 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   280                           TXREG equ 0FADh ;# 
   281  0000                     # 4846 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   282                           TXREG1 equ 0FADh ;# 
   283  0000                     # 4853 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   284                           RCREG equ 0FAEh ;# 
   285  0000                     # 4858 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   286                           RCREG1 equ 0FAEh ;# 
   287  0000                     # 4865 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   288                           SPBRG equ 0FAFh ;# 
   289  0000                     # 4870 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   290                           SPBRG1 equ 0FAFh ;# 
   291  0000                     # 4877 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   292                           SPBRGH equ 0FB0h ;# 
   293  0000                     # 4884 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   294                           QEICON equ 0FB6h ;# 
   295  0000                     # 5036 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   296                           T5CON equ 0FB7h ;# 
   297  0000                     # 5154 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   298                           ANSEL0 equ 0FB8h ;# 
   299  0000                     # 5216 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   300                           ANSEL1 equ 0FB9h ;# 
   301  0000                     # 5236 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   302                           CCP2CON equ 0FBAh ;# 
   303  0000                     # 5315 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   304                           CCPR2 equ 0FBBh ;# 
   305  0000                     # 5322 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   306                           CCPR2L equ 0FBBh ;# 
   307  0000                     # 5329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   308                           CCPR2H equ 0FBCh ;# 
   309  0000                     # 5336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   310                           CCP1CON equ 0FBDh ;# 
   311  0000                     # 5415 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   312                           CCPR1 equ 0FBEh ;# 
   313  0000                     # 5422 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   314                           CCPR1L equ 0FBEh ;# 
   315  0000                     # 5429 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   316                           CCPR1H equ 0FBFh ;# 
   317  0000                     # 5436 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   318                           ADCON2 equ 0FC0h ;# 
   319  0000                     # 5512 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   320                           ADCON1 equ 0FC1h ;# 
   321  0000                     # 5608 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   322                           ADCON0 equ 0FC2h ;# 
   323  0000                     # 5727 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   324                           ADRES equ 0FC3h ;# 
   325  0000                     # 5734 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   326                           ADRESL equ 0FC3h ;# 
   327  0000                     # 5741 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   328                           ADRESH equ 0FC4h ;# 
   329  0000                     # 5748 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   330                           SSPCON equ 0FC6h ;# 
   331  0000                     # 5753 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   332                           SSPCON1 equ 0FC6h ;# 
   333  0000                     # 5886 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   334                           SSPSTAT equ 0FC7h ;# 
   335  0000                     # 6107 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   336                           SSPADD equ 0FC8h ;# 
   337  0000                     # 6114 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   338                           SSPBUF equ 0FC9h ;# 
   339  0000                     # 6121 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   340                           T2CON equ 0FCAh ;# 
   341  0000                     # 6219 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   342                           PR2 equ 0FCBh ;# 
   343  0000                     # 6224 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   344                           MEMCON equ 0FCBh ;# 
   345  0000                     # 6329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   346                           TMR2 equ 0FCCh ;# 
   347  0000                     # 6336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   348                           T1CON equ 0FCDh ;# 
   349  0000                     # 6448 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   350                           TMR1 equ 0FCEh ;# 
   351  0000                     # 6455 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   352                           TMR1L equ 0FCEh ;# 
   353  0000                     # 6462 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   354                           TMR1H equ 0FCFh ;# 
   355  0000                     # 6469 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   356                           RCON equ 0FD0h ;# 
   357  0000                     # 6612 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   358                           WDTCON equ 0FD1h ;# 
   359  0000                     # 6639 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   360                           LVDCON equ 0FD2h ;# 
   361  0000                     # 6704 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   362                           OSCCON equ 0FD3h ;# 
   363  0000                     # 6790 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   364                           T0CON equ 0FD5h ;# 
   365  0000                     # 6866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   366                           TMR0 equ 0FD6h ;# 
   367  0000                     # 6873 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   368                           TMR0L equ 0FD6h ;# 
   369  0000                     # 6880 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   370                           TMR0H equ 0FD7h ;# 
   371  0000                     # 6887 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   372                           STATUS equ 0FD8h ;# 
   373  0000                     # 6958 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   374                           FSR2 equ 0FD9h ;# 
   375  0000                     # 6965 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   376                           FSR2L equ 0FD9h ;# 
   377  0000                     # 6972 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   378                           FSR2H equ 0FDAh ;# 
   379  0000                     # 6979 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   380                           PLUSW2 equ 0FDBh ;# 
   381  0000                     # 6986 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   382                           PREINC2 equ 0FDCh ;# 
   383  0000                     # 6993 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   384                           POSTDEC2 equ 0FDDh ;# 
   385  0000                     # 7000 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   386                           POSTINC2 equ 0FDEh ;# 
   387  0000                     # 7007 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   388                           INDF2 equ 0FDFh ;# 
   389  0000                     # 7014 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   390                           BSR equ 0FE0h ;# 
   391  0000                     # 7021 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   392                           FSR1 equ 0FE1h ;# 
   393  0000                     # 7028 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   394                           FSR1L equ 0FE1h ;# 
   395  0000                     # 7035 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   396                           FSR1H equ 0FE2h ;# 
   397  0000                     # 7042 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   398                           PLUSW1 equ 0FE3h ;# 
   399  0000                     # 7049 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   400                           PREINC1 equ 0FE4h ;# 
   401  0000                     # 7056 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   402                           POSTDEC1 equ 0FE5h ;# 
   403  0000                     # 7063 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   404                           POSTINC1 equ 0FE6h ;# 
   405  0000                     # 7070 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   406                           INDF1 equ 0FE7h ;# 
   407  0000                     # 7077 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   408                           WREG equ 0FE8h ;# 
   409  0000                     # 7084 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   410                           FSR0 equ 0FE9h ;# 
   411  0000                     # 7091 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   412                           FSR0L equ 0FE9h ;# 
   413  0000                     # 7098 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   414                           FSR0H equ 0FEAh ;# 
   415  0000                     # 7105 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   416                           PLUSW0 equ 0FEBh ;# 
   417  0000                     # 7112 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   418                           PREINC0 equ 0FECh ;# 
   419  0000                     # 7119 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   420                           POSTDEC0 equ 0FEDh ;# 
   421  0000                     # 7126 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   422                           POSTINC0 equ 0FEEh ;# 
   423  0000                     # 7133 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   424                           INDF0 equ 0FEFh ;# 
   425  0000                     # 7140 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   426                           INTCON3 equ 0FF0h ;# 
   427  0000                     # 7232 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   428                           INTCON2 equ 0FF1h ;# 
   429  0000                     # 7309 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   430                           INTCON equ 0FF2h ;# 
   431  0000                     # 7426 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   432                           PROD equ 0FF3h ;# 
   433  0000                     # 7433 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   434                           PRODL equ 0FF3h ;# 
   435  0000                     # 7440 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   436                           PRODH equ 0FF4h ;# 
   437  0000                     # 7447 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   438                           TABLAT equ 0FF5h ;# 
   439  0000                     # 7456 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   440                           TBLPTR equ 0FF6h ;# 
   441  0000                     # 7463 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   442                           TBLPTRL equ 0FF6h ;# 
   443  0000                     # 7470 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   444                           TBLPTRH equ 0FF7h ;# 
   445  0000                     # 7477 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   446                           TBLPTRU equ 0FF8h ;# 
   447  0000                     # 7486 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   448                           PCLAT equ 0FF9h ;# 
   449  0000                     # 7493 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   450                           PC equ 0FF9h ;# 
   451  0000                     # 7500 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   452                           PCL equ 0FF9h ;# 
   453  0000                     # 7507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   454                           PCLATH equ 0FFAh ;# 
   455  0000                     # 7514 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   456                           PCLATU equ 0FFBh ;# 
   457  0000                     # 7521 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   458                           STKPTR equ 0FFCh ;# 
   459  0000                     # 7595 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   460                           TOS equ 0FFDh ;# 
   461  0000                     # 7602 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   462                           TOSL equ 0FFDh ;# 
   463  0000                     # 7609 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   464                           TOSH equ 0FFEh ;# 
   465  0000                     # 7616 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   466                           TOSU equ 0FFFh ;# 
   467  0000                     # 54 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   468                           DFLTCON equ 0F60h ;# 
   469  0000                     # 118 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   470                           CAP3CON equ 0F61h ;# 
   471  0000                     # 177 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   472                           CAP2CON equ 0F62h ;# 
   473  0000                     # 236 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   474                           CAP1CON equ 0F63h ;# 
   475  0000                     # 295 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   476                           CAP3BUFL equ 0F64h ;# 
   477  0000                     # 300 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   478                           MAXCNTL equ 0F64h ;# 
   479  0000                     # 307 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   480                           CAP3BUFH equ 0F65h ;# 
   481  0000                     # 312 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   482                           MAXCNTH equ 0F65h ;# 
   483  0000                     # 319 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   484                           CAP2BUFL equ 0F66h ;# 
   485  0000                     # 324 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   486                           POSCNTL equ 0F66h ;# 
   487  0000                     # 331 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   488                           CAP2BUFH equ 0F67h ;# 
   489  0000                     # 336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   490                           POSCNTH equ 0F67h ;# 
   491  0000                     # 343 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   492                           CAP1BUFL equ 0F68h ;# 
   493  0000                     # 348 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   494                           VELRL equ 0F68h ;# 
   495  0000                     # 355 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   496                           CAP1BUFH equ 0F69h ;# 
   497  0000                     # 360 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   498                           VELRH equ 0F69h ;# 
   499  0000                     # 367 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   500                           OVDCONS equ 0F6Ah ;# 
   501  0000                     # 437 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   502                           OVDCOND equ 0F6Bh ;# 
   503  0000                     # 507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   504                           FLTCONFIG equ 0F6Ch ;# 
   505  0000                     # 569 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   506                           DTCON equ 0F6Dh ;# 
   507  0000                     # 695 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   508                           PWMCON1 equ 0F6Eh ;# 
   509  0000                     # 761 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   510                           PWMCON0 equ 0F6Fh ;# 
   511  0000                     # 831 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   512                           SEVTCMPH equ 0F70h ;# 
   513  0000                     # 838 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   514                           SEVTCMPL equ 0F71h ;# 
   515  0000                     # 845 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   516                           PDC3H equ 0F72h ;# 
   517  0000                     # 852 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   518                           PDC3L equ 0F73h ;# 
   519  0000                     # 859 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   520                           PDC2H equ 0F74h ;# 
   521  0000                     # 866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   522                           PDC2L equ 0F75h ;# 
   523  0000                     # 873 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   524                           PDC1H equ 0F76h ;# 
   525  0000                     # 880 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   526                           PDC1L equ 0F77h ;# 
   527  0000                     # 887 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   528                           PDC0H equ 0F78h ;# 
   529  0000                     # 894 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   530                           PDC0L equ 0F79h ;# 
   531  0000                     # 901 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   532                           PTPERH equ 0F7Ah ;# 
   533  0000                     # 908 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   534                           PTPERL equ 0F7Bh ;# 
   535  0000                     # 915 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   536                           PTMRH equ 0F7Ch ;# 
   537  0000                     # 922 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   538                           PTMRL equ 0F7Dh ;# 
   539  0000                     # 929 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   540                           PTCON1 equ 0F7Eh ;# 
   541  0000                     # 956 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   542                           PTCON0 equ 0F7Fh ;# 
   543  0000                     # 1038 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   544                           PORTA equ 0F80h ;# 
   545  0000                     # 1199 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   546                           PORTB equ 0F81h ;# 
   547  0000                     # 1270 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   548                           PORTC equ 0F82h ;# 
   549  0000                     # 1536 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   550                           PORTD equ 0F83h ;# 
   551  0000                     # 1607 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   552                           PORTE equ 0F84h ;# 
   553  0000                     # 1733 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   554                           TMR5 equ 0F87h ;# 
   555  0000                     # 1740 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   556                           TMR5L equ 0F87h ;# 
   557  0000                     # 1747 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   558                           TMR5H equ 0F88h ;# 
   559  0000                     # 1754 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   560                           LATA equ 0F89h ;# 
   561  0000                     # 1866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   562                           LATB equ 0F8Ah ;# 
   563  0000                     # 1978 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   564                           LATC equ 0F8Bh ;# 
   565  0000                     # 2090 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   566                           LATD equ 0F8Ch ;# 
   567  0000                     # 2202 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   568                           LATE equ 0F8Dh ;# 
   569  0000                     # 2254 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   570                           PR5 equ 0F90h ;# 
   571  0000                     # 2261 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   572                           PR5L equ 0F90h ;# 
   573  0000                     # 2268 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   574                           PR5H equ 0F91h ;# 
   575  0000                     # 2275 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   576                           TRISA equ 0F92h ;# 
   577  0000                     # 2280 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   578                           DDRA equ 0F92h ;# 
   579  0000                     # 2497 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   580                           TRISB equ 0F93h ;# 
   581  0000                     # 2502 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   582                           DDRB equ 0F93h ;# 
   583  0000                     # 2719 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   584                           TRISC equ 0F94h ;# 
   585  0000                     # 2724 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   586                           DDRC equ 0F94h ;# 
   587  0000                     # 2941 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   588                           TRISD equ 0F95h ;# 
   589  0000                     # 2946 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   590                           DDRD equ 0F95h ;# 
   591  0000                     # 3163 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   592                           TRISE equ 0F96h ;# 
   593  0000                     # 3168 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   594                           DDRE equ 0F96h ;# 
   595  0000                     # 3265 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   596                           ADCHS equ 0F99h ;# 
   597  0000                     # 3403 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   598                           ADCON3 equ 0F9Ah ;# 
   599  0000                     # 3475 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   600                           OSCTUNE equ 0F9Bh ;# 
   601  0000                     # 3533 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   602                           PIE1 equ 0F9Dh ;# 
   603  0000                     # 3613 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   604                           PIR1 equ 0F9Eh ;# 
   605  0000                     # 3693 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   606                           IPR1 equ 0F9Fh ;# 
   607  0000                     # 3773 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   608                           PIE2 equ 0FA0h ;# 
   609  0000                     # 3814 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   610                           PIR2 equ 0FA1h ;# 
   611  0000                     # 3855 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   612                           IPR2 equ 0FA2h ;# 
   613  0000                     # 3896 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   614                           PIE3 equ 0FA3h ;# 
   615  0000                     # 3988 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   616                           PIR3 equ 0FA4h ;# 
   617  0000                     # 4048 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   618                           IPR3 equ 0FA5h ;# 
   619  0000                     # 4108 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   620                           EECON1 equ 0FA6h ;# 
   621  0000                     # 4174 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   622                           EECON2 equ 0FA7h ;# 
   623  0000                     # 4181 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   624                           EEDATA equ 0FA8h ;# 
   625  0000                     # 4188 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   626                           EEADR equ 0FA9h ;# 
   627  0000                     # 4195 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   628                           BAUDCON equ 0FAAh ;# 
   629  0000                     # 4200 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   630                           BAUDCTL equ 0FAAh ;# 
   631  0000                     # 4375 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   632                           RCSTA equ 0FABh ;# 
   633  0000                     # 4380 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   634                           RCSTA1 equ 0FABh ;# 
   635  0000                     # 4585 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   636                           TXSTA equ 0FACh ;# 
   637  0000                     # 4590 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   638                           TXSTA1 equ 0FACh ;# 
   639  0000                     # 4841 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   640                           TXREG equ 0FADh ;# 
   641  0000                     # 4846 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   642                           TXREG1 equ 0FADh ;# 
   643  0000                     # 4853 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   644                           RCREG equ 0FAEh ;# 
   645  0000                     # 4858 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   646                           RCREG1 equ 0FAEh ;# 
   647  0000                     # 4865 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   648                           SPBRG equ 0FAFh ;# 
   649  0000                     # 4870 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   650                           SPBRG1 equ 0FAFh ;# 
   651  0000                     # 4877 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   652                           SPBRGH equ 0FB0h ;# 
   653  0000                     # 4884 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   654                           QEICON equ 0FB6h ;# 
   655  0000                     # 5036 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   656                           T5CON equ 0FB7h ;# 
   657  0000                     # 5154 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   658                           ANSEL0 equ 0FB8h ;# 
   659  0000                     # 5216 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   660                           ANSEL1 equ 0FB9h ;# 
   661  0000                     # 5236 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   662                           CCP2CON equ 0FBAh ;# 
   663  0000                     # 5315 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   664                           CCPR2 equ 0FBBh ;# 
   665  0000                     # 5322 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   666                           CCPR2L equ 0FBBh ;# 
   667  0000                     # 5329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   668                           CCPR2H equ 0FBCh ;# 
   669  0000                     # 5336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   670                           CCP1CON equ 0FBDh ;# 
   671  0000                     # 5415 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   672                           CCPR1 equ 0FBEh ;# 
   673  0000                     # 5422 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   674                           CCPR1L equ 0FBEh ;# 
   675  0000                     # 5429 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   676                           CCPR1H equ 0FBFh ;# 
   677  0000                     # 5436 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   678                           ADCON2 equ 0FC0h ;# 
   679  0000                     # 5512 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   680                           ADCON1 equ 0FC1h ;# 
   681  0000                     # 5608 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   682                           ADCON0 equ 0FC2h ;# 
   683  0000                     # 5727 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   684                           ADRES equ 0FC3h ;# 
   685  0000                     # 5734 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   686                           ADRESL equ 0FC3h ;# 
   687  0000                     # 5741 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   688                           ADRESH equ 0FC4h ;# 
   689  0000                     # 5748 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   690                           SSPCON equ 0FC6h ;# 
   691  0000                     # 5753 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   692                           SSPCON1 equ 0FC6h ;# 
   693  0000                     # 5886 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   694                           SSPSTAT equ 0FC7h ;# 
   695  0000                     # 6107 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   696                           SSPADD equ 0FC8h ;# 
   697  0000                     # 6114 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   698                           SSPBUF equ 0FC9h ;# 
   699  0000                     # 6121 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   700                           T2CON equ 0FCAh ;# 
   701  0000                     # 6219 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   702                           PR2 equ 0FCBh ;# 
   703  0000                     # 6224 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   704                           MEMCON equ 0FCBh ;# 
   705  0000                     # 6329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   706                           TMR2 equ 0FCCh ;# 
   707  0000                     # 6336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   708                           T1CON equ 0FCDh ;# 
   709  0000                     # 6448 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   710                           TMR1 equ 0FCEh ;# 
   711  0000                     # 6455 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   712                           TMR1L equ 0FCEh ;# 
   713  0000                     # 6462 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   714                           TMR1H equ 0FCFh ;# 
   715  0000                     # 6469 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   716                           RCON equ 0FD0h ;# 
   717  0000                     # 6612 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   718                           WDTCON equ 0FD1h ;# 
   719  0000                     # 6639 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   720                           LVDCON equ 0FD2h ;# 
   721  0000                     # 6704 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   722                           OSCCON equ 0FD3h ;# 
   723  0000                     # 6790 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   724                           T0CON equ 0FD5h ;# 
   725  0000                     # 6866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   726                           TMR0 equ 0FD6h ;# 
   727  0000                     # 6873 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   728                           TMR0L equ 0FD6h ;# 
   729  0000                     # 6880 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   730                           TMR0H equ 0FD7h ;# 
   731  0000                     # 6887 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   732                           STATUS equ 0FD8h ;# 
   733  0000                     # 6958 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   734                           FSR2 equ 0FD9h ;# 
   735  0000                     # 6965 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   736                           FSR2L equ 0FD9h ;# 
   737  0000                     # 6972 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   738                           FSR2H equ 0FDAh ;# 
   739  0000                     # 6979 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   740                           PLUSW2 equ 0FDBh ;# 
   741  0000                     # 6986 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   742                           PREINC2 equ 0FDCh ;# 
   743  0000                     # 6993 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   744                           POSTDEC2 equ 0FDDh ;# 
   745  0000                     # 7000 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   746                           POSTINC2 equ 0FDEh ;# 
   747  0000                     # 7007 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   748                           INDF2 equ 0FDFh ;# 
   749  0000                     # 7014 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   750                           BSR equ 0FE0h ;# 
   751  0000                     # 7021 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   752                           FSR1 equ 0FE1h ;# 
   753  0000                     # 7028 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   754                           FSR1L equ 0FE1h ;# 
   755  0000                     # 7035 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   756                           FSR1H equ 0FE2h ;# 
   757  0000                     # 7042 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   758                           PLUSW1 equ 0FE3h ;# 
   759  0000                     # 7049 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   760                           PREINC1 equ 0FE4h ;# 
   761  0000                     # 7056 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   762                           POSTDEC1 equ 0FE5h ;# 
   763  0000                     # 7063 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   764                           POSTINC1 equ 0FE6h ;# 
   765  0000                     # 7070 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   766                           INDF1 equ 0FE7h ;# 
   767  0000                     # 7077 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   768                           WREG equ 0FE8h ;# 
   769  0000                     # 7084 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   770                           FSR0 equ 0FE9h ;# 
   771  0000                     # 7091 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   772                           FSR0L equ 0FE9h ;# 
   773  0000                     # 7098 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   774                           FSR0H equ 0FEAh ;# 
   775  0000                     # 7105 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   776                           PLUSW0 equ 0FEBh ;# 
   777  0000                     # 7112 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   778                           PREINC0 equ 0FECh ;# 
   779  0000                     # 7119 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   780                           POSTDEC0 equ 0FEDh ;# 
   781  0000                     # 7126 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   782                           POSTINC0 equ 0FEEh ;# 
   783  0000                     # 7133 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   784                           INDF0 equ 0FEFh ;# 
   785  0000                     # 7140 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   786                           INTCON3 equ 0FF0h ;# 
   787  0000                     # 7232 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   788                           INTCON2 equ 0FF1h ;# 
   789  0000                     # 7309 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   790                           INTCON equ 0FF2h ;# 
   791  0000                     # 7426 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   792                           PROD equ 0FF3h ;# 
   793  0000                     # 7433 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   794                           PRODL equ 0FF3h ;# 
   795  0000                     # 7440 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   796                           PRODH equ 0FF4h ;# 
   797  0000                     # 7447 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   798                           TABLAT equ 0FF5h ;# 
   799  0000                     # 7456 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   800                           TBLPTR equ 0FF6h ;# 
   801  0000                     # 7463 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   802                           TBLPTRL equ 0FF6h ;# 
   803  0000                     # 7470 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   804                           TBLPTRH equ 0FF7h ;# 
   805  0000                     # 7477 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   806                           TBLPTRU equ 0FF8h ;# 
   807  0000                     # 7486 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   808                           PCLAT equ 0FF9h ;# 
   809  0000                     # 7493 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   810                           PC equ 0FF9h ;# 
   811  0000                     # 7500 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   812                           PCL equ 0FF9h ;# 
   813  0000                     # 7507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   814                           PCLATH equ 0FFAh ;# 
   815  0000                     # 7514 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   816                           PCLATU equ 0FFBh ;# 
   817  0000                     # 7521 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   818                           STKPTR equ 0FFCh ;# 
   819  0000                     # 7595 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   820                           TOS equ 0FFDh ;# 
   821  0000                     # 7602 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   822                           TOSL equ 0FFDh ;# 
   823  0000                     # 7609 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   824                           TOSH equ 0FFEh ;# 
   825  0000                     # 7616 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   826                           TOSU equ 0FFFh ;# 
   827  0000                     # 54 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   828                           DFLTCON equ 0F60h ;# 
   829  0000                     # 118 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   830                           CAP3CON equ 0F61h ;# 
   831  0000                     # 177 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   832                           CAP2CON equ 0F62h ;# 
   833  0000                     # 236 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   834                           CAP1CON equ 0F63h ;# 
   835  0000                     # 295 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   836                           CAP3BUFL equ 0F64h ;# 
   837  0000                     # 300 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   838                           MAXCNTL equ 0F64h ;# 
   839  0000                     # 307 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   840                           CAP3BUFH equ 0F65h ;# 
   841  0000                     # 312 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   842                           MAXCNTH equ 0F65h ;# 
   843  0000                     # 319 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   844                           CAP2BUFL equ 0F66h ;# 
   845  0000                     # 324 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   846                           POSCNTL equ 0F66h ;# 
   847  0000                     # 331 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   848                           CAP2BUFH equ 0F67h ;# 
   849  0000                     # 336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   850                           POSCNTH equ 0F67h ;# 
   851  0000                     # 343 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   852                           CAP1BUFL equ 0F68h ;# 
   853  0000                     # 348 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   854                           VELRL equ 0F68h ;# 
   855  0000                     # 355 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   856                           CAP1BUFH equ 0F69h ;# 
   857  0000                     # 360 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   858                           VELRH equ 0F69h ;# 
   859  0000                     # 367 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   860                           OVDCONS equ 0F6Ah ;# 
   861  0000                     # 437 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   862                           OVDCOND equ 0F6Bh ;# 
   863  0000                     # 507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   864                           FLTCONFIG equ 0F6Ch ;# 
   865  0000                     # 569 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   866                           DTCON equ 0F6Dh ;# 
   867  0000                     # 695 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   868                           PWMCON1 equ 0F6Eh ;# 
   869  0000                     # 761 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   870                           PWMCON0 equ 0F6Fh ;# 
   871  0000                     # 831 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   872                           SEVTCMPH equ 0F70h ;# 
   873  0000                     # 838 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   874                           SEVTCMPL equ 0F71h ;# 
   875  0000                     # 845 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   876                           PDC3H equ 0F72h ;# 
   877  0000                     # 852 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   878                           PDC3L equ 0F73h ;# 
   879  0000                     # 859 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   880                           PDC2H equ 0F74h ;# 
   881  0000                     # 866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   882                           PDC2L equ 0F75h ;# 
   883  0000                     # 873 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   884                           PDC1H equ 0F76h ;# 
   885  0000                     # 880 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   886                           PDC1L equ 0F77h ;# 
   887  0000                     # 887 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   888                           PDC0H equ 0F78h ;# 
   889  0000                     # 894 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   890                           PDC0L equ 0F79h ;# 
   891  0000                     # 901 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   892                           PTPERH equ 0F7Ah ;# 
   893  0000                     # 908 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   894                           PTPERL equ 0F7Bh ;# 
   895  0000                     # 915 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   896                           PTMRH equ 0F7Ch ;# 
   897  0000                     # 922 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   898                           PTMRL equ 0F7Dh ;# 
   899  0000                     # 929 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   900                           PTCON1 equ 0F7Eh ;# 
   901  0000                     # 956 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   902                           PTCON0 equ 0F7Fh ;# 
   903  0000                     # 1038 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   904                           PORTA equ 0F80h ;# 
   905  0000                     # 1199 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   906                           PORTB equ 0F81h ;# 
   907  0000                     # 1270 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   908                           PORTC equ 0F82h ;# 
   909  0000                     # 1536 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   910                           PORTD equ 0F83h ;# 
   911  0000                     # 1607 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   912                           PORTE equ 0F84h ;# 
   913  0000                     # 1733 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   914                           TMR5 equ 0F87h ;# 
   915  0000                     # 1740 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   916                           TMR5L equ 0F87h ;# 
   917  0000                     # 1747 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   918                           TMR5H equ 0F88h ;# 
   919  0000                     # 1754 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   920                           LATA equ 0F89h ;# 
   921  0000                     # 1866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   922                           LATB equ 0F8Ah ;# 
   923  0000                     # 1978 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   924                           LATC equ 0F8Bh ;# 
   925  0000                     # 2090 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   926                           LATD equ 0F8Ch ;# 
   927  0000                     # 2202 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   928                           LATE equ 0F8Dh ;# 
   929  0000                     # 2254 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   930                           PR5 equ 0F90h ;# 
   931  0000                     # 2261 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   932                           PR5L equ 0F90h ;# 
   933  0000                     # 2268 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   934                           PR5H equ 0F91h ;# 
   935  0000                     # 2275 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   936                           TRISA equ 0F92h ;# 
   937  0000                     # 2280 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   938                           DDRA equ 0F92h ;# 
   939  0000                     # 2497 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   940                           TRISB equ 0F93h ;# 
   941  0000                     # 2502 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   942                           DDRB equ 0F93h ;# 
   943  0000                     # 2719 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   944                           TRISC equ 0F94h ;# 
   945  0000                     # 2724 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   946                           DDRC equ 0F94h ;# 
   947  0000                     # 2941 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   948                           TRISD equ 0F95h ;# 
   949  0000                     # 2946 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   950                           DDRD equ 0F95h ;# 
   951  0000                     # 3163 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   952                           TRISE equ 0F96h ;# 
   953  0000                     # 3168 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   954                           DDRE equ 0F96h ;# 
   955  0000                     # 3265 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   956                           ADCHS equ 0F99h ;# 
   957  0000                     # 3403 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   958                           ADCON3 equ 0F9Ah ;# 
   959  0000                     # 3475 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   960                           OSCTUNE equ 0F9Bh ;# 
   961  0000                     # 3533 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   962                           PIE1 equ 0F9Dh ;# 
   963  0000                     # 3613 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   964                           PIR1 equ 0F9Eh ;# 
   965  0000                     # 3693 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   966                           IPR1 equ 0F9Fh ;# 
   967  0000                     # 3773 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   968                           PIE2 equ 0FA0h ;# 
   969  0000                     # 3814 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   970                           PIR2 equ 0FA1h ;# 
   971  0000                     # 3855 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   972                           IPR2 equ 0FA2h ;# 
   973  0000                     # 3896 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   974                           PIE3 equ 0FA3h ;# 
   975  0000                     # 3988 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   976                           PIR3 equ 0FA4h ;# 
   977  0000                     # 4048 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   978                           IPR3 equ 0FA5h ;# 
   979  0000                     # 4108 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   980                           EECON1 equ 0FA6h ;# 
   981  0000                     # 4174 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   982                           EECON2 equ 0FA7h ;# 
   983  0000                     # 4181 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   984                           EEDATA equ 0FA8h ;# 
   985  0000                     # 4188 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   986                           EEADR equ 0FA9h ;# 
   987  0000                     # 4195 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   988                           BAUDCON equ 0FAAh ;# 
   989  0000                     # 4200 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   990                           BAUDCTL equ 0FAAh ;# 
   991  0000                     # 4375 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   992                           RCSTA equ 0FABh ;# 
   993  0000                     # 4380 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   994                           RCSTA1 equ 0FABh ;# 
   995  0000                     # 4585 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   996                           TXSTA equ 0FACh ;# 
   997  0000                     # 4590 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   998                           TXSTA1 equ 0FACh ;# 
   999  0000                     # 4841 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1000                           TXREG equ 0FADh ;# 
  1001  0000                     # 4846 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1002                           TXREG1 equ 0FADh ;# 
  1003  0000                     # 4853 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1004                           RCREG equ 0FAEh ;# 
  1005  0000                     # 4858 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1006                           RCREG1 equ 0FAEh ;# 
  1007  0000                     # 4865 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1008                           SPBRG equ 0FAFh ;# 
  1009  0000                     # 4870 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1010                           SPBRG1 equ 0FAFh ;# 
  1011  0000                     # 4877 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1012                           SPBRGH equ 0FB0h ;# 
  1013  0000                     # 4884 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1014                           QEICON equ 0FB6h ;# 
  1015  0000                     # 5036 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1016                           T5CON equ 0FB7h ;# 
  1017  0000                     # 5154 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1018                           ANSEL0 equ 0FB8h ;# 
  1019  0000                     # 5216 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1020                           ANSEL1 equ 0FB9h ;# 
  1021  0000                     # 5236 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1022                           CCP2CON equ 0FBAh ;# 
  1023  0000                     # 5315 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1024                           CCPR2 equ 0FBBh ;# 
  1025  0000                     # 5322 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1026                           CCPR2L equ 0FBBh ;# 
  1027  0000                     # 5329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1028                           CCPR2H equ 0FBCh ;# 
  1029  0000                     # 5336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1030                           CCP1CON equ 0FBDh ;# 
  1031  0000                     # 5415 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1032                           CCPR1 equ 0FBEh ;# 
  1033  0000                     # 5422 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1034                           CCPR1L equ 0FBEh ;# 
  1035  0000                     # 5429 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1036                           CCPR1H equ 0FBFh ;# 
  1037  0000                     # 5436 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1038                           ADCON2 equ 0FC0h ;# 
  1039  0000                     # 5512 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1040                           ADCON1 equ 0FC1h ;# 
  1041  0000                     # 5608 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1042                           ADCON0 equ 0FC2h ;# 
  1043  0000                     # 5727 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1044                           ADRES equ 0FC3h ;# 
  1045  0000                     # 5734 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1046                           ADRESL equ 0FC3h ;# 
  1047  0000                     # 5741 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1048                           ADRESH equ 0FC4h ;# 
  1049  0000                     # 5748 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1050                           SSPCON equ 0FC6h ;# 
  1051  0000                     # 5753 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1052                           SSPCON1 equ 0FC6h ;# 
  1053  0000                     # 5886 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1054                           SSPSTAT equ 0FC7h ;# 
  1055  0000                     # 6107 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1056                           SSPADD equ 0FC8h ;# 
  1057  0000                     # 6114 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1058                           SSPBUF equ 0FC9h ;# 
  1059  0000                     # 6121 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1060                           T2CON equ 0FCAh ;# 
  1061  0000                     # 6219 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1062                           PR2 equ 0FCBh ;# 
  1063  0000                     # 6224 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1064                           MEMCON equ 0FCBh ;# 
  1065  0000                     # 6329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1066                           TMR2 equ 0FCCh ;# 
  1067  0000                     # 6336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1068                           T1CON equ 0FCDh ;# 
  1069  0000                     # 6448 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1070                           TMR1 equ 0FCEh ;# 
  1071  0000                     # 6455 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1072                           TMR1L equ 0FCEh ;# 
  1073  0000                     # 6462 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1074                           TMR1H equ 0FCFh ;# 
  1075  0000                     # 6469 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1076                           RCON equ 0FD0h ;# 
  1077  0000                     # 6612 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1078                           WDTCON equ 0FD1h ;# 
  1079  0000                     # 6639 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1080                           LVDCON equ 0FD2h ;# 
  1081  0000                     # 6704 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1082                           OSCCON equ 0FD3h ;# 
  1083  0000                     # 6790 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1084                           T0CON equ 0FD5h ;# 
  1085  0000                     # 6866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1086                           TMR0 equ 0FD6h ;# 
  1087  0000                     # 6873 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1088                           TMR0L equ 0FD6h ;# 
  1089  0000                     # 6880 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1090                           TMR0H equ 0FD7h ;# 
  1091  0000                     # 6887 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1092                           STATUS equ 0FD8h ;# 
  1093  0000                     # 6958 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1094                           FSR2 equ 0FD9h ;# 
  1095  0000                     # 6965 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1096                           FSR2L equ 0FD9h ;# 
  1097  0000                     # 6972 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1098                           FSR2H equ 0FDAh ;# 
  1099  0000                     # 6979 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1100                           PLUSW2 equ 0FDBh ;# 
  1101  0000                     # 6986 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1102                           PREINC2 equ 0FDCh ;# 
  1103  0000                     # 6993 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1104                           POSTDEC2 equ 0FDDh ;# 
  1105  0000                     # 7000 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1106                           POSTINC2 equ 0FDEh ;# 
  1107  0000                     # 7007 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1108                           INDF2 equ 0FDFh ;# 
  1109  0000                     # 7014 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1110                           BSR equ 0FE0h ;# 
  1111  0000                     # 7021 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1112                           FSR1 equ 0FE1h ;# 
  1113  0000                     # 7028 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1114                           FSR1L equ 0FE1h ;# 
  1115  0000                     # 7035 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1116                           FSR1H equ 0FE2h ;# 
  1117  0000                     # 7042 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1118                           PLUSW1 equ 0FE3h ;# 
  1119  0000                     # 7049 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1120                           PREINC1 equ 0FE4h ;# 
  1121  0000                     # 7056 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1122                           POSTDEC1 equ 0FE5h ;# 
  1123  0000                     # 7063 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1124                           POSTINC1 equ 0FE6h ;# 
  1125  0000                     # 7070 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1126                           INDF1 equ 0FE7h ;# 
  1127  0000                     # 7077 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1128                           WREG equ 0FE8h ;# 
  1129  0000                     # 7084 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1130                           FSR0 equ 0FE9h ;# 
  1131  0000                     # 7091 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1132                           FSR0L equ 0FE9h ;# 
  1133  0000                     # 7098 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1134                           FSR0H equ 0FEAh ;# 
  1135  0000                     # 7105 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1136                           PLUSW0 equ 0FEBh ;# 
  1137  0000                     # 7112 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1138                           PREINC0 equ 0FECh ;# 
  1139  0000                     # 7119 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1140                           POSTDEC0 equ 0FEDh ;# 
  1141  0000                     # 7126 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1142                           POSTINC0 equ 0FEEh ;# 
  1143  0000                     # 7133 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1144                           INDF0 equ 0FEFh ;# 
  1145  0000                     # 7140 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1146                           INTCON3 equ 0FF0h ;# 
  1147  0000                     # 7232 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1148                           INTCON2 equ 0FF1h ;# 
  1149  0000                     # 7309 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1150                           INTCON equ 0FF2h ;# 
  1151  0000                     # 7426 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1152                           PROD equ 0FF3h ;# 
  1153  0000                     # 7433 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1154                           PRODL equ 0FF3h ;# 
  1155  0000                     # 7440 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1156                           PRODH equ 0FF4h ;# 
  1157  0000                     # 7447 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1158                           TABLAT equ 0FF5h ;# 
  1159  0000                     # 7456 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1160                           TBLPTR equ 0FF6h ;# 
  1161  0000                     # 7463 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1162                           TBLPTRL equ 0FF6h ;# 
  1163  0000                     # 7470 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1164                           TBLPTRH equ 0FF7h ;# 
  1165  0000                     # 7477 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1166                           TBLPTRU equ 0FF8h ;# 
  1167  0000                     # 7486 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1168                           PCLAT equ 0FF9h ;# 
  1169  0000                     # 7493 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1170                           PC equ 0FF9h ;# 
  1171  0000                     # 7500 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1172                           PCL equ 0FF9h ;# 
  1173  0000                     # 7507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1174                           PCLATH equ 0FFAh ;# 
  1175  0000                     # 7514 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1176                           PCLATU equ 0FFBh ;# 
  1177  0000                     # 7521 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1178                           STKPTR equ 0FFCh ;# 
  1179  0000                     # 7595 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1180                           TOS equ 0FFDh ;# 
  1181  0000                     # 7602 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1182                           TOSL equ 0FFDh ;# 
  1183  0000                     # 7609 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1184                           TOSH equ 0FFEh ;# 
  1185  0000                     # 7616 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1186                           TOSU equ 0FFFh ;# 
  1187  0000                     	FNCALL	_main,_LCD_init
  1188                           	FNCALL	_main,_init_capture
  1189                           	FNCALL	_main,_print_IR
  1190                           	FNCALL	_main,_read_IR
  1191                           	FNCALL	_print_IR,_LCD_clear
  1192                           	FNCALL	_print_IR,_LCD_line
  1193                           	FNCALL	_print_IR,_LCD_string
  1194                           	FNCALL	_print_IR,_sprintf
  1195                           	FNCALL	_sprintf,_vfprintf
  1196                           	FNCALL	_vfprintf,_vfpfcnvrt
  1197                           	FNCALL	_vfpfcnvrt,_fputc
  1198                           	FNCALL	_vfpfcnvrt,_utoa
  1199                           	FNCALL	_utoa,___lodiv
  1200                           	FNCALL	_utoa,___lomod
  1201                           	FNCALL	_utoa,_pad
  1202                           	FNCALL	_pad,_fputc
  1203                           	FNCALL	_pad,_fputs
  1204                           	FNCALL	_pad,_strlen
  1205                           	FNCALL	_fputs,_fputc
  1206                           	FNCALL	_fputc,_putch
  1207                           	FNCALL	_LCD_string,_LCD_send
  1208                           	FNCALL	_LCD_line,_LCD_send
  1209                           	FNCALL	_LCD_clear,_LCD_send
  1210                           	FNCALL	_LCD_init,_LCD_out
  1211                           	FNCALL	_LCD_init,_LCD_send
  1212                           	FNCALL	_LCD_send,_LCD_out
  1213                           	FNCALL	_LCD_out,_E_TOG
  1214                           	FNROOT	_main
  1215                           	global	_nout
  1216                           	global	_width
  1217                           	global	_prec
  1218                           	global	_flags
  1219                           	global	_dbuf
  1220                           	global	_CAP1BUFL
  1221                           _CAP1BUFL	set	0xF68
  1222  0000                     	global	_CAP1BUFH
  1223                           _CAP1BUFH	set	0xF69
  1224  0000                     	global	_CAP2BUFL
  1225                           _CAP2BUFL	set	0xF66
  1226  0000                     	global	_CAP2BUFH
  1227                           _CAP2BUFH	set	0xF67
  1228  0000                     	global	_DFLTCON
  1229                           _DFLTCON	set	0xF60
  1230  0000                     	global	_CAP2CON
  1231                           _CAP2CON	set	0xF62
  1232  0000                     	global	_CAP1CON
  1233                           _CAP1CON	set	0xF63
  1234  0000                     	global	_T5CONbits
  1235                           _T5CONbits	set	0xFB7
  1236  0000                     	global	_T5CON
  1237                           _T5CON	set	0xFB7
  1238  0000                     	global	_OSCCONbits
  1239                           _OSCCONbits	set	0xFD3
  1240  0000                     	global	_OSCCON
  1241                           _OSCCON	set	0xFD3
  1242  0000                     	global	_ANSEL1
  1243                           _ANSEL1	set	0xFB9
  1244  0000                     	global	_ANSEL0
  1245                           _ANSEL0	set	0xFB8
  1246  0000                     	global	_TRISD
  1247                           _TRISD	set	0xF95
  1248  0000                     	global	_TRISC
  1249                           _TRISC	set	0xF94
  1250  0000                     	global	_TRISA
  1251                           _TRISA	set	0xF92
  1252  0000                     	global	_LATD
  1253                           _LATD	set	0xF8C
  1254  0000                     	global	_LATC
  1255                           _LATC	set	0xF8B
  1256  0000                     	global	_LATA
  1257                           _LATA	set	0xF89
  1258  0000                     	global	_PORTAbits
  1259                           _PORTAbits	set	0xF80
  1260  0000                     	global	_PORTDbits
  1261                           _PORTDbits	set	0xF83
  1262  0000                     	global	_PORTCbits
  1263                           _PORTCbits	set	0xF82
  1264  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
  1265                           global __psmallconst
  1266                           __psmallconst:
  1267  000300                     	db	0
  1268  000300  00                 	
  1269                           STR_2:
  1270  000301                     	db	82	;'R'
  1271  000301  52                 	db	105	;'i'
  1272  000302  69                 	db	103	;'g'
  1273  000303  67                 	db	104	;'h'
  1274  000304  68                 	db	116	;'t'
  1275  000305  74                 	db	58	;':'
  1276  000306  3A                 	db	32
  1277  000307  20                 	db	37
  1278  000308  25                 	db	117	;'u'
  1279  000309  75                 	db	0
  1280  00030A  00                 	
  1281                           STR_1:
  1282  00030B                     	db	76	;'L'
  1283  00030B  4C                 	db	101	;'e'
  1284  00030C  65                 	db	102	;'f'
  1285  00030D  66                 	db	116	;'t'
  1286  00030E  74                 	db	58	;':'
  1287  00030F  3A                 	db	32
  1288  000310  20                 	db	37
  1289  000311  25                 	db	117	;'u'
  1290  000312  75                 	db	0
  1291  000313  00                 ; #config settings
  1292                           global __CFG_OSC$IRCIO
  1293                           __CFG_OSC$IRCIO equ 0x0
  1294  0000                     global __CFG_MCLRE$OFF
  1295                           __CFG_MCLRE$OFF equ 0x0
  1296  0000                     global __CFG_LVP$OFF
  1297                           __CFG_LVP$OFF equ 0x0
  1298  0000                     	file	"/tmp/xcD9yCu0O"
  1299                           	line	#
  1300                           psect	cinit,class=CODE,delta=1,reloc=2
  1301                           global __pcinit
  1302                           __pcinit:
  1303  000F84                     global start_initialization
  1304                           start_initialization:
  1305  000F84                     
  1306                           global __initialization
  1307                           __initialization:
  1308  000F84                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
  1309                           global __pbssBANK0
  1310                           __pbssBANK0:
  1311  000060                     _nout:
  1312  000060                            ds      2
  1313  000060                     _width:
  1314  000062                            ds      2
  1315  000062                     _prec:
  1316  000064                            ds      2
  1317  000064                     _flags:
  1318  000066                            ds      2
  1319  000066                     _dbuf:
  1320  000068                            ds      32
  1321  000068                     	file	"/tmp/xcD9yCu0O"
  1322                           	line	#
  1323                           psect	cinit
  1324                           ; Clear objects allocated to BANK0 (40 bytes)
  1325                           	global __pbssBANK0
  1326                           lfsr	0,__pbssBANK0
  1327  000F84  EE00  F060         movlw	40
  1328  000F88  0E28               clear_0:
  1329  000F8A                     clrf	postinc0,c
  1330  000F8A  6AEE               decf	wreg
  1331  000F8C  06E8               bnz	clear_0
  1332  000F8E  E1FD               psect cinit,class=CODE,delta=1
  1333                           global end_of_initialization,__end_of__initialization
  1334                           
  1335                           ;End of C runtime variable initialization code
  1336                           
  1337                           end_of_initialization:
  1338  000F90                     __end_of__initialization:
  1339  000F90                     	GLOBAL	__Lsmallconst
  1340                           	movlw	low highword(__Lsmallconst)
  1341  000F90  0E00               	movwf	tblptru
  1342  000F92  6EF8               	movlw	high(__Lsmallconst)
  1343  000F94  0E03               	movwf	tblptrh
  1344  000F96  6EF7               movlb 0
  1345  000F98  0100               goto _main	;jump to C main() function
  1346  000F9A  EF47  F006         psect	cstackBANK0,class=BANK0,space=1,noexec
  1347                           global __pcstackBANK0
  1348                           __pcstackBANK0:
  1349  000088                     	global	sprintf@ret
  1350                           sprintf@ret:	; 2 bytes @ 0x0
  1351  000088                     	ds   2
  1352  000088                     	global	sprintf@ap
  1353                           sprintf@ap:	; 2 bytes @ 0x2
  1354  00008A                     	ds   2
  1355  00008A                     	global	sprintf@f
  1356                           sprintf@f:	; 6 bytes @ 0x4
  1357  00008C                     	ds   6
  1358  00008C                     	global	print_IR@buf
  1359                           print_IR@buf:	; 16 bytes @ 0xA
  1360  000092                     	ds   16
  1361  000092                     ??_main:	; 1 bytes @ 0x1A
  1362  0000A2                     	ds   2
  1363  0000A2                     	global	main@Values
  1364                           main@Values:	; 4 bytes @ 0x1C
  1365  0000A4                     	ds   4
  1366  0000A4                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  1367                           global __pcstackCOMRAM
  1368                           __pcstackCOMRAM:
  1369  000001                     ?_init_capture:	; 1 bytes @ 0x0
  1370  000001                     ??_init_capture:	; 1 bytes @ 0x0
  1371  000001                     ?_read_IR:	; 1 bytes @ 0x0
  1372  000001                     ?_putch:	; 1 bytes @ 0x0
  1373  000001                     ??_putch:	; 1 bytes @ 0x0
  1374  000001                     ?_E_TOG:	; 1 bytes @ 0x0
  1375  000001                     ??_E_TOG:	; 1 bytes @ 0x0
  1376  000001                     ?_LCD_out:	; 1 bytes @ 0x0
  1377  000001                     ??_LCD_out:	; 1 bytes @ 0x0
  1378  000001                     ?_LCD_init:	; 1 bytes @ 0x0
  1379  000001                     ?_LCD_line:	; 1 bytes @ 0x0
  1380  000001                     ?_LCD_clear:	; 1 bytes @ 0x0
  1381  000001                     ?_main:	; 1 bytes @ 0x0
  1382  000001                     ?_fputc:	; 2 bytes @ 0x0
  1383  000001                     	global	?_strlen
  1384                           ?_strlen:	; 2 bytes @ 0x0
  1385  000001                     	global	?___lodiv
  1386                           ?___lodiv:	; 8 bytes @ 0x0
  1387  000001                     	global	?___lomod
  1388                           ?___lomod:	; 8 bytes @ 0x0
  1389  000001                     putch@c:	; 1 bytes @ 0x0
  1390  000001                     	global	read_IR@Values
  1391                           read_IR@Values:	; 2 bytes @ 0x0
  1392  000001                     	global	fputc@c
  1393                           fputc@c:	; 2 bytes @ 0x0
  1394  000001                     	global	strlen@s
  1395                           strlen@s:	; 2 bytes @ 0x0
  1396  000001                     	global	___lodiv@dividend
  1397                           ___lodiv@dividend:	; 8 bytes @ 0x0
  1398  000001                     	global	___lomod@dividend
  1399                           ___lomod@dividend:	; 8 bytes @ 0x0
  1400  000001                     	ds   1
  1401  000001                     	global	LCD_out@number
  1402                           LCD_out@number:	; 1 bytes @ 0x1
  1403  000002                     	ds   1
  1404  000002                     ??_read_IR:	; 1 bytes @ 0x2
  1405  000003                     ??_strlen:	; 1 bytes @ 0x2
  1406  000003                     ?_LCD_send:	; 1 bytes @ 0x2
  1407  000003                     	global	LCD_send@type
  1408                           LCD_send@type:	; 1 bytes @ 0x2
  1409  000003                     	global	fputc@fp
  1410                           fputc@fp:	; 2 bytes @ 0x2
  1411  000003                     	ds   1
  1412  000003                     ??_LCD_send:	; 1 bytes @ 0x3
  1413  000004                     	global	LCD_send@Byte
  1414                           LCD_send@Byte:	; 1 bytes @ 0x3
  1415  000004                     	ds   1
  1416  000004                     ??_fputc:	; 1 bytes @ 0x4
  1417  000005                     ??_LCD_init:	; 1 bytes @ 0x4
  1418  000005                     ??_LCD_line:	; 1 bytes @ 0x4
  1419  000005                     ?_LCD_string:	; 1 bytes @ 0x4
  1420  000005                     ??_LCD_clear:	; 1 bytes @ 0x4
  1421  000005                     	global	LCD_line@line
  1422                           LCD_line@line:	; 1 bytes @ 0x4
  1423  000005                     	global	LCD_string@string
  1424                           LCD_string@string:	; 2 bytes @ 0x4
  1425  000005                     	global	strlen@a
  1426                           strlen@a:	; 2 bytes @ 0x4
  1427  000005                     	ds   2
  1428  000005                     ??_LCD_string:	; 1 bytes @ 0x6
  1429  000007                     	ds   2
  1430  000007                     	global	___lodiv@divisor
  1431                           ___lodiv@divisor:	; 8 bytes @ 0x8
  1432  000009                     	global	___lomod@divisor
  1433                           ___lomod@divisor:	; 8 bytes @ 0x8
  1434  000009                     	ds   1
  1435  000009                     ?_fputs:	; 2 bytes @ 0x9
  1436  00000A                     	global	fputs@s
  1437                           fputs@s:	; 2 bytes @ 0x9
  1438  00000A                     	ds   2
  1439  00000A                     	global	fputs@fp
  1440                           fputs@fp:	; 2 bytes @ 0xB
  1441  00000C                     	ds   2
  1442  00000C                     ??_fputs:	; 1 bytes @ 0xD
  1443  00000E                     	global	fputs@c
  1444                           fputs@c:	; 1 bytes @ 0xD
  1445  00000E                     	ds   1
  1446  00000E                     	global	fputs@i
  1447                           fputs@i:	; 2 bytes @ 0xE
  1448  00000F                     	ds   2
  1449  00000F                     ??___lodiv:	; 1 bytes @ 0x10
  1450  000011                     ??___lomod:	; 1 bytes @ 0x10
  1451  000011                     	global	?_pad
  1452                           ?_pad:	; 2 bytes @ 0x10
  1453  000011                     	global	___lomod@counter
  1454                           ___lomod@counter:	; 1 bytes @ 0x10
  1455  000011                     	global	pad@fp
  1456                           pad@fp:	; 2 bytes @ 0x10
  1457  000011                     	global	___lodiv@quotient
  1458                           ___lodiv@quotient:	; 8 bytes @ 0x10
  1459  000011                     	ds   2
  1460  000011                     	global	pad@buf
  1461                           pad@buf:	; 2 bytes @ 0x12
  1462  000013                     	ds   2
  1463  000013                     	global	pad@p
  1464                           pad@p:	; 2 bytes @ 0x14
  1465  000015                     	ds   2
  1466  000015                     ??_pad:	; 1 bytes @ 0x16
  1467  000017                     	ds   1
  1468  000017                     	global	pad@i
  1469                           pad@i:	; 2 bytes @ 0x17
  1470  000018                     	ds   1
  1471  000018                     	global	___lodiv@counter
  1472                           ___lodiv@counter:	; 1 bytes @ 0x18
  1473  000019                     	ds   1
  1474  000019                     	global	pad@w
  1475                           pad@w:	; 2 bytes @ 0x19
  1476  00001A                     	ds   2
  1477  00001A                     	global	?_utoa
  1478                           ?_utoa:	; 2 bytes @ 0x1B
  1479  00001C                     	global	utoa@fp
  1480                           utoa@fp:	; 2 bytes @ 0x1B
  1481  00001C                     	ds   2
  1482  00001C                     	global	utoa@d
  1483                           utoa@d:	; 8 bytes @ 0x1D
  1484  00001E                     	ds   8
  1485  00001E                     ??_utoa:	; 1 bytes @ 0x25
  1486  000026                     	ds   8
  1487  000026                     	global	utoa@p
  1488                           utoa@p:	; 2 bytes @ 0x2D
  1489  00002E                     	ds   2
  1490  00002E                     	global	utoa@w
  1491                           utoa@w:	; 2 bytes @ 0x2F
  1492  000030                     	ds   2
  1493  000030                     	global	utoa@n
  1494                           utoa@n:	; 8 bytes @ 0x31
  1495  000032                     	ds   8
  1496  000032                     	global	utoa@i
  1497                           utoa@i:	; 2 bytes @ 0x39
  1498  00003A                     	ds   2
  1499  00003A                     	global	?_vfpfcnvrt
  1500                           ?_vfpfcnvrt:	; 2 bytes @ 0x3B
  1501  00003C                     	global	vfpfcnvrt@fp
  1502                           vfpfcnvrt@fp:	; 2 bytes @ 0x3B
  1503  00003C                     	ds   2
  1504  00003C                     	global	vfpfcnvrt@fmt
  1505                           vfpfcnvrt@fmt:	; 2 bytes @ 0x3D
  1506  00003E                     	ds   2
  1507  00003E                     	global	vfpfcnvrt@ap
  1508                           vfpfcnvrt@ap:	; 2 bytes @ 0x3F
  1509  000040                     	ds   2
  1510  000040                     ??_vfpfcnvrt:	; 1 bytes @ 0x41
  1511  000042                     	ds   4
  1512  000042                     	global	vfpfcnvrt@llu
  1513                           vfpfcnvrt@llu:	; 8 bytes @ 0x45
  1514  000046                     	ds   8
  1515  000046                     	global	?_vfprintf
  1516                           ?_vfprintf:	; 2 bytes @ 0x4D
  1517  00004E                     	global	vfprintf@fp
  1518                           vfprintf@fp:	; 2 bytes @ 0x4D
  1519  00004E                     	ds   2
  1520  00004E                     	global	vfprintf@fmt
  1521                           vfprintf@fmt:	; 2 bytes @ 0x4F
  1522  000050                     	ds   2
  1523  000050                     	global	vfprintf@ap
  1524                           vfprintf@ap:	; 2 bytes @ 0x51
  1525  000052                     	ds   2
  1526  000052                     ??_vfprintf:	; 1 bytes @ 0x53
  1527  000054                     	global	vfprintf@cfmt
  1528                           vfprintf@cfmt:	; 2 bytes @ 0x53
  1529  000054                     	ds   2
  1530  000054                     	global	?_sprintf
  1531                           ?_sprintf:	; 2 bytes @ 0x55
  1532  000056                     	global	sprintf@s
  1533                           sprintf@s:	; 2 bytes @ 0x55
  1534  000056                     	ds   2
  1535  000056                     	global	sprintf@fmt
  1536                           sprintf@fmt:	; 2 bytes @ 0x57
  1537  000058                     	ds   4
  1538  000058                     ??_sprintf:	; 1 bytes @ 0x5B
  1539  00005C                     ?_print_IR:	; 1 bytes @ 0x5B
  1540  00005C                     	global	print_IR@Values
  1541                           print_IR@Values:	; 2 bytes @ 0x5B
  1542  00005C                     	ds   2
  1543  00005C                     ??_print_IR:	; 1 bytes @ 0x5D
  1544  00005E                     	ds   1
  1545  00005E                     ;!
  1546                           ;!Data Sizes:
  1547                           ;!    Strings     19
  1548                           ;!    Constant    0
  1549                           ;!    Data        0
  1550                           ;!    BSS         40
  1551                           ;!    Persistent  0
  1552                           ;!    Stack       0
  1553                           ;!
  1554                           ;!Auto Spaces:
  1555                           ;!    Space          Size  Autos    Used
  1556                           ;!    COMRAM           95     94      94
  1557                           ;!    BANK0           160     32      72
  1558                           ;!    BANK1           256      0       0
  1559                           ;!    BANK2           256      0       0
  1560                           
  1561                           ;!
  1562                           ;!Pointer List with Targets:
  1563                           ;!
  1564                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 32
  1565                           ;!		 -> dbuf(BANK0[32]), 
  1566                           ;!
  1567                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 32
  1568                           ;!		 -> dbuf(BANK0[32]), 
  1569                           ;!
  1570                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
  1571                           ;!		 -> STR_2(CODE[10]), STR_1(CODE[9]), 
  1572                           ;!
  1573                           ;!    sprintf@s	PTR unsigned char  size(2) Largest target is 16
  1574                           ;!		 -> print_IR@buf(BANK0[16]), 
  1575                           ;!
  1576                           ;!    sprintf@ap	PTR void [1] size(2) Largest target is 2
  1577                           ;!		 -> ?_sprintf(COMRAM[2]), 
  1578                           ;!
  1579                           ;!    f.buffer	PTR unsigned char  size(2) Largest target is 16
  1580                           ;!		 -> print_IR@buf(BANK0[16]), 
  1581                           ;!
  1582                           ;!    fputs@s	PTR const unsigned char  size(2) Largest target is 32
  1583                           ;!		 -> dbuf(BANK0[32]), 
  1584                           ;!
  1585                           ;!    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1586                           ;!		 -> sprintf@f(BANK0[6]), 
  1587                           ;!
  1588                           ;!    S973_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
  1589                           ;!		 -> print_IR@buf(BANK0[16]), 
  1590                           ;!
  1591                           ;!    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
  1592                           ;!		 -> print_IR@buf(BANK0[16]), 
  1593                           ;!
  1594                           ;!    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1595                           ;!		 -> sprintf@f(BANK0[6]), 
  1596                           ;!
  1597                           ;!    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
  1598                           ;!		 -> sprintf@ap(BANK0[2]), 
  1599                           ;!
  1600                           ;!    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1601                           ;!		 -> sprintf@f(BANK0[6]), 
  1602                           ;!
  1603                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
  1604                           ;!		 -> STR_2(CODE[10]), STR_1(CODE[9]), 
  1605                           ;!
  1606                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
  1607                           ;!		 -> STR_2(CODE[10]), STR_1(CODE[9]), 
  1608                           ;!
  1609                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1610                           ;!		 -> sprintf@f(BANK0[6]), 
  1611                           ;!
  1612                           ;!    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
  1613                           ;!		 -> sprintf@ap(BANK0[2]), 
  1614                           ;!
  1615                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
  1616                           ;!		 -> vfprintf@cfmt(COMRAM[2]), 
  1617                           ;!
  1618                           ;!    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1619                           ;!		 -> sprintf@f(BANK0[6]), 
  1620                           ;!
  1621                           ;!    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1622                           ;!		 -> sprintf@f(BANK0[6]), 
  1623                           ;!
  1624                           ;!    pad@buf	PTR unsigned char  size(2) Largest target is 32
  1625                           ;!		 -> dbuf(BANK0[32]), 
  1626                           ;!
  1627                           ;!    read_IR@Values	PTR struct Sensor_ir size(2) Largest target is 4
  1628                           ;!		 -> main@Values(BANK0[4]), 
  1629                           ;!
  1630                           ;!    print_IR@Values	PTR struct Sensor_ir size(2) Largest target is 4
  1631                           ;!		 -> main@Values(BANK0[4]), 
  1632                           ;!
  1633                           ;!    LCD_string@string	PTR unsigned char  size(2) Largest target is 16
  1634                           ;!		 -> print_IR@buf(BANK0[16]), 
  1635                           ;!
  1636                           
  1637                           
  1638                           ;!
  1639                           ;!Critical Paths under _main in COMRAM
  1640                           ;!
  1641                           ;!    _main->_print_IR
  1642                           ;!    _print_IR->_sprintf
  1643                           ;!    _sprintf->_vfprintf
  1644                           ;!    _vfprintf->_vfpfcnvrt
  1645                           ;!    _vfpfcnvrt->_utoa
  1646                           ;!    _utoa->_pad
  1647                           ;!    _pad->_fputs
  1648                           ;!    _fputs->_fputc
  1649                           ;!    _LCD_string->_LCD_send
  1650                           ;!    _LCD_line->_LCD_send
  1651                           ;!    _LCD_clear->_LCD_send
  1652                           ;!    _LCD_init->_LCD_send
  1653                           ;!    _LCD_send->_LCD_out
  1654                           ;!
  1655                           ;!Critical Paths under _main in BANK0
  1656                           ;!
  1657                           ;!    _main->_print_IR
  1658                           ;!    _print_IR->_sprintf
  1659                           ;!
  1660                           ;!Critical Paths under _main in BANK1
  1661                           ;!
  1662                           ;!    None.
  1663                           ;!
  1664                           ;!Critical Paths under _main in BANK2
  1665                           ;!
  1666                           ;!    None.
  1667                           
  1668 ;;
  1669 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1670 ;;
  1671                           
  1672                           ;!
  1673                           ;!Call Graph Tables:
  1674                           ;!
  1675                           ;! ---------------------------------------------------------------------------------
  1676                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1677                           ;! ---------------------------------------------------------------------------------
  1678                           ;! (0) _main                                                 6     6      0   10051
  1679                           ;!                                             26 BANK0      6     6      0
  1680                           ;!                           _LCD_init
  1681                           ;!                       _init_capture
  1682                           ;!                           _print_IR
  1683                           ;!                            _read_IR
  1684                           ;! ---------------------------------------------------------------------------------
  1685                           ;! (1) _read_IR                                              4     2      2     120
  1686                           ;!                                              0 COMRAM     4     2      2
  1687                           ;! ---------------------------------------------------------------------------------
  1688                           ;! (1) _print_IR                                            19    17      2    8955
  1689                           ;!                                             91 COMRAM     3     1      2
  1690                           ;!                                             10 BANK0     16    16      0
  1691                           ;!                          _LCD_clear
  1692                           ;!                           _LCD_line
  1693                           ;!                         _LCD_string
  1694                           ;!                            _sprintf
  1695                           ;! ---------------------------------------------------------------------------------
  1696                           ;! (2) _sprintf                                             16    10      6    5986
  1697                           ;!                                             85 COMRAM     6     0      6
  1698                           ;!                                              0 BANK0     10    10      0
  1699                           ;!                           _vfprintf
  1700                           ;! ---------------------------------------------------------------------------------
  1701                           ;! (3) _vfprintf                                             8     2      6    5483
  1702                           ;!                                             77 COMRAM     8     2      6
  1703                           ;!                          _vfpfcnvrt
  1704                           ;! ---------------------------------------------------------------------------------
  1705                           ;! (4) _vfpfcnvrt                                           44    38      6    5130
  1706                           ;!                                             59 COMRAM    18    12      6
  1707                           ;!                              _fputc
  1708                           ;!                               _utoa
  1709                           ;! ---------------------------------------------------------------------------------
  1710                           ;! (5) _utoa                                                32    22     10    3759
  1711                           ;!                                             27 COMRAM    32    22     10
  1712                           ;!                            ___lodiv
  1713                           ;!                            ___lomod
  1714                           ;!                                _pad
  1715                           ;! ---------------------------------------------------------------------------------
  1716                           ;! (6) _pad                                                 11     5      6    2709
  1717                           ;!                                             16 COMRAM    11     5      6
  1718                           ;!                              _fputc
  1719                           ;!                              _fputs
  1720                           ;!                             _strlen
  1721                           ;! ---------------------------------------------------------------------------------
  1722                           ;! (7) _strlen                                               6     4      2     166
  1723                           ;!                                              0 COMRAM     6     4      2
  1724                           ;! ---------------------------------------------------------------------------------
  1725                           ;! (7) _fputs                                                7     3      4    1235
  1726                           ;!                                              9 COMRAM     7     3      4
  1727                           ;!                              _fputc
  1728                           ;! ---------------------------------------------------------------------------------
  1729                           ;! (8) _fputc                                                9     5      4     834
  1730                           ;!                                              0 COMRAM     9     5      4
  1731                           ;!                              _putch
  1732                           ;! ---------------------------------------------------------------------------------
  1733                           ;! (9) _putch                                                1     1      0       0
  1734                           ;! ---------------------------------------------------------------------------------
  1735                           ;! (6) ___lomod                                             17     1     16     311
  1736                           ;!                                              0 COMRAM    17     1     16
  1737                           ;! ---------------------------------------------------------------------------------
  1738                           ;! (6) ___lodiv                                             25     9     16     314
  1739                           ;!                                              0 COMRAM    25     9     16
  1740                           ;! ---------------------------------------------------------------------------------
  1741                           ;! (2) _LCD_string                                           2     0      2    1035
  1742                           ;!                                              4 COMRAM     2     0      2
  1743                           ;!                           _LCD_send
  1744                           ;! ---------------------------------------------------------------------------------
  1745                           ;! (2) _LCD_line                                             1     1      0     882
  1746                           ;!                                              4 COMRAM     1     1      0
  1747                           ;!                           _LCD_send
  1748                           ;! ---------------------------------------------------------------------------------
  1749                           ;! (2) _LCD_clear                                            1     1      0     838
  1750                           ;!                                              4 COMRAM     1     1      0
  1751                           ;!                           _LCD_send
  1752                           ;! ---------------------------------------------------------------------------------
  1753                           ;! (1) _init_capture                                         0     0      0       0
  1754                           ;! ---------------------------------------------------------------------------------
  1755                           ;! (1) _LCD_init                                             1     1      0     926
  1756                           ;!                                              4 COMRAM     1     1      0
  1757                           ;!                            _LCD_out
  1758                           ;!                           _LCD_send
  1759                           ;! ---------------------------------------------------------------------------------
  1760                           ;! (3) _LCD_send                                             2     1      1     838
  1761                           ;!                                              2 COMRAM     2     1      1
  1762                           ;!                            _LCD_out
  1763                           ;! ---------------------------------------------------------------------------------
  1764                           ;! (4) _LCD_out                                              2     2      0      88
  1765                           ;!                                              0 COMRAM     2     2      0
  1766                           ;!                              _E_TOG
  1767                           ;! ---------------------------------------------------------------------------------
  1768                           ;! (5) _E_TOG                                                0     0      0       0
  1769                           ;! ---------------------------------------------------------------------------------
  1770                           ;! Estimated maximum stack depth 9
  1771                           ;! ---------------------------------------------------------------------------------
  1772                           ;!
  1773                           ;! Call Graph Graphs:
  1774                           ;!
  1775                           ;! _main (ROOT)
  1776                           ;!   _LCD_init
  1777                           ;!     _LCD_out
  1778                           ;!       _E_TOG
  1779                           ;!     _LCD_send
  1780                           ;!       _LCD_out
  1781                           ;!         _E_TOG
  1782                           ;!   _init_capture
  1783                           ;!   _print_IR
  1784                           ;!     _LCD_clear
  1785                           ;!       _LCD_send
  1786                           ;!         _LCD_out
  1787                           ;!           _E_TOG
  1788                           ;!     _LCD_line
  1789                           ;!       _LCD_send
  1790                           ;!         _LCD_out
  1791                           ;!           _E_TOG
  1792                           ;!     _LCD_string
  1793                           ;!       _LCD_send
  1794                           ;!         _LCD_out
  1795                           ;!           _E_TOG
  1796                           ;!     _sprintf
  1797                           ;!       _vfprintf
  1798                           ;!         _vfpfcnvrt
  1799                           ;!           _fputc
  1800                           ;!             _putch
  1801                           ;!           _utoa
  1802                           ;!             ___lodiv
  1803                           ;!             ___lomod
  1804                           ;!             _pad
  1805                           ;!               _fputc
  1806                           ;!                 _putch
  1807                           ;!               _fputs
  1808                           ;!                 _fputc
  1809                           ;!                   _putch
  1810                           ;!               _strlen
  1811                           ;!   _read_IR
  1812                           ;!
  1813                           
  1814                           ;! Address spaces:
  1815                           
  1816                           ;!Name               Size   Autos  Total    Cost      Usage
  1817                           ;!BIGRAM             2FF      0       0      10        0.0%
  1818                           ;!EEDATA             100      0       0       0        0.0%
  1819                           ;!BITBANK2           100      0       0       8        0.0%
  1820                           ;!BANK2              100      0       0       9        0.0%
  1821                           ;!BITBANK1           100      0       0       6        0.0%
  1822                           ;!BANK1              100      0       0       7        0.0%
  1823                           ;!BITBANK0            A0      0       0       4        0.0%
  1824                           ;!BANK0               A0     20      48       5       45.0%
  1825                           ;!BITCOMRAM           5F      0       0       0        0.0%
  1826                           ;!COMRAM              5F     5E      5E       1       98.9%
  1827                           ;!BITSFR               0      0       0     200        0.0%
  1828                           ;!SFR                  0      0       0     200        0.0%
  1829                           ;!STACK                0      0       0       2        0.0%
  1830                           ;!NULL                 0      0       0       0        0.0%
  1831                           ;!ABS                  0      0      A6       3        0.0%
  1832                           ;!DATA                 0      0      A6      11        0.0%
  1833                           ;!CODE                 0      0       0       0        0.0%
  1834                           
  1835                           	global	_main
  1836                           
  1837 ;; *************** function _main *****************
  1838 ;; Defined at:
  1839 ;;		line 21 in file "main.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  Values          4   28[BANK0 ] struct Sensor_ir
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1853 ;;      Params:         0       0       0       0
  1854 ;;      Locals:         0       4       0       0
  1855 ;;      Temps:          0       2       0       0
  1856 ;;      Totals:         0       6       0       0
  1857 ;;Total ram usage:        6 bytes
  1858 ;; Hardware stack levels required when called:    9
  1859 ;; This function calls:
  1860 ;;		_LCD_init
  1861 ;;		_init_capture
  1862 ;;		_print_IR
  1863 ;;		_read_IR
  1864 ;; This function is called by:
  1865 ;;		Startup code after reset
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1869                           	file	"main.c"
  1870                           	line	21
  1871                           global __ptext0
  1872                           __ptext0:
  1873  000C8E                     psect	text0
  1874                           	file	"main.c"
  1875                           	line	21
  1876                           	global	__size_of_main
  1877                           	__size_of_main	equ	__end_of_main-_main
  1878  0000                     	
  1879                           _main:
  1880  000C8E                     ;incstack = 0
  1881                           	opt	stack 22
  1882                           	line	22
  1883                           	
  1884                           l1507:
  1885  000C8E                     ;main.c: 22:     ANSEL0 = 0;
  1886                           	movlw	low(0)
  1887  000C8E  0E00               	movwf	((c:4024)),c	;volatile
  1888  000C90  6EB8               	line	23
  1889                           ;main.c: 23:     ANSEL1 = 0;
  1890                           	movlw	low(0)
  1891  000C92  0E00               	movwf	((c:4025)),c	;volatile
  1892  000C94  6EB9               	line	24
  1893                           ;main.c: 24:     OSCCON = 0x72;
  1894                           	movlw	low(072h)
  1895  000C96  0E72               	movwf	((c:4051)),c	;volatile
  1896  000C98  6ED3               	line	25
  1897                           ;main.c: 25:     while (!OSCCONbits.IOFS);
  1898                           	goto	l81
  1899  000C9A  EF4F  F006         	
  1900                           l82:
  1901  000C9E                     	
  1902                           l81:
  1903  000C9E                     	btfss	((c:4051)),c,2	;volatile
  1904  000C9E  A4D3               	goto	u671
  1905  000CA0  EF54  F006         	goto	u670
  1906  000CA4  EF56  F006         u671:
  1907  000CA8                     	goto	l81
  1908  000CA8  EF4F  F006         u670:
  1909  000CAC                     	goto	l1509
  1910  000CAC  EF58  F006         	
  1911                           l83:
  1912  000CB0                     	line	29
  1913                           	
  1914                           l1509:
  1915  000CB0                     ;main.c: 29:     LCD_init();
  1916                           	call	_LCD_init	;wreg free
  1917  000CB0  ECF3  F003         	line	30
  1918                           	
  1919                           l1511:
  1920  000CB4                     ;main.c: 30:     init_capture();
  1921                           	call	_init_capture	;wreg free
  1922  000CB4  ECCF  F007         	goto	l1513
  1923  000CB8  EF5E  F006         	line	34
  1924                           ;main.c: 32:     struct Sensor_ir Values;;main.c: 34:     while (1) {
  1925                           	
  1926                           l84:
  1927  000CBC                     	line	35
  1928                           	
  1929                           l1513:
  1930  000CBC                     ;main.c: 35:         read_IR(&Values);
  1931                           		movlw	low(main@Values)
  1932  000CBC  0EA4               	movwf	((c:read_IR@Values)),c
  1933  000CBE  6E01               	movlw	high(main@Values)
  1934  000CC0  0E00               	movwf	((c:read_IR@Values+1)),c
  1935  000CC2  6E02               
  1936                           	call	_read_IR	;wreg free
  1937  000CC4  EC08  F007         	line	37
  1938                           	
  1939                           l1515:
  1940  000CC8                     ;main.c: 37:         print_IR(&Values);
  1941                           		movlw	low(main@Values)
  1942  000CC8  0EA4               	movwf	((c:print_IR@Values)),c
  1943  000CCA  6E5C               	movlw	high(main@Values)
  1944  000CCC  0E00               	movwf	((c:print_IR@Values+1)),c
  1945  000CCE  6E5D               
  1946                           	call	_print_IR	;wreg free
  1947  000CD0  ECB4  F005         	line	41
  1948                           	
  1949                           l1517:
  1950  000CD4                     ;main.c: 41:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1951                           	opt asmopt_push
  1952                           opt asmopt_off
  1953                           movlw  6
  1954  000CD4  0E06               	movlb	0	; () banked
  1955  000CD6  0100               movwf	(??_main+0+0+1)&0ffh,f
  1956  000CD8  6FA3               movlw	19
  1957  000CDA  0E13               movwf	(??_main+0+0)&0ffh,f
  1958  000CDC  6FA2               	movlw	173
  1959  000CDE  0EAD               u687:
  1960  000CE0                     decfsz	wreg,f
  1961  000CE0  2EE8               	bra	u687
  1962  000CE2  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  1963  000CE4  2FA2               	bra	u687
  1964  000CE6  D7FC               	decfsz	(??_main+0+0+1)&0ffh,f
  1965  000CE8  2FA3               	bra	u687
  1966  000CEA  D7FA               	nop2
  1967  000CEC  D000               opt asmopt_pop
  1968                           
  1969                           	goto	l1513
  1970  000CEE  EF5E  F006         	line	42
  1971                           ;main.c: 42:     }
  1972                           	
  1973                           l85:
  1974  000CF2                     	goto	l1513
  1975  000CF2  EF5E  F006         	
  1976                           l86:
  1977  000CF6                     	line	45
  1978                           	
  1979                           l87:
  1980  000CF6                     	global	start
  1981                           	goto	start
  1982  000CF6  EF00  F000         	opt stack 0
  1983                           GLOBAL	__end_of_main
  1984                           	__end_of_main:
  1985  000CFA                     	signat	_main,89
  1986                           	global	_read_IR
  1987                           
  1988 ;; *************** function _read_IR *****************
  1989 ;; Defined at:
  1990 ;;		line 52 in file "ir.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  Values          2    0[COMRAM] PTR struct Sensor_ir
  1993 ;;		 -> main@Values(4), 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2005 ;;      Params:         2       0       0       0
  2006 ;;      Locals:         0       0       0       0
  2007 ;;      Temps:          2       0       0       0
  2008 ;;      Totals:         4       0       0       0
  2009 ;;Total ram usage:        4 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           psect	text1,class=CODE,space=0,reloc=2,group=0
  2018                           	file	"ir.c"
  2019                           	line	52
  2020                           global __ptext1
  2021                           __ptext1:
  2022  000E10                     psect	text1
  2023                           	file	"ir.c"
  2024                           	line	52
  2025                           	global	__size_of_read_IR
  2026                           	__size_of_read_IR	equ	__end_of_read_IR-_read_IR
  2027  0000                     	
  2028                           _read_IR:
  2029  000E10                     ;incstack = 0
  2030                           	opt	stack 30
  2031                           	line	54
  2032                           	
  2033                           l1505:
  2034  000E10                     ;ir.c: 52: void read_IR(struct Sensor_ir *Values);ir.c: 53: {;ir.c: 54:     Values->left
                                  = ((CAP2BUFH << 8) | (CAP2BUFL))/1;
  2035                           	movf	((c:3942)),c,w	;volatile
  2036  000E10  5066               	movff	(c:3943),??_read_IR+0+0	;volatile
  2037  000E12  CF67 F003          	clrf	(??_read_IR+0+0+1)&0ffh,c
  2038  000E16  6A04               	movff	??_read_IR+0+0,??_read_IR+0+1
  2039  000E18  C003  F004         	clrf	(??_read_IR+0+0),c
  2040  000E1C  6A03               	iorwf	(??_read_IR+0+0),c
  2041  000E1E  1203               	movlw	0
  2042  000E20  0E00               	iorwf	(??_read_IR+0+1),c
  2043  000E22  1204               	movff	(c:read_IR@Values),fsr2l
  2044  000E24  C001  FFD9         	movff	(c:read_IR@Values+1),fsr2h
  2045  000E28  C002  FFDA         	movff	??_read_IR+0+0,postinc2
  2046  000E2C  C003  FFDE         	movff	??_read_IR+0+1,postdec2
  2047  000E30  C004  FFDD         
  2048                           	line	55
  2049                           ;ir.c: 55:     Values->right = ((CAP1BUFH << 8) | (CAP1BUFL))/1;
  2050                           	movf	((c:3944)),c,w	;volatile
  2051  000E34  5068               	movff	(c:3945),??_read_IR+0+0	;volatile
  2052  000E36  CF69 F003          	clrf	(??_read_IR+0+0+1)&0ffh,c
  2053  000E3A  6A04               	movff	??_read_IR+0+0,??_read_IR+0+1
  2054  000E3C  C003  F004         	clrf	(??_read_IR+0+0),c
  2055  000E40  6A03               	iorwf	(??_read_IR+0+0),c
  2056  000E42  1203               	movlw	0
  2057  000E44  0E00               	iorwf	(??_read_IR+0+1),c
  2058  000E46  1204               	lfsr	2,02h
  2059  000E48  EE20 F002          	movf	((c:read_IR@Values)),c,w
  2060  000E4C  5001               	addwf	fsr2l
  2061  000E4E  26D9               	movf	((c:read_IR@Values+1)),c,w
  2062  000E50  5002               	addwfc	fsr2h
  2063  000E52  22DA               	movff	??_read_IR+0+0,postinc2
  2064  000E54  C003  FFDE         	movff	??_read_IR+0+1,postdec2
  2065  000E58  C004  FFDD         
  2066                           	line	56
  2067                           	
  2068                           l118:
  2069  000E5C                     	return	;funcret
  2070  000E5C  0012               	opt stack 0
  2071                           GLOBAL	__end_of_read_IR
  2072                           	__end_of_read_IR:
  2073  000E5E                     	signat	_read_IR,4217
  2074                           	global	_print_IR
  2075                           
  2076 ;; *************** function _print_IR *****************
  2077 ;; Defined at:
  2078 ;;		line 123 in file "lcd.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  Values          2   91[COMRAM] PTR struct Sensor_ir
  2081 ;;		 -> main@Values(4), 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  buf            16   10[BANK0 ] unsigned char [16]
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2093 ;;      Params:         2       0       0       0
  2094 ;;      Locals:         0      16       0       0
  2095 ;;      Temps:          1       0       0       0
  2096 ;;      Totals:         3      16       0       0
  2097 ;;Total ram usage:       19 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    8
  2100 ;; This function calls:
  2101 ;;		_LCD_clear
  2102 ;;		_LCD_line
  2103 ;;		_LCD_string
  2104 ;;		_sprintf
  2105 ;; This function is called by:
  2106 ;;		_main
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           psect	text2,class=CODE,space=0,reloc=2,group=0
  2110                           	file	"lcd.c"
  2111                           	line	123
  2112                           global __ptext2
  2113                           __ptext2:
  2114  000B68                     psect	text2
  2115                           	file	"lcd.c"
  2116                           	line	123
  2117                           	global	__size_of_print_IR
  2118                           	__size_of_print_IR	equ	__end_of_print_IR-_print_IR
  2119  0000                     	
  2120                           _print_IR:
  2121  000B68                     ;incstack = 0
  2122                           	opt	stack 22
  2123                           	line	124
  2124                           	
  2125                           l1485:
  2126  000B68                     ;lcd.c: 124:     LCD_clear();
  2127                           	call	_LCD_clear	;wreg free
  2128  000B68  ECB4  F007         	line	126
  2129                           ;lcd.c: 125:     char buf[16];;lcd.c: 126:     LCD_line(1);
  2130                           	movlw	(01h)&0ffh
  2131  000B6C  0E01               	
  2132                           	call	_LCD_line
  2133  000B6E  EC2F  F007         	line	127
  2134                           	
  2135                           l1487:
  2136  000B72                     ;lcd.c: 127:     sprintf(buf, "Left: %u", Values->left);
  2137                           		movlw	low(print_IR@buf)
  2138  000B72  0E92               	movwf	((c:sprintf@s)),c
  2139  000B74  6E56               	movlw	high(print_IR@buf)
  2140  000B76  0E00               	movwf	((c:sprintf@s+1)),c
  2141  000B78  6E57               
  2142                           		movlw	low(STR_1)
  2143  000B7A  0E0B               	movwf	((c:sprintf@fmt)),c
  2144  000B7C  6E58               	movlw	high(STR_1)
  2145  000B7E  0E03               	movwf	((c:sprintf@fmt+1)),c
  2146  000B80  6E59               
  2147                           	movff	(c:print_IR@Values),fsr2l
  2148  000B82  C05C  FFD9         	movff	(c:print_IR@Values+1),fsr2h
  2149  000B86  C05D  FFDA         	movff	postinc2,0+((c:?_sprintf)+04h)
  2150  000B8A  CFDE F05A          	movff	postdec2,1+((c:?_sprintf)+04h)
  2151  000B8E  CFDD F05B          	call	_sprintf	;wreg free
  2152  000B92  ECB0  F006         	line	128
  2153                           	
  2154                           l1489:
  2155  000B96                     ;lcd.c: 128:     LCD_string(buf);
  2156                           		movlw	low(print_IR@buf)
  2157  000B96  0E92               	movwf	((c:LCD_string@string)),c
  2158  000B98  6E05               	movlw	high(print_IR@buf)
  2159  000B9A  0E00               	movwf	((c:LCD_string@string+1)),c
  2160  000B9C  6E06               
  2161                           	call	_LCD_string	;wreg free
  2162  000B9E  EC7C  F007         	line	129
  2163                           	
  2164                           l1491:
  2165  000BA2                     ;lcd.c: 129:     LCD_line(2);
  2166                           	movlw	(02h)&0ffh
  2167  000BA2  0E02               	
  2168                           	call	_LCD_line
  2169  000BA4  EC2F  F007         	line	130
  2170                           	
  2171                           l1493:
  2172  000BA8                     ;lcd.c: 130:     sprintf(buf, "Right: %u", Values->right);
  2173                           		movlw	low(print_IR@buf)
  2174  000BA8  0E92               	movwf	((c:sprintf@s)),c
  2175  000BAA  6E56               	movlw	high(print_IR@buf)
  2176  000BAC  0E00               	movwf	((c:sprintf@s+1)),c
  2177  000BAE  6E57               
  2178                           		movlw	low(STR_2)
  2179  000BB0  0E01               	movwf	((c:sprintf@fmt)),c
  2180  000BB2  6E58               	movlw	high(STR_2)
  2181  000BB4  0E03               	movwf	((c:sprintf@fmt+1)),c
  2182  000BB6  6E59               
  2183                           	lfsr	2,02h
  2184  000BB8  EE20 F002          	movf	((c:print_IR@Values)),c,w
  2185  000BBC  505C               	addwf	fsr2l
  2186  000BBE  26D9               	movf	((c:print_IR@Values+1)),c,w
  2187  000BC0  505D               	addwfc	fsr2h
  2188  000BC2  22DA               	movff	postinc2,0+((c:?_sprintf)+04h)
  2189  000BC4  CFDE F05A          	movff	postdec2,1+((c:?_sprintf)+04h)
  2190  000BC8  CFDD F05B          	call	_sprintf	;wreg free
  2191  000BCC  ECB0  F006         	line	131
  2192                           ;lcd.c: 131:     LCD_string(buf);
  2193                           		movlw	low(print_IR@buf)
  2194  000BD0  0E92               	movwf	((c:LCD_string@string)),c
  2195  000BD2  6E05               	movlw	high(print_IR@buf)
  2196  000BD4  0E00               	movwf	((c:LCD_string@string+1)),c
  2197  000BD6  6E06               
  2198                           	call	_LCD_string	;wreg free
  2199  000BD8  EC7C  F007         	line	132
  2200                           	
  2201                           l1495:
  2202  000BDC                     ;lcd.c: 132:     _delay((unsigned long)((50)*(8000000/4000.0)));
  2203                           	opt asmopt_push
  2204                           opt asmopt_off
  2205                           movlw	130
  2206  000BDC  0E82               movwf	(??_print_IR+0+0)&0ffh,c,f
  2207  000BDE  6E5E               	movlw	222
  2208  000BE0  0EDE               u697:
  2209  000BE2                     decfsz	wreg,f
  2210  000BE2  2EE8               	bra	u697
  2211  000BE4  D7FE               	decfsz	(??_print_IR+0+0)&0ffh,c,f
  2212  000BE6  2E5E               	bra	u697
  2213  000BE8  D7FC               opt asmopt_pop
  2214                           
  2215                           	line	133
  2216                           	
  2217                           l1497:
  2218  000BEA                     ;lcd.c: 133:     _delay((unsigned long)((50)*(8000000/4000.0)));
  2219                           	opt asmopt_push
  2220                           opt asmopt_off
  2221                           movlw	130
  2222  000BEA  0E82               movwf	(??_print_IR+0+0)&0ffh,c,f
  2223  000BEC  6E5E               	movlw	222
  2224  000BEE  0EDE               u707:
  2225  000BF0                     decfsz	wreg,f
  2226  000BF0  2EE8               	bra	u707
  2227  000BF2  D7FE               	decfsz	(??_print_IR+0+0)&0ffh,c,f
  2228  000BF4  2E5E               	bra	u707
  2229  000BF6  D7FC               opt asmopt_pop
  2230                           
  2231                           	line	134
  2232                           	
  2233                           l1499:
  2234  000BF8                     ;lcd.c: 134:     _delay((unsigned long)((50)*(8000000/4000.0)));
  2235                           	opt asmopt_push
  2236                           opt asmopt_off
  2237                           movlw	130
  2238  000BF8  0E82               movwf	(??_print_IR+0+0)&0ffh,c,f
  2239  000BFA  6E5E               	movlw	222
  2240  000BFC  0EDE               u717:
  2241  000BFE                     decfsz	wreg,f
  2242  000BFE  2EE8               	bra	u717
  2243  000C00  D7FE               	decfsz	(??_print_IR+0+0)&0ffh,c,f
  2244  000C02  2E5E               	bra	u717
  2245  000C04  D7FC               opt asmopt_pop
  2246                           
  2247                           	line	135
  2248                           	
  2249                           l1501:
  2250  000C06                     ;lcd.c: 135:     _delay((unsigned long)((50)*(8000000/4000.0)));
  2251                           	opt asmopt_push
  2252                           opt asmopt_off
  2253                           movlw	130
  2254  000C06  0E82               movwf	(??_print_IR+0+0)&0ffh,c,f
  2255  000C08  6E5E               	movlw	222
  2256  000C0A  0EDE               u727:
  2257  000C0C                     decfsz	wreg,f
  2258  000C0C  2EE8               	bra	u727
  2259  000C0E  D7FE               	decfsz	(??_print_IR+0+0)&0ffh,c,f
  2260  000C10  2E5E               	bra	u727
  2261  000C12  D7FC               opt asmopt_pop
  2262                           
  2263                           	line	137
  2264                           	
  2265                           l58:
  2266  000C14                     	return	;funcret
  2267  000C14  0012               	opt stack 0
  2268                           GLOBAL	__end_of_print_IR
  2269                           	__end_of_print_IR:
  2270  000C16                     	signat	_print_IR,4217
  2271                           	global	_sprintf
  2272                           
  2273 ;; *************** function _sprintf *****************
  2274 ;; Defined at:
  2275 ;;		line 9 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_sprintf.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  s               2   85[COMRAM] PTR unsigned char 
  2278 ;;		 -> print_IR@buf(16), 
  2279 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  2280 ;;		 -> STR_2(10), STR_1(9), 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  f               6    4[BANK0 ] struct _IO_FILE
  2283 ;;  ap              2    2[BANK0 ] PTR void [1]
  2284 ;;		 -> ?_sprintf(2), 
  2285 ;;  ret             2    0[BANK0 ] int 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  2   85[COMRAM] int 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2295 ;;      Params:         6       0       0       0
  2296 ;;      Locals:         0      10       0       0
  2297 ;;      Temps:          0       0       0       0
  2298 ;;      Totals:         6      10       0       0
  2299 ;;Total ram usage:       16 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    7
  2302 ;; This function calls:
  2303 ;;		_vfprintf
  2304 ;; This function is called by:
  2305 ;;		_print_IR
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           psect	text3,class=CODE,space=0,reloc=2,group=2
  2309                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_sprintf.c"
  2310                           	line	9
  2311                           global __ptext3
  2312                           __ptext3:
  2313  000D60                     psect	text3
  2314                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_sprintf.c"
  2315                           	line	9
  2316                           	global	__size_of_sprintf
  2317                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2318  0000                     	
  2319                           _sprintf:
  2320  000D60                     ;incstack = 0
  2321                           	opt	stack 22
  2322                           	line	15
  2323                           	
  2324                           l1433:
  2325  000D60                     		movlw	low(?_sprintf+04h)
  2326  000D60  0E5A               	movlb	0	; () banked
  2327  000D62  0100               	movwf	((sprintf@ap))&0ffh
  2328  000D64  6F8A               	movlw	high(?_sprintf+04h)
  2329  000D66  0E00               	movwf	((sprintf@ap+1))&0ffh
  2330  000D68  6F8B               
  2331                           	line	16
  2332                           		movff	(c:sprintf@s),(sprintf@f)
  2333  000D6A  C056  F08C         	movff	(c:sprintf@s+1),(sprintf@f+1)
  2334  000D6E  C057  F08D         
  2335                           	line	17
  2336                           	
  2337                           l1435:; BSR set to: 0
  2338  000D72                     
  2339                           	movlw	high(0)
  2340  000D72  0E00               	movwf	(1+(sprintf@f+02h))&0ffh
  2341  000D74  6F8F               	movlw	low(0)
  2342  000D76  0E00               	movwf	(0+(sprintf@f+02h))&0ffh
  2343  000D78  6F8E               	line	18
  2344                           	
  2345                           l1437:; BSR set to: 0
  2346  000D7A                     
  2347                           	movlw	high(0)
  2348  000D7A  0E00               	movwf	(1+(sprintf@f+04h))&0ffh
  2349  000D7C  6F91               	movlw	low(0)
  2350  000D7E  0E00               	movwf	(0+(sprintf@f+04h))&0ffh
  2351  000D80  6F90               	line	19
  2352                           	
  2353                           l1439:; BSR set to: 0
  2354  000D82                     
  2355                           		movlw	low(sprintf@f)
  2356  000D82  0E8C               	movwf	((c:vfprintf@fp)),c
  2357  000D84  6E4E               	movlw	high(sprintf@f)
  2358  000D86  0E00               	movwf	((c:vfprintf@fp+1)),c
  2359  000D88  6E4F               
  2360                           		movff	(c:sprintf@fmt),(c:vfprintf@fmt)
  2361  000D8A  C058  F050         	movff	(c:sprintf@fmt+1),(c:vfprintf@fmt+1)
  2362  000D8E  C059  F051         
  2363                           		movlw	low(sprintf@ap)
  2364  000D92  0E8A               	movwf	((c:vfprintf@ap)),c
  2365  000D94  6E52               	movlw	high(sprintf@ap)
  2366  000D96  0E00               	movwf	((c:vfprintf@ap+1)),c
  2367  000D98  6E53               
  2368                           	call	_vfprintf	;wreg free
  2369  000D9A  EC7D  F006         	movff	0+?_vfprintf,(sprintf@ret)
  2370  000D9E  C04E  F088         	movff	1+?_vfprintf,(sprintf@ret+1)
  2371  000DA2  C04F  F089         	line	20
  2372                           	
  2373                           l1441:
  2374  000DA6                     	movlb	0	; () banked
  2375  000DA6  0100               	movf	(0+(sprintf@f+02h))&0ffh,w
  2376  000DA8  518E               	addwf	((c:sprintf@s)),c,w
  2377  000DAA  2456               	movwf	c:fsr2l
  2378  000DAC  6ED9               	movf	(1+(sprintf@f+02h))&0ffh,w
  2379  000DAE  518F               	addwfc	((c:sprintf@s+1)),c,w
  2380  000DB0  2057               	movwf	1+c:fsr2l
  2381  000DB2  6EDA               	movlw	low(0)
  2382  000DB4  0E00               	movwf	indf2
  2383  000DB6  6EDF               	goto	l876
  2384  000DB8  EFDE  F006         	line	22
  2385                           	
  2386                           l1443:; BSR set to: 0
  2387  000DBC                     
  2388                           	line	23
  2389                           ;	Return value of _sprintf is never used
  2390                           	
  2391                           l876:; BSR set to: 0
  2392  000DBC                     
  2393                           	return	;funcret
  2394  000DBC  0012               	opt stack 0
  2395                           GLOBAL	__end_of_sprintf
  2396                           	__end_of_sprintf:
  2397  000DBE                     	signat	_sprintf,4698
  2398                           	global	_vfprintf
  2399                           
  2400 ;; *************** function _vfprintf *****************
  2401 ;; Defined at:
  2402 ;;		line 1368 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
  2405 ;;		 -> sprintf@f(6), 
  2406 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
  2407 ;;		 -> STR_2(10), STR_1(9), 
  2408 ;;  ap              2   81[COMRAM] PTR PTR void 
  2409 ;;		 -> sprintf@ap(2), 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  2412 ;;		 -> STR_2(10), STR_1(9), 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  2   77[COMRAM] int 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2422 ;;      Params:         6       0       0       0
  2423 ;;      Locals:         2       0       0       0
  2424 ;;      Temps:          0       0       0       0
  2425 ;;      Totals:         8       0       0       0
  2426 ;;Total ram usage:        8 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    6
  2429 ;; This function calls:
  2430 ;;		_vfpfcnvrt
  2431 ;; This function is called by:
  2432 ;;		_sprintf
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           psect	text4,class=CODE,space=0,reloc=2,group=0
  2436                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2437                           	line	1368
  2438                           global __ptext4
  2439                           __ptext4:
  2440  000CFA                     psect	text4
  2441                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2442                           	line	1368
  2443                           	global	__size_of_vfprintf
  2444                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  2445  0000                     	
  2446                           _vfprintf:; BSR set to: 0
  2447  000CFA                     
  2448                           ;incstack = 0
  2449                           	opt	stack 22
  2450                           	line	1373
  2451                           	
  2452                           l1401:
  2453  000CFA                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
                                 ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.00/pic/sources/c99/
                                 common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt
                                 .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprn
                                 t.c: 1373:     cfmt = (char *)fmt;
  2454                           		movff	(c:vfprintf@fmt),(c:vfprintf@cfmt)
  2455  000CFA  C050  F054         	movff	(c:vfprintf@fmt+1),(c:vfprintf@cfmt+1)
  2456  000CFE  C051  F055         
  2457                           	line	1374
  2458                           	
  2459                           l1403:
  2460  000D02                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;

  2461                           	movlw	high(0)
  2462  000D02  0E00               	movlb	0	; () banked
  2463  000D04  0100               	movwf	((_nout+1))&0ffh
  2464  000D06  6F61               	movlw	low(0)
  2465  000D08  0E00               	movwf	((_nout))&0ffh
  2466  000D0A  6F60               	line	1375
  2467                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
                                 mt) {
  2468                           	goto	l1407
  2469  000D0C  EF9D  F006         	
  2470                           l173:; BSR set to: 0
  2471  000D10                     
  2472                           	line	1376
  2473                           	
  2474                           l1405:; BSR set to: 0
  2475  000D10                     
  2476                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1376:         nout +
                                 = vfpfcnvrt(fp, &cfmt, ap);
  2477                           		movff	(c:vfprintf@fp),(c:vfpfcnvrt@fp)
  2478  000D10  C04E  F03C         	movff	(c:vfprintf@fp+1),(c:vfpfcnvrt@fp+1)
  2479  000D14  C04F  F03D         
  2480                           		movlw	low(vfprintf@cfmt)
  2481  000D18  0E54               	movwf	((c:vfpfcnvrt@fmt)),c
  2482  000D1A  6E3E               	movlw	high(vfprintf@cfmt)
  2483  000D1C  0E00               	movwf	((c:vfpfcnvrt@fmt+1)),c
  2484  000D1E  6E3F               
  2485                           		movff	(c:vfprintf@ap),(c:vfpfcnvrt@ap)
  2486  000D20  C052  F040         	movff	(c:vfprintf@ap+1),(c:vfpfcnvrt@ap+1)
  2487  000D24  C053  F041         
  2488                           	call	_vfpfcnvrt	;wreg free
  2489  000D28  EC9E  F002         	movf	(0+?_vfpfcnvrt),c,w
  2490  000D2C  503C               	movlb	0	; () banked
  2491  000D2E  0100               	addwf	((_nout))&0ffh
  2492  000D30  2760               	movf	(1+?_vfpfcnvrt),c,w
  2493  000D32  503D               	addwfc	((_nout+1))&0ffh
  2494  000D34  2361               
  2495                           	goto	l1407
  2496  000D36  EF9D  F006         	line	1377
  2497                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1377:     }
  2498                           	
  2499                           l172:; BSR set to: 0
  2500  000D3A                     
  2501                           	line	1375
  2502                           	
  2503                           l1407:; BSR set to: 0
  2504  000D3A                     
  2505                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
                                 mt) {
  2506                           	movff	(c:vfprintf@cfmt),tblptrl
  2507  000D3A  C054  FFF6         	movff	(c:vfprintf@cfmt+1),tblptrh
  2508  000D3E  C055  FFF7         	if	0	;tblptru may be non-zero
  2509  000D42                     	clrf	tblptru
  2511  000D42                     	if	0	;tblptru may be non-zero
  2512  000D42                     	global __mediumconst
  2513                           movlw	low highword(__mediumconst)
  2516  000D42                     	tblrd	*
  2517  000D42  0008               	
  2518                           	movf	tablat,w
  2519  000D44  50F5               	iorlw	0
  2520  000D46  0900               	btfss	status,2
  2521  000D48  A4D8               	goto	u631
  2522  000D4A  EFA9  F006         	goto	u630
  2523  000D4E  EFAB  F006         u631:
  2524  000D52                     	goto	l1405
  2525  000D52  EF88  F006         u630:
  2526  000D56                     	
  2527                           l174:; BSR set to: 0
  2528  000D56                     
  2529                           	line	1378
  2530                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1378:     return nou
                                 t;
  2531                           	movff	(_nout),(c:?_vfprintf)
  2532  000D56  C060  F04E         	movff	(_nout+1),(c:?_vfprintf+1)
  2533  000D5A  C061  F04F         	line	1382
  2534                           	
  2535                           l175:; BSR set to: 0
  2536  000D5E                     
  2537                           	return	;funcret
  2538  000D5E  0012               	opt stack 0
  2539                           GLOBAL	__end_of_vfprintf
  2540                           	__end_of_vfprintf:
  2541  000D60                     	signat	_vfprintf,12410
  2542                           	global	_vfpfcnvrt
  2543                           
  2544 ;; *************** function _vfpfcnvrt *****************
  2545 ;; Defined at:
  2546 ;;		line 670 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  2549 ;;		 -> sprintf@f(6), 
  2550 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  2551 ;;		 -> vfprintf@cfmt(2), 
  2552 ;;  ap              2   63[COMRAM] PTR PTR void 
  2553 ;;		 -> sprintf@ap(2), 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  llu             8   69[COMRAM] unsigned long long 
  2556 ;;  ll              8    0        long long 
  2557 ;;  f               4    0        long long 
  2558 ;;  vp              3    0        PTR void 
  2559 ;;  ct              3    0        unsigned char [3]
  2560 ;;  cp              3    0        PTR unsigned char 
  2561 ;;  i               2    0        int 
  2562 ;;  done            2    0        int 
  2563 ;;  c               1    0        unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2   59[COMRAM] int 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2573 ;;      Params:         6       0       0       0
  2574 ;;      Locals:         8       0       0       0
  2575 ;;      Temps:          4       0       0       0
  2576 ;;      Totals:        18       0       0       0
  2577 ;;Total ram usage:       18 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    5
  2580 ;; This function calls:
  2581 ;;		_fputc
  2582 ;;		_utoa
  2583 ;; This function is called by:
  2584 ;;		_vfprintf
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           psect	text5,class=CODE,space=0,reloc=2,group=0
  2588                           	line	670
  2589                           global __ptext5
  2590                           __ptext5:
  2591  00053C                     psect	text5
  2592                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2593                           	line	670
  2594                           	global	__size_of_vfpfcnvrt
  2595                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  2596  0000                     	
  2597                           _vfpfcnvrt:; BSR set to: 0
  2598  00053C                     
  2599                           ;incstack = 0
  2600                           	opt	stack 22
  2601                           	line	680
  2602                           	
  2603                           l1353:
  2604  00053C                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 670: static int vfpf
                                 cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.00/pic/sources/c
                                 99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/dopr
                                 nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.00/pic/sources/c99/com
                                 mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.00/pic/sources/c99/co
                                 mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.00/pic/sources/c99/
                                 common/doprnt.c: 675:     unsigned long long llu;
  2605                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2606  00053C  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2607  000540  C03F  FFDA         	movff	postinc2,tblptrl
  2608  000544  CFDE FFF6          	movff	postdec2,tblptrh
  2609  000548  CFDD FFF7          	if	0	;tblptru may be non-zero
  2610  00054C                     	clrf	tblptru
  2612  00054C                     	if	0	;tblptru may be non-zero
  2613  00054C                     	global __mediumconst
  2614                           movlw	low highword(__mediumconst)
  2617  00054C                     	tblrd	*
  2618  00054C  0008               	
  2619                           	movf	tablat,w
  2620  00054E  50F5               	xorlw	025h
  2621  000550  0A25               	btfss	status,2
  2622  000552  A4D8               	goto	u591
  2623  000554  EFAE  F002         	goto	u590
  2624  000558  EFB0  F002         u591:
  2625  00055C                     	goto	l1385
  2626  00055C  EF51  F003         u590:
  2627  000560                     	line	681
  2628                           	
  2629                           l1355:
  2630  000560                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
                                 
  2631                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2632  000560  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2633  000564  C03F  FFDA         	incf	postinc2
  2634  000568  2ADE               	movlw	0
  2635  00056A  0E00               	addwfc	postdec2
  2636  00056C  22DD               	line	683
  2637                           	
  2638                           l1357:
  2639  00056E                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 683:         flags =
                                  width = 0;
  2640                           	movlw	high(0)
  2641  00056E  0E00               	movlb	0	; () banked
  2642  000570  0100               	movwf	((_width+1))&0ffh
  2643  000572  6F63               	movlw	low(0)
  2644  000574  0E00               	movwf	((_width))&0ffh
  2645  000576  6F62               	movff	(_width),(_flags)
  2646  000578  C062  F066         	movff	(_width+1),(_flags+1)
  2647  00057C  C063  F067         	line	684
  2648                           	
  2649                           l1359:; BSR set to: 0
  2650  000580                     
  2651                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 684:         prec = 
                                 -1;
  2652                           	setf	((_prec))&0ffh
  2653  000580  6964               	setf	((_prec+1))&0ffh
  2654  000582  6965               	line	1182
  2655                           	
  2656                           l1361:; BSR set to: 0
  2657  000584                     
  2658                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1182:         if (*f
                                 mt[0] == 'u') {
  2659                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2660  000584  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2661  000588  C03F  FFDA         	movff	postinc2,tblptrl
  2662  00058C  CFDE FFF6          	movff	postdec2,tblptrh
  2663  000590  CFDD FFF7          	if	0	;tblptru may be non-zero
  2664  000594                     	clrf	tblptru
  2666  000594                     	if	0	;tblptru may be non-zero
  2667  000594                     	global __mediumconst
  2668                           movlw	low highword(__mediumconst)
  2671  000594                     	tblrd	*
  2672  000594  0008               	
  2673                           	movf	tablat,w
  2674  000596  50F5               	xorlw	075h
  2675  000598  0A75               	btfss	status,2
  2676  00059A  A4D8               	goto	u601
  2677  00059C  EFD2  F002         	goto	u600
  2678  0005A0  EFD4  F002         u601:
  2679  0005A4                     	goto	l1369
  2680  0005A4  EF17  F003         u600:
  2681  0005A8                     	line	1184
  2682                           	
  2683                           l1363:; BSR set to: 0
  2684  0005A8                     
  2685                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1184:             ++
                                 *fmt;
  2686                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2687  0005A8  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2688  0005AC  C03F  FFDA         	incf	postinc2
  2689  0005B0  2ADE               	movlw	0
  2690  0005B2  0E00               	addwfc	postdec2
  2691  0005B4  22DD               	line	1185
  2692                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1185:             ll
                                 u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
                                 ));
  2693                           	movff	(c:vfpfcnvrt@ap),fsr2l
  2694  0005B6  C040  FFD9         	movff	(c:vfpfcnvrt@ap+1),fsr2h
  2695  0005BA  C041  FFDA         	movff	indf2,??_vfpfcnvrt+0+0
  2696  0005BE  CFDF F042          	movlw	low(02h)
  2697  0005C2  0E02               	addwf	postinc2
  2698  0005C4  26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
  2699  0005C6  CFDF F043          	movlw	high(02h)
  2700  0005CA  0E00               	addwfc	postdec2
  2701  0005CC  22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
  2702  0005CE  C042  FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
  2703  0005D2  C043  FFDA         	movff	postinc2,??_vfpfcnvrt+2+0
  2704  0005D6  CFDE F044          	movff	postdec2,??_vfpfcnvrt+2+0+1
  2705  0005DA  CFDD F045          	movff	??_vfpfcnvrt+2+0,(c:vfpfcnvrt@llu)
  2706  0005DE  C044  F046         	movff	??_vfpfcnvrt+2+1,(c:vfpfcnvrt@llu+1)
  2707  0005E2  C045  F047         	clrf	((c:vfpfcnvrt@llu+2)),c
  2708  0005E6  6A48               	clrf	((c:vfpfcnvrt@llu+3)),c
  2709  0005E8  6A49               	clrf	((c:vfpfcnvrt@llu+4)),c
  2710  0005EA  6A4A               	clrf	((c:vfpfcnvrt@llu+5)),c
  2711  0005EC  6A4B               	clrf	((c:vfpfcnvrt@llu+6)),c
  2712  0005EE  6A4C               	clrf	((c:vfpfcnvrt@llu+7)),c
  2713  0005F0  6A4D               
  2714                           	line	1187
  2715                           	
  2716                           l1365:; BSR set to: 0
  2717  0005F2                     
  2718                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1187:             re
                                 turn utoa(fp, llu);
  2719                           		movff	(c:vfpfcnvrt@fp),(c:utoa@fp)
  2720  0005F2  C03C  F01C         	movff	(c:vfpfcnvrt@fp+1),(c:utoa@fp+1)
  2721  0005F6  C03D  F01D         
  2722                           	movff	(c:vfpfcnvrt@llu),(c:utoa@d)
  2723  0005FA  C046  F01E         	movff	(c:vfpfcnvrt@llu+1),(c:utoa@d+1)
  2724  0005FE  C047  F01F         	movff	(c:vfpfcnvrt@llu+2),(c:utoa@d+2)
  2725  000602  C048  F020         	movff	(c:vfpfcnvrt@llu+3),(c:utoa@d+3)
  2726  000606  C049  F021         	movff	(c:vfpfcnvrt@llu+4),(c:utoa@d+4)
  2727  00060A  C04A  F022         	movff	(c:vfpfcnvrt@llu+5),(c:utoa@d+5)
  2728  00060E  C04B  F023         	movff	(c:vfpfcnvrt@llu+6),(c:utoa@d+6)
  2729  000612  C04C  F024         	movff	(c:vfpfcnvrt@llu+7),(c:utoa@d+7)
  2730  000616  C04D  F025         	call	_utoa	;wreg free
  2731  00061A  EC8B  F001         	movff	0+?_utoa,(c:?_vfpfcnvrt)
  2732  00061E  C01C  F03C         	movff	1+?_utoa,(c:?_vfpfcnvrt+1)
  2733  000622  C01D  F03D         	goto	l168
  2734  000626  EF70  F003         	
  2735                           l1367:
  2736  00062A                     	goto	l168
  2737  00062A  EF70  F003         	line	1188
  2738                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1188:         }
  2739                           	
  2740                           l167:
  2741  00062E                     	line	1350
  2742                           	
  2743                           l1369:
  2744  00062E                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1350:         if ((*
                                 fmt)[0] == '%') {
  2745                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2746  00062E  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2747  000632  C03F  FFDA         	movff	postinc2,tblptrl
  2748  000636  CFDE FFF6          	movff	postdec2,tblptrh
  2749  00063A  CFDD FFF7          	if	0	;tblptru may be non-zero
  2750  00063E                     	clrf	tblptru
  2752  00063E                     	if	0	;tblptru may be non-zero
  2753  00063E                     	global __mediumconst
  2754                           movlw	low highword(__mediumconst)
  2757  00063E                     	tblrd	*
  2758  00063E  0008               	
  2759                           	movf	tablat,w
  2760  000640  50F5               	xorlw	025h
  2761  000642  0A25               	btfss	status,2
  2762  000644  A4D8               	goto	u611
  2763  000646  EF27  F003         	goto	u610
  2764  00064A  EF29  F003         u611:
  2765  00064E                     	goto	l1379
  2766  00064E  EF42  F003         u610:
  2767  000652                     	line	1351
  2768                           	
  2769                           l1371:
  2770  000652                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1351:             ++
                                 *fmt;
  2771                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2772  000652  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2773  000656  C03F  FFDA         	incf	postinc2
  2774  00065A  2ADE               	movlw	0
  2775  00065C  0E00               	addwfc	postdec2
  2776  00065E  22DD               	line	1352
  2777                           	
  2778                           l1373:
  2779  000660                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1352:             fp
                                 utc((int)'%', fp);
  2780                           	movlw	high(025h)
  2781  000660  0E00               	movwf	((c:fputc@c+1)),c
  2782  000662  6E02               	movlw	low(025h)
  2783  000664  0E25               	movwf	((c:fputc@c)),c
  2784  000666  6E01               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  2785  000668  C03C  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  2786  00066C  C03D  F004         
  2787                           	call	_fputc	;wreg free
  2788  000670  ECDA  F004         	line	1353
  2789                           	
  2790                           l1375:
  2791  000674                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1353:             re
                                 turn 1;
  2792                           	movlw	high(01h)
  2793  000674  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  2794  000676  6E3D               	movlw	low(01h)
  2795  000678  0E01               	movwf	((c:?_vfpfcnvrt)),c
  2796  00067A  6E3C               	goto	l168
  2797  00067C  EF70  F003         	
  2798                           l1377:
  2799  000680                     	goto	l168
  2800  000680  EF70  F003         	line	1354
  2801                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1354:         }
  2802                           	
  2803                           l169:
  2804  000684                     	line	1357
  2805                           	
  2806                           l1379:
  2807  000684                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
                                 ;
  2808                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2809  000684  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2810  000688  C03F  FFDA         	incf	postinc2
  2811  00068C  2ADE               	movlw	0
  2812  00068E  0E00               	addwfc	postdec2
  2813  000690  22DD               	line	1358
  2814                           	
  2815                           l1381:
  2816  000692                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1358:         return
                                  0;
  2817                           	movlw	high(0)
  2818  000692  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  2819  000694  6E3D               	movlw	low(0)
  2820  000696  0E00               	movwf	((c:?_vfpfcnvrt)),c
  2821  000698  6E3C               	goto	l168
  2822  00069A  EF70  F003         	
  2823                           l1383:
  2824  00069E                     	goto	l168
  2825  00069E  EF70  F003         	line	1359
  2826                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1359:     }
  2827                           	
  2828                           l166:
  2829  0006A2                     	line	1362
  2830                           	
  2831                           l1385:
  2832  0006A2                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
                                 )(*fmt)[0], fp);
  2833                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2834  0006A2  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2835  0006A6  C03F  FFDA         	movff	postinc2,tblptrl
  2836  0006AA  CFDE FFF6          	movff	postdec2,tblptrh
  2837  0006AE  CFDD FFF7          	if	0	;tblptru may be non-zero
  2838  0006B2                     	clrf	tblptru
  2840  0006B2                     	if	0	;tblptru may be non-zero
  2841  0006B2                     	global __mediumconst
  2842                           movlw	low highword(__mediumconst)
  2845  0006B2                     	tblrd	*
  2846  0006B2  0008               	
  2847                           	movf	tablat,w
  2848  0006B4  50F5               
  2849                           	movwf	((c:fputc@c)),c
  2850  0006B6  6E01               	clrf	((c:fputc@c+1)),c
  2851  0006B8  6A02               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  2852  0006BA  C03C  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  2853  0006BE  C03D  F004         
  2854                           	call	_fputc	;wreg free
  2855  0006C2  ECDA  F004         	line	1363
  2856                           	
  2857                           l1387:
  2858  0006C6                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2859                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2860  0006C6  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2861  0006CA  C03F  FFDA         	incf	postinc2
  2862  0006CE  2ADE               	movlw	0
  2863  0006D0  0E00               	addwfc	postdec2
  2864  0006D2  22DD               	line	1364
  2865                           	
  2866                           l1389:
  2867  0006D4                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1364:     return 1;

  2868                           	movlw	high(01h)
  2869  0006D4  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  2870  0006D6  6E3D               	movlw	low(01h)
  2871  0006D8  0E01               	movwf	((c:?_vfpfcnvrt)),c
  2872  0006DA  6E3C               	goto	l168
  2873  0006DC  EF70  F003         	
  2874                           l1391:
  2875  0006E0                     	line	1365
  2876                           	
  2877                           l168:
  2878  0006E0                     	return	;funcret
  2879  0006E0  0012               	opt stack 0
  2880                           GLOBAL	__end_of_vfpfcnvrt
  2881                           	__end_of_vfpfcnvrt:
  2882  0006E2                     	signat	_vfpfcnvrt,12410
  2883                           	global	_utoa
  2884                           
  2885 ;; *************** function _utoa *****************
  2886 ;; Defined at:
  2887 ;;		line 593 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2890 ;;		 -> sprintf@f(6), 
  2891 ;;  d               8   29[COMRAM] unsigned long long 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  n               8   49[COMRAM] unsigned long long 
  2894 ;;  i               2   57[COMRAM] int 
  2895 ;;  w               2   47[COMRAM] int 
  2896 ;;  p               2   45[COMRAM] int 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  2   27[COMRAM] int 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2906 ;;      Params:        10       0       0       0
  2907 ;;      Locals:        14       0       0       0
  2908 ;;      Temps:          8       0       0       0
  2909 ;;      Totals:        32       0       0       0
  2910 ;;Total ram usage:       32 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    4
  2913 ;; This function calls:
  2914 ;;		___lodiv
  2915 ;;		___lomod
  2916 ;;		_pad
  2917 ;; This function is called by:
  2918 ;;		_vfpfcnvrt
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           psect	text6,class=CODE,space=0,reloc=2,group=0
  2922                           	line	593
  2923                           global __ptext6
  2924                           __ptext6:
  2925  000316                     psect	text6
  2926                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2927                           	line	593
  2928                           	global	__size_of_utoa
  2929                           	__size_of_utoa	equ	__end_of_utoa-_utoa
  2930  0000                     	
  2931                           _utoa:
  2932  000316                     ;incstack = 0
  2933                           	opt	stack 22
  2934                           	line	599
  2935                           	
  2936                           l1311:
  2937  000316                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 593: static int utoa
                                 (FILE *fp, unsigned long long d);/Applications/microchip/xc8/v2.00/pic/sources/c99/commo
                                 n/doprnt.c: 594: {;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 59
                                 5:     int i, p, w;;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 5
                                 96:     unsigned long long n;;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/d
                                 oprnt.c: 599:     if (!(prec < 0)) {
  2938                           	movlb	0	; () banked
  2939  000316  0100               	btfsc	((_prec+1))&0ffh,7
  2940  000318  BF65               	goto	u521
  2941  00031A  EF91  F001         	goto	u520
  2942  00031E  EF93  F001         
  2943                           u521:
  2944  000322                     	goto	l1315
  2945  000322  EF96  F001         u520:
  2946  000326                     	line	600
  2947                           	
  2948                           l1313:; BSR set to: 0
  2949  000326                     
  2950                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 600:         flags &
                                 = ~(1 << 1);
  2951                           	bcf	(0+(1/8)+(_flags))&0ffh,(1)&7
  2952  000326  9366               	goto	l1315
  2953  000328  EF96  F001         	line	601
  2954                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 601:     }
  2955                           	
  2956                           l151:; BSR set to: 0
  2957  00032C                     
  2958                           	line	602
  2959                           	
  2960                           l1315:; BSR set to: 0
  2961  00032C                     
  2962                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 602:     p = (0 < pr
                                 ec) ? prec : 1;
  2963                           	btfsc	((_prec+1))&0ffh,7
  2964  00032C  BF65               	goto	u530
  2965  00032E  EFA3  F001         	movf	((_prec+1))&0ffh,w
  2966  000332  5165               	bnz	u531
  2967  000334  E106               	decf	((_prec))&0ffh,w
  2968  000336  0564               	btfsc	status,0
  2969  000338  B0D8               	goto	u531
  2970  00033A  EFA1  F001         	goto	u530
  2971  00033E  EFA3  F001         
  2972                           u531:
  2973  000342                     	goto	l153
  2974  000342  EFA9  F001         u530:
  2975  000346                     	
  2976                           l1317:; BSR set to: 0
  2977  000346                     
  2978                           	movlw	high(01h)
  2979  000346  0E00               	movwf	((c:utoa@p+1)),c
  2980  000348  6E2F               	movlw	low(01h)
  2981  00034A  0E01               	movwf	((c:utoa@p)),c
  2982  00034C  6E2E               	goto	l155
  2983  00034E  EFAD  F001         	
  2984                           l153:; BSR set to: 0
  2985  000352                     
  2986                           	movff	(_prec),(c:utoa@p)
  2987  000352  C064  F02E         	movff	(_prec+1),(c:utoa@p+1)
  2988  000356  C065  F02F         	
  2989                           l155:; BSR set to: 0
  2990  00035A                     
  2991                           	line	603
  2992                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 603:     w = width;

  2993                           	movff	(_width),(c:utoa@w)
  2994  00035A  C062  F030         	movff	(_width+1),(c:utoa@w+1)
  2995  00035E  C063  F031         	line	606
  2996                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 606:     n = d;
  2997                           	movff	(c:utoa@d),(c:utoa@n)
  2998  000362  C01E  F032         	movff	(c:utoa@d+1),(c:utoa@n+1)
  2999  000366  C01F  F033         	movff	(c:utoa@d+2),(c:utoa@n+2)
  3000  00036A  C020  F034         	movff	(c:utoa@d+3),(c:utoa@n+3)
  3001  00036E  C021  F035         	movff	(c:utoa@d+4),(c:utoa@n+4)
  3002  000372  C022  F036         	movff	(c:utoa@d+5),(c:utoa@n+5)
  3003  000376  C023  F037         	movff	(c:utoa@d+6),(c:utoa@n+6)
  3004  00037A  C024  F038         	movff	(c:utoa@d+7),(c:utoa@n+7)
  3005  00037E  C025  F039         	line	607
  3006                           	
  3007                           l1319:; BSR set to: 0
  3008  000382                     
  3009                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(
                                 dbuf) - 1;
  3010                           	movlw	high(01Fh)
  3011  000382  0E00               	movwf	((c:utoa@i+1)),c
  3012  000384  6E3B               	movlw	low(01Fh)
  3013  000386  0E1F               	movwf	((c:utoa@i)),c
  3014  000388  6E3A               	line	608
  3015                           	
  3016                           l1321:; BSR set to: 0
  3017  00038A                     
  3018                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '
                                 \0';
  3019                           	movlw	low(_dbuf)
  3020  00038A  0E68               	addwf	((c:utoa@i)),c,w
  3021  00038C  243A               	movwf	c:fsr2l
  3022  00038E  6ED9               	movlw	high(_dbuf)
  3023  000390  0E00               	addwfc	((c:utoa@i+1)),c,w
  3024  000392  203B               	movwf	1+c:fsr2l
  3025  000394  6EDA               	movlw	low(0)
  3026  000396  0E00               	movwf	indf2
  3027  000398  6EDF               	line	609
  3028                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 609:     while (i &&
                                  (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3029                           	goto	l1333
  3030  00039A  EF47  F002         	
  3031                           l157:; BSR set to: 0
  3032  00039E                     
  3033                           	line	610
  3034                           	
  3035                           l1323:
  3036  00039E                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 610:         --i;
  3037                           	decf	((c:utoa@i)),c
  3038  00039E  063A               	btfss	status,0
  3039  0003A0  A0D8               	decf	((c:utoa@i+1)),c
  3040  0003A2  063B               	line	611
  3041                           	
  3042                           l1325:
  3043  0003A4                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 611:         dbuf[i]
                                  = '0' + (n % 10);
  3044                           	movlw	low(_dbuf)
  3045  0003A4  0E68               	addwf	((c:utoa@i)),c,w
  3046  0003A6  243A               	movwf	c:fsr2l
  3047  0003A8  6ED9               	movlw	high(_dbuf)
  3048  0003AA  0E00               	addwfc	((c:utoa@i+1)),c,w
  3049  0003AC  203B               	movwf	1+c:fsr2l
  3050  0003AE  6EDA               	movff	(c:utoa@n),(c:___lomod@dividend)
  3051  0003B0  C032  F001         	movff	(c:utoa@n+1),(c:___lomod@dividend+1)
  3052  0003B4  C033  F002         	movff	(c:utoa@n+2),(c:___lomod@dividend+2)
  3053  0003B8  C034  F003         	movff	(c:utoa@n+3),(c:___lomod@dividend+3)
  3054  0003BC  C035  F004         	movff	(c:utoa@n+4),(c:___lomod@dividend+4)
  3055  0003C0  C036  F005         	movff	(c:utoa@n+5),(c:___lomod@dividend+5)
  3056  0003C4  C037  F006         	movff	(c:utoa@n+6),(c:___lomod@dividend+6)
  3057  0003C8  C038  F007         	movff	(c:utoa@n+7),(c:___lomod@dividend+7)
  3058  0003CC  C039  F008         	movlw	byte0(0Ah)
  3059  0003D0  0E0A               	movwf	((c:___lomod@divisor)),c
  3060  0003D2  6E09               	movlw	byte1(0Ah)
  3061  0003D4  0E00               	movwf	((c:___lomod@divisor+1)),c
  3062  0003D6  6E0A               	movlw	byte2(0Ah)
  3063  0003D8  0E00               	movwf	((c:___lomod@divisor+2)),c
  3064  0003DA  6E0B               	movlw	byte3(0Ah)
  3065  0003DC  0E00               	movwf	((c:___lomod@divisor+3)),c
  3066  0003DE  6E0C               	movlw	byte4(0Ah)
  3067  0003E0  0E00               	movwf	((c:___lomod@divisor+4)),c
  3068  0003E2  6E0D               	movlw	byte5(0Ah)
  3069  0003E4  0E00               	movwf	((c:___lomod@divisor+5)),c
  3070  0003E6  6E0E               	movlw	byte6(0Ah)
  3071  0003E8  0E00               	movwf	((c:___lomod@divisor+6)),c
  3072  0003EA  6E0F               	movlw	byte7(0Ah)
  3073  0003EC  0E00               	movwf	((c:___lomod@divisor+7)),c
  3074  0003EE  6E10               	call	___lomod	;wreg free
  3075  0003F0  EC68  F004         	movff	0+?___lomod,??_utoa+0+0
  3076  0003F4  C001  F026         	movff	1+?___lomod,??_utoa+0+0+1
  3077  0003F8  C002  F027         	movff	2+?___lomod,??_utoa+0+0+2
  3078  0003FC  C003  F028         	movff	3+?___lomod,??_utoa+0+0+3
  3079  000400  C004  F029         	movff	4+?___lomod,??_utoa+0+0+4
  3080  000404  C005  F02A         	movff	5+?___lomod,??_utoa+0+0+5
  3081  000408  C006  F02B         	movff	6+?___lomod,??_utoa+0+0+6
  3082  00040C  C007  F02C         	movff	7+?___lomod,??_utoa+0+0+7
  3083  000410  C008  F02D         	
  3084                           	movf	(??_utoa+0+0),c,w
  3085  000414  5026               	addlw	low(030h)
  3086  000416  0F30               	movwf	indf2,c
  3087  000418  6EDF               
  3088                           	line	612
  3089                           	
  3090                           l1327:
  3091  00041A                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 612:         --p;
  3092                           	decf	((c:utoa@p)),c
  3093  00041A  062E               	btfss	status,0
  3094  00041C  A0D8               	decf	((c:utoa@p+1)),c
  3095  00041E  062F               	line	613
  3096                           	
  3097                           l1329:
  3098  000420                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 613:         --w;
  3099                           	decf	((c:utoa@w)),c
  3100  000420  0630               	btfss	status,0
  3101  000422  A0D8               	decf	((c:utoa@w+1)),c
  3102  000424  0631               	line	614
  3103                           	
  3104                           l1331:
  3105  000426                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 614:         n = n /
                                  10;
  3106                           	movff	(c:utoa@n),(c:___lodiv@dividend)
  3107  000426  C032  F001         	movff	(c:utoa@n+1),(c:___lodiv@dividend+1)
  3108  00042A  C033  F002         	movff	(c:utoa@n+2),(c:___lodiv@dividend+2)
  3109  00042E  C034  F003         	movff	(c:utoa@n+3),(c:___lodiv@dividend+3)
  3110  000432  C035  F004         	movff	(c:utoa@n+4),(c:___lodiv@dividend+4)
  3111  000436  C036  F005         	movff	(c:utoa@n+5),(c:___lodiv@dividend+5)
  3112  00043A  C037  F006         	movff	(c:utoa@n+6),(c:___lodiv@dividend+6)
  3113  00043E  C038  F007         	movff	(c:utoa@n+7),(c:___lodiv@dividend+7)
  3114  000442  C039  F008         	movlw	byte0(0Ah)
  3115  000446  0E0A               	movwf	((c:___lodiv@divisor)),c
  3116  000448  6E09               	movlw	byte1(0Ah)
  3117  00044A  0E00               	movwf	((c:___lodiv@divisor+1)),c
  3118  00044C  6E0A               	movlw	byte2(0Ah)
  3119  00044E  0E00               	movwf	((c:___lodiv@divisor+2)),c
  3120  000450  6E0B               	movlw	byte3(0Ah)
  3121  000452  0E00               	movwf	((c:___lodiv@divisor+3)),c
  3122  000454  6E0C               	movlw	byte4(0Ah)
  3123  000456  0E00               	movwf	((c:___lodiv@divisor+4)),c
  3124  000458  6E0D               	movlw	byte5(0Ah)
  3125  00045A  0E00               	movwf	((c:___lodiv@divisor+5)),c
  3126  00045C  6E0E               	movlw	byte6(0Ah)
  3127  00045E  0E00               	movwf	((c:___lodiv@divisor+6)),c
  3128  000460  6E0F               	movlw	byte7(0Ah)
  3129  000462  0E00               	movwf	((c:___lodiv@divisor+7)),c
  3130  000464  6E10               	call	___lodiv	;wreg free
  3131  000466  EC71  F003         	movff	0+?___lodiv,(c:utoa@n)
  3132  00046A  C001  F032         	movff	1+?___lodiv,(c:utoa@n+1)
  3133  00046E  C002  F033         	movff	2+?___lodiv,(c:utoa@n+2)
  3134  000472  C003  F034         	movff	3+?___lodiv,(c:utoa@n+3)
  3135  000476  C004  F035         	movff	4+?___lodiv,(c:utoa@n+4)
  3136  00047A  C005  F036         	movff	5+?___lodiv,(c:utoa@n+5)
  3137  00047E  C006  F037         	movff	6+?___lodiv,(c:utoa@n+6)
  3138  000482  C007  F038         	movff	7+?___lodiv,(c:utoa@n+7)
  3139  000486  C008  F039         	
  3140                           	goto	l1333
  3141  00048A  EF47  F002         	line	615
  3142                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 615:     }
  3143                           	
  3144                           l156:
  3145  00048E                     	line	609
  3146                           	
  3147                           l1333:
  3148  00048E                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 609:     while (i &&
                                  (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3149                           	movf	((c:utoa@i)),c,w
  3150  00048E  503A               iorwf	((c:utoa@i+1)),c,w
  3151  000490  103B               	btfsc	status,2
  3152  000492  B4D8               	goto	u541
  3153  000494  EF4E  F002         	goto	u540
  3154  000498  EF50  F002         
  3155                           u541:
  3156  00049C                     	goto	l1343
  3157  00049C  EF87  F002         u540:
  3158  0004A0                     	
  3159                           l1335:
  3160  0004A0                     	movf	((c:utoa@n)),c,w
  3161  0004A0  5032               iorwf	((c:utoa@n+1)),c,w
  3162  0004A2  1033               iorwf	((c:utoa@n+2)),c,w
  3163  0004A4  1034               iorwf	((c:utoa@n+3)),c,w
  3164  0004A6  1035               iorwf	((c:utoa@n+4)),c,w
  3165  0004A8  1036               iorwf	((c:utoa@n+5)),c,w
  3166  0004AA  1037               iorwf	((c:utoa@n+6)),c,w
  3167  0004AC  1038               iorwf	((c:utoa@n+7)),c,w
  3168  0004AE  1039               	btfss	status,2
  3169  0004B0  A4D8               	goto	u551
  3170  0004B2  EF5D  F002         	goto	u550
  3171  0004B6  EF5F  F002         
  3172                           u551:
  3173  0004BA                     	goto	l1323
  3174  0004BA  EFCF  F001         u550:
  3175  0004BE                     	
  3176                           l1337:
  3177  0004BE                     	btfsc	((c:utoa@p+1)),c,7
  3178  0004BE  BE2F               	goto	u560
  3179  0004C0  EF6C  F002         	movf	((c:utoa@p+1)),c,w
  3180  0004C4  502F               	bnz	u561
  3181  0004C6  E106               	decf	((c:utoa@p)),c,w
  3182  0004C8  042E               	btfsc	status,0
  3183  0004CA  B0D8               	goto	u561
  3184  0004CC  EF6A  F002         	goto	u560
  3185  0004D0  EF6C  F002         
  3186                           u561:
  3187  0004D4                     	goto	l1323
  3188  0004D4  EFCF  F001         u560:
  3189  0004D8                     	
  3190                           l1339:
  3191  0004D8                     	btfsc	((c:utoa@w+1)),c,7
  3192  0004D8  BE31               	goto	u571
  3193  0004DA  EF77  F002         	movf	((c:utoa@w+1)),c,w
  3194  0004DE  5031               	bnz	u570
  3195  0004E0  E108               	decf	((c:utoa@w)),c,w
  3196  0004E2  0430               	btfss	status,0
  3197  0004E4  A0D8               	goto	u571
  3198  0004E6  EF77  F002         	goto	u570
  3199  0004EA  EF79  F002         
  3200                           u571:
  3201  0004EE                     	goto	l1343
  3202  0004EE  EF87  F002         u570:
  3203  0004F2                     	
  3204                           l1341:
  3205  0004F2                     	movlb	0	; () banked
  3206  0004F2  0100               	
  3207                           	btfsc	((_flags))&0ffh,(1)&7
  3208  0004F4  B366               	goto	u581
  3209  0004F6  EF7F  F002         	goto	u580
  3210  0004FA  EF81  F002         u581:
  3211  0004FE                     	goto	l1323
  3212  0004FE  EFCF  F001         u580:
  3213  000502                     	goto	l1343
  3214  000502  EF87  F002         	
  3215                           l161:; BSR set to: 0
  3216  000506                     
  3217                           	goto	l1343
  3218  000506  EF87  F002         	
  3219                           l159:; BSR set to: 0
  3220  00050A                     
  3221                           	goto	l1343
  3222  00050A  EF87  F002         	
  3223                           l162:; BSR set to: 0
  3224  00050E                     
  3225                           	line	618
  3226                           	
  3227                           l1343:
  3228  00050E                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 618:     return pad(
                                 fp, &dbuf[i], w);
  3229                           		movff	(c:utoa@fp),(c:pad@fp)
  3230  00050E  C01C  F011         	movff	(c:utoa@fp+1),(c:pad@fp+1)
  3231  000512  C01D  F012         
  3232                           	movlw	low(_dbuf)
  3233  000516  0E68               	addwf	((c:utoa@i)),c,w
  3234  000518  243A               	movwf	((c:pad@buf)),c
  3235  00051A  6E13               	movlw	high(_dbuf)
  3236  00051C  0E00               	addwfc	((c:utoa@i+1)),c,w
  3237  00051E  203B               	movwf	1+((c:pad@buf)),c
  3238  000520  6E14               	movff	(c:utoa@w),(c:pad@p)
  3239  000522  C030  F015         	movff	(c:utoa@w+1),(c:pad@p+1)
  3240  000526  C031  F016         	call	_pad	;wreg free
  3241  00052A  EC49  F005         	movff	0+?_pad,(c:?_utoa)
  3242  00052E  C011  F01C         	movff	1+?_pad,(c:?_utoa+1)
  3243  000532  C012  F01D         	goto	l163
  3244  000536  EF9D  F002         	
  3245                           l1345:
  3246  00053A                     	line	619
  3247                           	
  3248                           l163:
  3249  00053A                     	return	;funcret
  3250  00053A  0012               	opt stack 0
  3251                           GLOBAL	__end_of_utoa
  3252                           	__end_of_utoa:
  3253  00053C                     	signat	_utoa,8314
  3254                           	global	_pad
  3255                           
  3256 ;; *************** function _pad *****************
  3257 ;; Defined at:
  3258 ;;		line 72 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3261 ;;		 -> sprintf@f(6), 
  3262 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3263 ;;		 -> dbuf(32), 
  3264 ;;  p               2   20[COMRAM] int 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  w               2   25[COMRAM] int 
  3267 ;;  i               2   23[COMRAM] int 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  2   16[COMRAM] int 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3277 ;;      Params:         6       0       0       0
  3278 ;;      Locals:         4       0       0       0
  3279 ;;      Temps:          1       0       0       0
  3280 ;;      Totals:        11       0       0       0
  3281 ;;Total ram usage:       11 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    3
  3284 ;; This function calls:
  3285 ;;		_fputc
  3286 ;;		_fputs
  3287 ;;		_strlen
  3288 ;; This function is called by:
  3289 ;;		_utoa
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           psect	text7,class=CODE,space=0,reloc=2,group=0
  3293                           	line	72
  3294                           global __ptext7
  3295                           __ptext7:
  3296  000A92                     psect	text7
  3297                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3298                           	line	72
  3299                           	global	__size_of_pad
  3300                           	__size_of_pad	equ	__end_of_pad-_pad
  3301  0000                     	
  3302                           _pad:
  3303  000A92                     ;incstack = 0
  3304                           	opt	stack 22
  3305                           	line	77
  3306                           	
  3307                           l1245:
  3308  000A92                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 72: static int pad(F
                                 ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.00/pic/sources/c99/common/dopr
                                 nt.c: 73: {;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 74:     i
                                 nt i, w;;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 77:     if (
                                 flags & (1 << 0)) {
  3309                           	movlb	0	; () banked
  3310  000A92  0100               	
  3311                           	btfss	((_flags))&0ffh,(0)&7
  3312  000A94  A166               	goto	u411
  3313  000A96  EF4F  F005         	goto	u410
  3314  000A9A  EF51  F005         u411:
  3315  000A9E                     	goto	l1249
  3316  000A9E  EF5D  F005         u410:
  3317  000AA2                     	line	78
  3318                           	
  3319                           l1247:; BSR set to: 0
  3320  000AA2                     
  3321                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 78:         fputs((c
                                 onst char *)buf, fp);
  3322                           		movff	(c:pad@buf),(c:fputs@s)
  3323  000AA2  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
  3324  000AA6  C014  F00B         
  3325                           		movff	(c:pad@fp),(c:fputs@fp)
  3326  000AAA  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
  3327  000AAE  C012  F00D         
  3328                           	call	_fputs	;wreg free
  3329  000AB2  EC56  F007         	goto	l1249
  3330  000AB6  EF5D  F005         	line	79
  3331                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 79:     }
  3332                           	
  3333                           l139:
  3334  000ABA                     	line	82
  3335                           	
  3336                           l1249:
  3337  000ABA                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
                                 ? 0 : p;
  3338                           	btfsc	((c:pad@p+1)),c,7
  3339  000ABA  BE16               	goto	u421
  3340  000ABC  EF62  F005         	goto	u420
  3341  000AC0  EF64  F005         
  3342                           u421:
  3343  000AC4                     	goto	l1253
  3344  000AC4  EF6A  F005         u420:
  3345  000AC8                     	
  3346                           l1251:
  3347  000AC8                     	movff	(c:pad@p),(c:pad@w)
  3348  000AC8  C015  F01A         	movff	(c:pad@p+1),(c:pad@w+1)
  3349  000ACC  C016  F01B         	goto	l143
  3350  000AD0  EF6E  F005         	
  3351                           l141:
  3352  000AD4                     	
  3353                           l1253:
  3354  000AD4                     	movlw	high(0)
  3355  000AD4  0E00               	movwf	((c:pad@w+1)),c
  3356  000AD6  6E1B               	movlw	low(0)
  3357  000AD8  0E00               	movwf	((c:pad@w)),c
  3358  000ADA  6E1A               	
  3359                           l143:
  3360  000ADC                     	line	83
  3361                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3362                           	movlw	high(0)
  3363  000ADC  0E00               	movwf	((c:pad@i+1)),c
  3364  000ADE  6E19               	movlw	low(0)
  3365  000AE0  0E00               	movwf	((c:pad@i)),c
  3366  000AE2  6E18               	line	84
  3367                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 84:     while (i < w
                                 ) {
  3368                           	goto	l1259
  3369  000AE4  EF82  F005         	
  3370                           l145:
  3371  000AE8                     	line	85
  3372                           	
  3373                           l1255:
  3374  000AE8                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
                                 ', fp);
  3375                           	movlw	high(020h)
  3376  000AE8  0E00               	movwf	((c:fputc@c+1)),c
  3377  000AEA  6E02               	movlw	low(020h)
  3378  000AEC  0E20               	movwf	((c:fputc@c)),c
  3379  000AEE  6E01               		movff	(c:pad@fp),(c:fputc@fp)
  3380  000AF0  C011  F003         	movff	(c:pad@fp+1),(c:fputc@fp+1)
  3381  000AF4  C012  F004         
  3382                           	call	_fputc	;wreg free
  3383  000AF8  ECDA  F004         	line	86
  3384                           	
  3385                           l1257:
  3386  000AFC                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3387                           	infsnz	((c:pad@i)),c
  3388  000AFC  4A18               	incf	((c:pad@i+1)),c
  3389  000AFE  2A19               	goto	l1259
  3390  000B00  EF82  F005         	line	87
  3391                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 87:     }
  3392                           	
  3393                           l144:
  3394  000B04                     	line	84
  3395                           	
  3396                           l1259:
  3397  000B04                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 84:     while (i < w
                                 ) {
  3398                           		movf	((c:pad@w)),c,w
  3399  000B04  501A               	subwf	((c:pad@i)),c,w
  3400  000B06  5C18               	movf	((c:pad@i+1)),c,w
  3401  000B08  5019               	xorlw	80h
  3402  000B0A  0A80               	movwf	(??_pad+0+0)&0ffh,c
  3403  000B0C  6E17               	movf	((c:pad@w+1)),c,w
  3404  000B0E  501B               	xorlw	80h
  3405  000B10  0A80               	subwfb	(??_pad+0+0)&0ffh,c,w
  3406  000B12  5817               	btfss	status,0
  3407  000B14  A0D8               	goto	u431
  3408  000B16  EF8F  F005         	goto	u430
  3409  000B1A  EF91  F005         
  3410                           u431:
  3411  000B1E                     	goto	l1255
  3412  000B1E  EF74  F005         u430:
  3413  000B22                     	
  3414                           l146:
  3415  000B22                     	line	90
  3416                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
                                 & (1 << 0))) {
  3417                           	movlb	0	; () banked
  3418  000B22  0100               	
  3419                           	btfsc	((_flags))&0ffh,(0)&7
  3420  000B24  B166               	goto	u441
  3421  000B26  EF97  F005         	goto	u440
  3422  000B2A  EF99  F005         u441:
  3423  000B2E                     	goto	l1263
  3424  000B2E  EFA5  F005         u440:
  3425  000B32                     	line	91
  3426                           	
  3427                           l1261:; BSR set to: 0
  3428  000B32                     
  3429                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 91:         fputs((c
                                 onst char *)buf, fp);
  3430                           		movff	(c:pad@buf),(c:fputs@s)
  3431  000B32  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
  3432  000B36  C014  F00B         
  3433                           		movff	(c:pad@fp),(c:fputs@fp)
  3434  000B3A  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
  3435  000B3E  C012  F00D         
  3436                           	call	_fputs	;wreg free
  3437  000B42  EC56  F007         	goto	l1263
  3438  000B46  EFA5  F005         	line	92
  3439                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 92:     }
  3440                           	
  3441                           l147:
  3442  000B4A                     	line	94
  3443                           	
  3444                           l1263:
  3445  000B4A                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 94:     return strle
                                 n(buf) + w;
  3446                           		movff	(c:pad@buf),(c:strlen@s)
  3447  000B4A  C013  F001         	movff	(c:pad@buf+1),(c:strlen@s+1)
  3448  000B4E  C014  F002         
  3449                           	call	_strlen	;wreg free
  3450  000B52  ECDF  F006         	movf	((c:pad@w)),c,w
  3451  000B56  501A               	addwf	(0+?_strlen),c,w
  3452  000B58  2401               	movwf	((c:?_pad)),c
  3453  000B5A  6E11               	movf	((c:pad@w+1)),c,w
  3454  000B5C  501B               	addwfc	(1+?_strlen),c,w
  3455  000B5E  2002               	movwf	1+((c:?_pad)),c
  3456  000B60  6E12               	goto	l148
  3457  000B62  EFB3  F005         	
  3458                           l1265:
  3459  000B66                     	line	95
  3460                           	
  3461                           l148:
  3462  000B66                     	return	;funcret
  3463  000B66  0012               	opt stack 0
  3464                           GLOBAL	__end_of_pad
  3465                           	__end_of_pad:
  3466  000B68                     	signat	_pad,12410
  3467                           	global	_strlen
  3468                           
  3469 ;; *************** function _strlen *****************
  3470 ;; Defined at:
  3471 ;;		line 12 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3474 ;;		 -> dbuf(32), 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  a               2    4[COMRAM] PTR const unsigned char 
  3477 ;;		 -> dbuf(32), 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  2    0[COMRAM] unsigned int 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3487 ;;      Params:         2       0       0       0
  3488 ;;      Locals:         2       0       0       0
  3489 ;;      Temps:          2       0       0       0
  3490 ;;      Totals:         6       0       0       0
  3491 ;;Total ram usage:        6 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_pad
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           psect	text8,class=CODE,space=0,reloc=2,group=2
  3500                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c"
  3501                           	line	12
  3502                           global __ptext8
  3503                           __ptext8:
  3504  000DBE                     psect	text8
  3505                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c"
  3506                           	line	12
  3507                           	global	__size_of_strlen
  3508                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  3509  0000                     	
  3510                           _strlen:
  3511  000DBE                     ;incstack = 0
  3512                           	opt	stack 24
  3513                           	line	14
  3514                           	
  3515                           l1235:
  3516  000DBE                     		movff	(c:strlen@s),(c:strlen@a)
  3517  000DBE  C001  F005         	movff	(c:strlen@s+1),(c:strlen@a+1)
  3518  000DC2  C002  F006         
  3519                           	line	16
  3520                           	goto	l1239
  3521  000DC6  EFE9  F006         	
  3522                           l883:
  3523  000DCA                     	line	17
  3524                           	
  3525                           l1237:
  3526  000DCA                     	infsnz	((c:strlen@s)),c
  3527  000DCA  4A01               	incf	((c:strlen@s+1)),c
  3528  000DCC  2A02               	goto	l1239
  3529  000DCE  EFE9  F006         	line	18
  3530                           	
  3531                           l882:
  3532  000DD2                     	line	16
  3533                           	
  3534                           l1239:
  3535  000DD2                     	movff	(c:strlen@s),fsr2l
  3536  000DD2  C001  FFD9         	movff	(c:strlen@s+1),fsr2h
  3537  000DD6  C002  FFDA         	movf	indf2,w
  3538  000DDA  50DF               	btfss	status,2
  3539  000DDC  A4D8               	goto	u401
  3540  000DDE  EFF3  F006         	goto	u400
  3541  000DE2  EFF5  F006         u401:
  3542  000DE6                     	goto	l1237
  3543  000DE6  EFE5  F006         u400:
  3544  000DEA                     	goto	l1241
  3545  000DEA  EFF7  F006         	
  3546                           l884:
  3547  000DEE                     	line	25
  3548                           	
  3549                           l1241:
  3550  000DEE                     	movff	(c:strlen@a),??_strlen+0+0
  3551  000DEE  C005  F003         	movff	(c:strlen@a+1),??_strlen+0+0+1
  3552  000DF2  C006  F004         	comf	(??_strlen+0+0),c
  3553  000DF6  1E03               	comf	(??_strlen+0+1),c
  3554  000DF8  1E04               	infsnz	(??_strlen+0+0),c
  3555  000DFA  4A03               	incf	(??_strlen+0+1),c
  3556  000DFC  2A04               	movf	((c:strlen@s)),c,w
  3557  000DFE  5001               	addwf	(??_strlen+0+0),c,w
  3558  000E00  2403               	movwf	((c:?_strlen)),c
  3559  000E02  6E01               	movf	((c:strlen@s+1)),c,w
  3560  000E04  5002               	addwfc	(??_strlen+0+1),c,w
  3561  000E06  2004               	movwf	1+((c:?_strlen)),c
  3562  000E08  6E02               	goto	l885
  3563  000E0A  EF07  F007         	
  3564                           l1243:
  3565  000E0E                     	line	26
  3566                           	
  3567                           l885:
  3568  000E0E                     	return	;funcret
  3569  000E0E  0012               	opt stack 0
  3570                           GLOBAL	__end_of_strlen
  3571                           	__end_of_strlen:
  3572  000E10                     	signat	_strlen,4218
  3573                           	global	_fputs
  3574                           
  3575 ;; *************** function _fputs *****************
  3576 ;; Defined at:
  3577 ;;		line 8 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputs.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3580 ;;		 -> dbuf(32), 
  3581 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3582 ;;		 -> sprintf@f(6), 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  i               2   14[COMRAM] int 
  3585 ;;  c               1   13[COMRAM] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2    9[COMRAM] int 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3595 ;;      Params:         4       0       0       0
  3596 ;;      Locals:         3       0       0       0
  3597 ;;      Temps:          0       0       0       0
  3598 ;;      Totals:         7       0       0       0
  3599 ;;Total ram usage:        7 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    2
  3602 ;; This function calls:
  3603 ;;		_fputc
  3604 ;; This function is called by:
  3605 ;;		_pad
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           psect	text9,class=CODE,space=0,reloc=2,group=2
  3609                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputs.c"
  3610                           	line	8
  3611                           global __ptext9
  3612                           __ptext9:
  3613  000EAC                     psect	text9
  3614                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputs.c"
  3615                           	line	8
  3616                           	global	__size_of_fputs
  3617                           	__size_of_fputs	equ	__end_of_fputs-_fputs
  3618  0000                     	
  3619                           _fputs:
  3620  000EAC                     ;incstack = 0
  3621                           	opt	stack 22
  3622                           	line	13
  3623                           	
  3624                           l1227:
  3625  000EAC                     	movlw	high(0)
  3626  000EAC  0E00               	movwf	((c:fputs@i+1)),c
  3627  000EAE  6E10               	movlw	low(0)
  3628  000EB0  0E00               	movwf	((c:fputs@i)),c
  3629  000EB2  6E0F               	line	14
  3630                           	goto	l1233
  3631  000EB4  EF69  F007         	
  3632                           l867:
  3633  000EB8                     	line	15
  3634                           	
  3635                           l1229:
  3636  000EB8                     	movff	(c:fputs@c),(c:fputc@c)
  3637  000EB8  C00E  F001         	clrf	((c:fputc@c+1)),c
  3638  000EBC  6A02               		movff	(c:fputs@fp),(c:fputc@fp)
  3639  000EBE  C00C  F003         	movff	(c:fputs@fp+1),(c:fputc@fp+1)
  3640  000EC2  C00D  F004         
  3641                           	call	_fputc	;wreg free
  3642  000EC6  ECDA  F004         	line	16
  3643                           	
  3644                           l1231:
  3645  000ECA                     	infsnz	((c:fputs@i)),c
  3646  000ECA  4A0F               	incf	((c:fputs@i+1)),c
  3647  000ECC  2A10               	goto	l1233
  3648  000ECE  EF69  F007         	line	17
  3649                           	
  3650                           l866:
  3651  000ED2                     	line	14
  3652                           	
  3653                           l1233:
  3654  000ED2                     	movf	((c:fputs@i)),c,w
  3655  000ED2  500F               	addwf	((c:fputs@s)),c,w
  3656  000ED4  240A               	movwf	c:fsr2l
  3657  000ED6  6ED9               	movf	((c:fputs@i+1)),c,w
  3658  000ED8  5010               	addwfc	((c:fputs@s+1)),c,w
  3659  000EDA  200B               	movwf	1+c:fsr2l
  3660  000EDC  6EDA               	movf	indf2,w
  3661  000EDE  50DF               	movwf	((c:fputs@c)),c
  3662  000EE0  6E0E               	movf	((c:fputs@c)),c,w
  3663  000EE2  500E               	btfss	status,2
  3664  000EE4  A4D8               	goto	u391
  3665  000EE6  EF77  F007         	goto	u390
  3666  000EEA  EF79  F007         u391:
  3667  000EEE                     	goto	l1229
  3668  000EEE  EF5C  F007         u390:
  3669  000EF2                     	goto	l869
  3670  000EF2  EF7B  F007         	
  3671                           l868:
  3672  000EF6                     	line	19
  3673                           ;	Return value of _fputs is never used
  3674                           	
  3675                           l869:
  3676  000EF6                     	return	;funcret
  3677  000EF6  0012               	opt stack 0
  3678                           GLOBAL	__end_of_fputs
  3679                           	__end_of_fputs:
  3680  000EF8                     	signat	_fputs,8314
  3681                           	global	_fputc
  3682                           
  3683 ;; *************** function _fputc *****************
  3684 ;; Defined at:
  3685 ;;		line 8 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputc.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  c               2    0[COMRAM] int 
  3688 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3689 ;;		 -> sprintf@f(6), 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  2    0[COMRAM] int 
  3694 ;; Registers used:
  3695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3701 ;;      Params:         4       0       0       0
  3702 ;;      Locals:         0       0       0       0
  3703 ;;      Temps:          5       0       0       0
  3704 ;;      Totals:         9       0       0       0
  3705 ;;Total ram usage:        9 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:    1
  3708 ;; This function calls:
  3709 ;;		_putch
  3710 ;; This function is called by:
  3711 ;;		_pad
  3712 ;;		_vfpfcnvrt
  3713 ;;		_fputs
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           psect	text10,class=CODE,space=0,reloc=2,group=2
  3717                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputc.c"
  3718                           	line	8
  3719                           global __ptext10
  3720                           __ptext10:
  3721  0009B4                     psect	text10
  3722                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputc.c"
  3723                           	line	8
  3724                           	global	__size_of_fputc
  3725                           	__size_of_fputc	equ	__end_of_fputc-_fputc
  3726  0000                     	
  3727                           _fputc:
  3728  0009B4                     ;incstack = 0
  3729                           	opt	stack 22
  3730                           	line	12
  3731                           	
  3732                           l1213:
  3733  0009B4                     	movf	((c:fputc@fp)),c,w
  3734  0009B4  5003               iorwf	((c:fputc@fp+1)),c,w
  3735  0009B6  1004               	btfsc	status,2
  3736  0009B8  B4D8               	goto	u351
  3737  0009BA  EFE1  F004         	goto	u350
  3738  0009BE  EFE3  F004         
  3739                           u351:
  3740  0009C2                     	goto	l1217
  3741  0009C2  EFEE  F004         u350:
  3742  0009C6                     	
  3743                           l1215:
  3744  0009C6                     	movf	((c:fputc@fp)),c,w
  3745  0009C6  5003               iorwf	((c:fputc@fp+1)),c,w
  3746  0009C8  1004               	btfss	status,2
  3747  0009CA  A4D8               	goto	u361
  3748  0009CC  EFEA  F004         	goto	u360
  3749  0009D0  EFEC  F004         
  3750                           u361:
  3751  0009D4                     	goto	l1219
  3752  0009D4  EFF3  F004         u360:
  3753  0009D8                     	goto	l1217
  3754  0009D8  EFEE  F004         	
  3755                           l856:
  3756  0009DC                     	line	13
  3757                           	
  3758                           l1217:
  3759  0009DC                     	movf	((c:fputc@c)),c,w
  3760  0009DC  5001               	
  3761                           	call	_putch
  3762  0009DE  ECE7  F007         	line	14
  3763                           	goto	l861
  3764  0009E2  EF48  F005         	
  3765                           l854:
  3766  0009E6                     	line	15
  3767                           	
  3768                           l1219:
  3769  0009E6                     	lfsr	2,04h
  3770  0009E6  EE20 F004          	movf	((c:fputc@fp)),c,w
  3771  0009EA  5003               	addwf	fsr2l
  3772  0009EC  26D9               	movf	((c:fputc@fp+1)),c,w
  3773  0009EE  5004               	addwfc	fsr2h
  3774  0009F0  22DA               	movf	postinc2,w
  3775  0009F2  50DE               iorwf	postinc2,w
  3776  0009F4  10DE               	btfsc	status,2
  3777  0009F6  B4D8               	goto	u371
  3778  0009F8  EF00  F005         	goto	u370
  3779  0009FC  EF02  F005         
  3780                           u371:
  3781  000A00                     	goto	l1223
  3782  000A00  EF1F  F005         u370:
  3783  000A04                     	
  3784                           l1221:
  3785  000A04                     	lfsr	2,04h
  3786  000A04  EE20 F004          	movf	((c:fputc@fp)),c,w
  3787  000A08  5003               	addwf	fsr2l
  3788  000A0A  26D9               	movf	((c:fputc@fp+1)),c,w
  3789  000A0C  5004               	addwfc	fsr2h
  3790  000A0E  22DA               	lfsr	1,02h
  3791  000A10  EE10 F002          	movf	((c:fputc@fp)),c,w
  3792  000A14  5003               	addwf	fsr1l
  3793  000A16  26E1               	movf	((c:fputc@fp+1)),c,w
  3794  000A18  5004               	addwfc	fsr1h
  3795  000A1A  22E2               		movf	postinc2,w
  3796  000A1C  50DE               	subwf	postinc1,w
  3797  000A1E  5CE6               	movf	postinc1,w
  3798  000A20  50E6               	xorlw	80h
  3799  000A22  0A80               	movwf	(??_fputc+4+0)&0ffh,c
  3800  000A24  6E09               	movf	postinc2,w
  3801  000A26  50DE               	xorlw	80h
  3802  000A28  0A80               	subwfb	(??_fputc+4+0)&0ffh,c,w
  3803  000A2A  5809               	btfsc	status,0
  3804  000A2C  B0D8               	goto	u381
  3805  000A2E  EF1B  F005         	goto	u380
  3806  000A32  EF1D  F005         
  3807                           u381:
  3808  000A36                     	goto	l861
  3809  000A36  EF48  F005         u380:
  3810  000A3A                     	goto	l1223
  3811  000A3A  EF1F  F005         	
  3812                           l860:
  3813  000A3E                     	line	16
  3814                           	
  3815                           l1223:
  3816  000A3E                     	lfsr	2,02h
  3817  000A3E  EE20 F002          	movf	((c:fputc@fp)),c,w
  3818  000A42  5003               	addwf	fsr2l
  3819  000A44  26D9               	movf	((c:fputc@fp+1)),c,w
  3820  000A46  5004               	addwfc	fsr2h
  3821  000A48  22DA               	movff	postinc2,??_fputc+0+0
  3822  000A4A  CFDE F005          	movff	postdec2,??_fputc+0+0+1
  3823  000A4E  CFDD F006          	movff	(c:fputc@fp),fsr2l
  3824  000A52  C003  FFD9         	movff	(c:fputc@fp+1),fsr2h
  3825  000A56  C004  FFDA         	movff	postinc2,??_fputc+2+0
  3826  000A5A  CFDE F007          	movff	postdec2,??_fputc+2+0+1
  3827  000A5E  CFDD F008          	movf	(??_fputc+0+0),c,w
  3828  000A62  5005               	addwf	(??_fputc+2+0),c,w
  3829  000A64  2407               	movwf	c:fsr2l
  3830  000A66  6ED9               	movf	(??_fputc+0+1),c,w
  3831  000A68  5006               	addwfc	(??_fputc+2+1),c,w
  3832  000A6A  2008               	movwf	1+c:fsr2l
  3833  000A6C  6EDA               	movff	(c:fputc@c),indf2
  3834  000A6E  C001  FFDF         
  3835                           	line	17
  3836                           	lfsr	2,02h
  3837  000A72  EE20 F002          	movf	((c:fputc@fp)),c,w
  3838  000A76  5003               	addwf	fsr2l
  3839  000A78  26D9               	movf	((c:fputc@fp+1)),c,w
  3840  000A7A  5004               	addwfc	fsr2h
  3841  000A7C  22DA               	incf	postinc2
  3842  000A7E  2ADE               	movlw	0
  3843  000A80  0E00               	addwfc	postdec2
  3844  000A82  22DD               	goto	l861
  3845  000A84  EF48  F005         	line	18
  3846                           	
  3847                           l858:
  3848  000A88                     	goto	l861
  3849  000A88  EF48  F005         	line	19
  3850                           	
  3851                           l857:
  3852  000A8C                     	goto	l861
  3853  000A8C  EF48  F005         	line	20
  3854                           	
  3855                           l1225:
  3856  000A90                     	line	21
  3857                           ;	Return value of _fputc is never used
  3858                           	
  3859                           l861:
  3860  000A90                     	return	;funcret
  3861  000A90  0012               	opt stack 0
  3862                           GLOBAL	__end_of_fputc
  3863                           	__end_of_fputc:
  3864  000A92                     	signat	_fputc,8314
  3865                           	global	_putch
  3866                           
  3867 ;; *************** function _putch *****************
  3868 ;; Defined at:
  3869 ;;		line 7 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/putch.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  c               1    wreg     unsigned char 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  c               1    0[COMRAM] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3883 ;;      Params:         0       0       0       0
  3884 ;;      Locals:         0       0       0       0
  3885 ;;      Temps:          0       0       0       0
  3886 ;;      Totals:         0       0       0       0
  3887 ;;Total ram usage:        0 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_fputc
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           psect	text11,class=CODE,space=0,reloc=2,group=2
  3896                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/putch.c"
  3897                           	line	7
  3898                           global __ptext11
  3899                           __ptext11:
  3900  000FCE                     psect	text11
  3901                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/putch.c"
  3902                           	line	7
  3903                           	global	__size_of_putch
  3904                           	__size_of_putch	equ	__end_of_putch-_putch
  3905  0000                     	
  3906                           _putch:
  3907  000FCE                     ;incstack = 0
  3908                           	opt	stack 22
  3909                           	line	9
  3910                           	
  3911                           l879:
  3912  000FCE                     	return	;funcret
  3913  000FCE  0012               	opt stack 0
  3914                           GLOBAL	__end_of_putch
  3915                           	__end_of_putch:
  3916  000FD0                     	signat	_putch,4217
  3917                           	global	___lomod
  3918                           
  3919 ;; *************** function ___lomod *****************
  3920 ;; Defined at:
  3921 ;;		line 9 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lomod.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  dividend        8    0[COMRAM] unsigned long long 
  3924 ;;  divisor         8    8[COMRAM] unsigned long long 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  counter         1   16[COMRAM] unsigned char 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  8    0[COMRAM] unsigned long long 
  3929 ;; Registers used:
  3930 ;;		wreg, status,2, status,0
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3936 ;;      Params:        16       0       0       0
  3937 ;;      Locals:         1       0       0       0
  3938 ;;      Temps:          0       0       0       0
  3939 ;;      Totals:        17       0       0       0
  3940 ;;Total ram usage:       17 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_utoa
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           psect	text12,class=CODE,space=0,reloc=2,group=1
  3949                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lomod.c"
  3950                           	line	9
  3951                           global __ptext12
  3952                           __ptext12:
  3953  0008D0                     psect	text12
  3954                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lomod.c"
  3955                           	line	9
  3956                           	global	__size_of___lomod
  3957                           	__size_of___lomod	equ	__end_of___lomod-___lomod
  3958  0000                     	
  3959                           ___lomod:
  3960  0008D0                     ;incstack = 0
  3961                           	opt	stack 25
  3962                           	line	14
  3963                           	
  3964                           l1289:
  3965  0008D0                     	movf	((c:___lomod@divisor)),c,w
  3966  0008D0  5009               iorwf	((c:___lomod@divisor+1)),c,w
  3967  0008D2  100A               iorwf	((c:___lomod@divisor+2)),c,w
  3968  0008D4  100B               iorwf	((c:___lomod@divisor+3)),c,w
  3969  0008D6  100C               iorwf	((c:___lomod@divisor+4)),c,w
  3970  0008D8  100D               iorwf	((c:___lomod@divisor+5)),c,w
  3971  0008DA  100E               iorwf	((c:___lomod@divisor+6)),c,w
  3972  0008DC  100F               iorwf	((c:___lomod@divisor+7)),c,w
  3973  0008DE  1010               	btfsc	status,2
  3974  0008E0  B4D8               	goto	u491
  3975  0008E2  EF75  F004         	goto	u490
  3976  0008E6  EF77  F004         
  3977                           u491:
  3978  0008EA                     	goto	l626
  3979  0008EA  EFC9  F004         u490:
  3980  0008EE                     	line	15
  3981                           	
  3982                           l1291:
  3983  0008EE                     	movlw	low(01h)
  3984  0008EE  0E01               	movwf	((c:___lomod@counter)),c
  3985  0008F0  6E11               	line	16
  3986                           	goto	l1295
  3987  0008F2  EF87  F004         	
  3988                           l628:
  3989  0008F6                     	line	17
  3990                           	
  3991                           l1293:
  3992  0008F6                     	bcf	status,0
  3993  0008F6  90D8               	rlcf	((c:___lomod@divisor)),c
  3994  0008F8  3609               	rlcf	((c:___lomod@divisor+1)),c
  3995  0008FA  360A               	rlcf	((c:___lomod@divisor+2)),c
  3996  0008FC  360B               	rlcf	((c:___lomod@divisor+3)),c
  3997  0008FE  360C               	rlcf	((c:___lomod@divisor+4)),c
  3998  000900  360D               	rlcf	((c:___lomod@divisor+5)),c
  3999  000902  360E               	rlcf	((c:___lomod@divisor+6)),c
  4000  000904  360F               	rlcf	((c:___lomod@divisor+7)),c
  4001  000906  3610               	line	18
  4002                           	incf	((c:___lomod@counter)),c
  4003  000908  2A11               	goto	l1295
  4004  00090A  EF87  F004         	line	19
  4005                           	
  4006                           l627:
  4007  00090E                     	line	16
  4008                           	
  4009                           l1295:
  4010  00090E                     	
  4011                           	btfss	((c:___lomod@divisor+7)),c,(63)&7
  4012  00090E  AE10               	goto	u501
  4013  000910  EF8C  F004         	goto	u500
  4014  000914  EF8E  F004         u501:
  4015  000918                     	goto	l1293
  4016  000918  EF7B  F004         u500:
  4017  00091C                     	goto	l1297
  4018  00091C  EF92  F004         	
  4019                           l629:
  4020  000920                     	goto	l1297
  4021  000920  EF92  F004         	line	20
  4022                           	
  4023                           l630:
  4024  000924                     	line	21
  4025                           	
  4026                           l1297:
  4027  000924                     		movf	((c:___lomod@divisor)),c,w
  4028  000924  5009               	subwf	((c:___lomod@dividend)),c,w
  4029  000926  5C01               	movf	((c:___lomod@divisor+1)),c,w
  4030  000928  500A               	subwfb	((c:___lomod@dividend+1)),c,w
  4031  00092A  5802               	movf	((c:___lomod@divisor+2)),c,w
  4032  00092C  500B               	subwfb	((c:___lomod@dividend+2)),c,w
  4033  00092E  5803               	movf	((c:___lomod@divisor+3)),c,w
  4034  000930  500C               	subwfb	((c:___lomod@dividend+3)),c,w
  4035  000932  5804               	movf	((c:___lomod@divisor+4)),c,w
  4036  000934  500D               	subwfb	((c:___lomod@dividend+4)),c,w
  4037  000936  5805               	movf	((c:___lomod@divisor+5)),c,w
  4038  000938  500E               	subwfb	((c:___lomod@dividend+5)),c,w
  4039  00093A  5806               	movf	((c:___lomod@divisor+6)),c,w
  4040  00093C  500F               	subwfb	((c:___lomod@dividend+6)),c,w
  4041  00093E  5807               	movf	((c:___lomod@divisor+7)),c,w
  4042  000940  5010               	subwfb	((c:___lomod@dividend+7)),c,w
  4043  000942  5808               	btfss	status,0
  4044  000944  A0D8               	goto	u511
  4045  000946  EFA7  F004         	goto	u510
  4046  00094A  EFA9  F004         
  4047                           u511:
  4048  00094E                     	goto	l1301
  4049  00094E  EFBB  F004         u510:
  4050  000952                     	line	22
  4051                           	
  4052                           l1299:
  4053  000952                     	movf	((c:___lomod@divisor)),c,w
  4054  000952  5009               	subwf	((c:___lomod@dividend)),c
  4055  000954  5E01               	movf	((c:___lomod@divisor+1)),c,w
  4056  000956  500A               	subwfb	((c:___lomod@dividend+1)),c
  4057  000958  5A02               	movf	((c:___lomod@divisor+2)),c,w
  4058  00095A  500B               	subwfb	((c:___lomod@dividend+2)),c
  4059  00095C  5A03               	movf	((c:___lomod@divisor+3)),c,w
  4060  00095E  500C               	subwfb	((c:___lomod@dividend+3)),c
  4061  000960  5A04               	movf	((c:___lomod@divisor+4)),c,w
  4062  000962  500D               	subwfb	((c:___lomod@dividend+4)),c
  4063  000964  5A05               	movf	((c:___lomod@divisor+5)),c,w
  4064  000966  500E               	subwfb	((c:___lomod@dividend+5)),c
  4065  000968  5A06               	movf	((c:___lomod@divisor+6)),c,w
  4066  00096A  500F               	subwfb	((c:___lomod@dividend+6)),c
  4067  00096C  5A07               	movf	((c:___lomod@divisor+7)),c,w
  4068  00096E  5010               	subwfb	((c:___lomod@dividend+7)),c
  4069  000970  5A08               	goto	l1301
  4070  000972  EFBB  F004         	
  4071                           l631:
  4072  000976                     	line	23
  4073                           	
  4074                           l1301:
  4075  000976                     	bcf	status,0
  4076  000976  90D8               	rrcf	((c:___lomod@divisor+7)),c
  4077  000978  3210               	rrcf	((c:___lomod@divisor+6)),c
  4078  00097A  320F               	rrcf	((c:___lomod@divisor+5)),c
  4079  00097C  320E               	rrcf	((c:___lomod@divisor+4)),c
  4080  00097E  320D               	rrcf	((c:___lomod@divisor+3)),c
  4081  000980  320C               	rrcf	((c:___lomod@divisor+2)),c
  4082  000982  320B               	rrcf	((c:___lomod@divisor+1)),c
  4083  000984  320A               	rrcf	((c:___lomod@divisor)),c
  4084  000986  3209               	line	24
  4085                           	
  4086                           l1303:
  4087  000988                     	decfsz	((c:___lomod@counter)),c
  4088  000988  2E11               	
  4089                           	goto	l1297
  4090  00098A  EF92  F004         	goto	l626
  4091  00098E  EFC9  F004         	
  4092                           l632:
  4093  000992                     	line	25
  4094                           	
  4095                           l626:
  4096  000992                     	line	26
  4097                           	movff	(c:___lomod@dividend),(c:?___lomod)
  4098  000992  C001  F001         	movff	(c:___lomod@dividend+1),(c:?___lomod+1)
  4099  000996  C002  F002         	movff	(c:___lomod@dividend+2),(c:?___lomod+2)
  4100  00099A  C003  F003         	movff	(c:___lomod@dividend+3),(c:?___lomod+3)
  4101  00099E  C004  F004         	movff	(c:___lomod@dividend+4),(c:?___lomod+4)
  4102  0009A2  C005  F005         	movff	(c:___lomod@dividend+5),(c:?___lomod+5)
  4103  0009A6  C006  F006         	movff	(c:___lomod@dividend+6),(c:?___lomod+6)
  4104  0009AA  C007  F007         	movff	(c:___lomod@dividend+7),(c:?___lomod+7)
  4105  0009AE  C008  F008         	line	27
  4106                           	
  4107                           l633:
  4108  0009B2                     	return	;funcret
  4109  0009B2  0012               	opt stack 0
  4110                           GLOBAL	__end_of___lomod
  4111                           	__end_of___lomod:
  4112  0009B4                     	signat	___lomod,8319
  4113                           	global	___lodiv
  4114                           
  4115 ;; *************** function ___lodiv *****************
  4116 ;; Defined at:
  4117 ;;		line 9 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lodiv.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  dividend        8    0[COMRAM] unsigned long long 
  4120 ;;  divisor         8    8[COMRAM] unsigned long long 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  quotient        8   16[COMRAM] unsigned long long 
  4123 ;;  counter         1   24[COMRAM] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  8    0[COMRAM] unsigned long long 
  4126 ;; Registers used:
  4127 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4133 ;;      Params:        16       0       0       0
  4134 ;;      Locals:         9       0       0       0
  4135 ;;      Temps:          0       0       0       0
  4136 ;;      Totals:        25       0       0       0
  4137 ;;Total ram usage:       25 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_utoa
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           psect	text13,class=CODE,space=0,reloc=2,group=1
  4146                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lodiv.c"
  4147                           	line	9
  4148                           global __ptext13
  4149                           __ptext13:
  4150  0006E2                     psect	text13
  4151                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lodiv.c"
  4152                           	line	9
  4153                           	global	__size_of___lodiv
  4154                           	__size_of___lodiv	equ	__end_of___lodiv-___lodiv
  4155  0000                     	
  4156                           ___lodiv:
  4157  0006E2                     ;incstack = 0
  4158                           	opt	stack 25
  4159                           	line	15
  4160                           	
  4161                           l1267:
  4162  0006E2                     	lfsr	2,(___lodiv@quotient)
  4163  0006E2  EE20  F011         	movlw	8-1
  4164  0006E6  0E07               u451:
  4165  0006E8                     	clrf	postinc2
  4166  0006E8  6ADE               	decf	wreg
  4167  0006EA  06E8               	bc	u451
  4168  0006EC  E2FD               	line	16
  4169                           	
  4170                           l1269:
  4171  0006EE                     	movf	((c:___lodiv@divisor)),c,w
  4172  0006EE  5009               iorwf	((c:___lodiv@divisor+1)),c,w
  4173  0006F0  100A               iorwf	((c:___lodiv@divisor+2)),c,w
  4174  0006F2  100B               iorwf	((c:___lodiv@divisor+3)),c,w
  4175  0006F4  100C               iorwf	((c:___lodiv@divisor+4)),c,w
  4176  0006F6  100D               iorwf	((c:___lodiv@divisor+5)),c,w
  4177  0006F8  100E               iorwf	((c:___lodiv@divisor+6)),c,w
  4178  0006FA  100F               iorwf	((c:___lodiv@divisor+7)),c,w
  4179  0006FC  1010               	btfsc	status,2
  4180  0006FE  B4D8               	goto	u461
  4181  000700  EF84  F003         	goto	u460
  4182  000704  EF86  F003         
  4183                           u461:
  4184  000708                     	goto	l616
  4185  000708  EFE2  F003         u460:
  4186  00070C                     	line	17
  4187                           	
  4188                           l1271:
  4189  00070C                     	movlw	low(01h)
  4190  00070C  0E01               	movwf	((c:___lodiv@counter)),c
  4191  00070E  6E19               	line	18
  4192                           	goto	l1275
  4193  000710  EF96  F003         	
  4194                           l618:
  4195  000714                     	line	19
  4196                           	
  4197                           l1273:
  4198  000714                     	bcf	status,0
  4199  000714  90D8               	rlcf	((c:___lodiv@divisor)),c
  4200  000716  3609               	rlcf	((c:___lodiv@divisor+1)),c
  4201  000718  360A               	rlcf	((c:___lodiv@divisor+2)),c
  4202  00071A  360B               	rlcf	((c:___lodiv@divisor+3)),c
  4203  00071C  360C               	rlcf	((c:___lodiv@divisor+4)),c
  4204  00071E  360D               	rlcf	((c:___lodiv@divisor+5)),c
  4205  000720  360E               	rlcf	((c:___lodiv@divisor+6)),c
  4206  000722  360F               	rlcf	((c:___lodiv@divisor+7)),c
  4207  000724  3610               	line	20
  4208                           	incf	((c:___lodiv@counter)),c
  4209  000726  2A19               	goto	l1275
  4210  000728  EF96  F003         	line	21
  4211                           	
  4212                           l617:
  4213  00072C                     	line	18
  4214                           	
  4215                           l1275:
  4216  00072C                     	
  4217                           	btfss	((c:___lodiv@divisor+7)),c,(63)&7
  4218  00072C  AE10               	goto	u471
  4219  00072E  EF9B  F003         	goto	u470
  4220  000732  EF9D  F003         u471:
  4221  000736                     	goto	l1273
  4222  000736  EF8A  F003         u470:
  4223  00073A                     	goto	l1277
  4224  00073A  EFA1  F003         	
  4225                           l619:
  4226  00073E                     	goto	l1277
  4227  00073E  EFA1  F003         	line	22
  4228                           	
  4229                           l620:
  4230  000742                     	line	23
  4231                           	
  4232                           l1277:
  4233  000742                     	bcf	status,0
  4234  000742  90D8               	rlcf	((c:___lodiv@quotient)),c
  4235  000744  3611               	rlcf	((c:___lodiv@quotient+1)),c
  4236  000746  3612               	rlcf	((c:___lodiv@quotient+2)),c
  4237  000748  3613               	rlcf	((c:___lodiv@quotient+3)),c
  4238  00074A  3614               	rlcf	((c:___lodiv@quotient+4)),c
  4239  00074C  3615               	rlcf	((c:___lodiv@quotient+5)),c
  4240  00074E  3616               	rlcf	((c:___lodiv@quotient+6)),c
  4241  000750  3617               	rlcf	((c:___lodiv@quotient+7)),c
  4242  000752  3618               	line	24
  4243                           	
  4244                           l1279:
  4245  000754                     		movf	((c:___lodiv@divisor)),c,w
  4246  000754  5009               	subwf	((c:___lodiv@dividend)),c,w
  4247  000756  5C01               	movf	((c:___lodiv@divisor+1)),c,w
  4248  000758  500A               	subwfb	((c:___lodiv@dividend+1)),c,w
  4249  00075A  5802               	movf	((c:___lodiv@divisor+2)),c,w
  4250  00075C  500B               	subwfb	((c:___lodiv@dividend+2)),c,w
  4251  00075E  5803               	movf	((c:___lodiv@divisor+3)),c,w
  4252  000760  500C               	subwfb	((c:___lodiv@dividend+3)),c,w
  4253  000762  5804               	movf	((c:___lodiv@divisor+4)),c,w
  4254  000764  500D               	subwfb	((c:___lodiv@dividend+4)),c,w
  4255  000766  5805               	movf	((c:___lodiv@divisor+5)),c,w
  4256  000768  500E               	subwfb	((c:___lodiv@dividend+5)),c,w
  4257  00076A  5806               	movf	((c:___lodiv@divisor+6)),c,w
  4258  00076C  500F               	subwfb	((c:___lodiv@dividend+6)),c,w
  4259  00076E  5807               	movf	((c:___lodiv@divisor+7)),c,w
  4260  000770  5010               	subwfb	((c:___lodiv@dividend+7)),c,w
  4261  000772  5808               	btfss	status,0
  4262  000774  A0D8               	goto	u481
  4263  000776  EFBF  F003         	goto	u480
  4264  00077A  EFC1  F003         
  4265                           u481:
  4266  00077E                     	goto	l1285
  4267  00077E  EFD4  F003         u480:
  4268  000782                     	line	25
  4269                           	
  4270                           l1281:
  4271  000782                     	movf	((c:___lodiv@divisor)),c,w
  4272  000782  5009               	subwf	((c:___lodiv@dividend)),c
  4273  000784  5E01               	movf	((c:___lodiv@divisor+1)),c,w
  4274  000786  500A               	subwfb	((c:___lodiv@dividend+1)),c
  4275  000788  5A02               	movf	((c:___lodiv@divisor+2)),c,w
  4276  00078A  500B               	subwfb	((c:___lodiv@dividend+2)),c
  4277  00078C  5A03               	movf	((c:___lodiv@divisor+3)),c,w
  4278  00078E  500C               	subwfb	((c:___lodiv@dividend+3)),c
  4279  000790  5A04               	movf	((c:___lodiv@divisor+4)),c,w
  4280  000792  500D               	subwfb	((c:___lodiv@dividend+4)),c
  4281  000794  5A05               	movf	((c:___lodiv@divisor+5)),c,w
  4282  000796  500E               	subwfb	((c:___lodiv@dividend+5)),c
  4283  000798  5A06               	movf	((c:___lodiv@divisor+6)),c,w
  4284  00079A  500F               	subwfb	((c:___lodiv@dividend+6)),c
  4285  00079C  5A07               	movf	((c:___lodiv@divisor+7)),c,w
  4286  00079E  5010               	subwfb	((c:___lodiv@dividend+7)),c
  4287  0007A0  5A08               	line	26
  4288                           	
  4289                           l1283:
  4290  0007A2                     	bsf	(0+(0/8)+(c:___lodiv@quotient)),c,(0)&7
  4291  0007A2  8011               	goto	l1285
  4292  0007A4  EFD4  F003         	line	27
  4293                           	
  4294                           l621:
  4295  0007A8                     	line	28
  4296                           	
  4297                           l1285:
  4298  0007A8                     	bcf	status,0
  4299  0007A8  90D8               	rrcf	((c:___lodiv@divisor+7)),c
  4300  0007AA  3210               	rrcf	((c:___lodiv@divisor+6)),c
  4301  0007AC  320F               	rrcf	((c:___lodiv@divisor+5)),c
  4302  0007AE  320E               	rrcf	((c:___lodiv@divisor+4)),c
  4303  0007B0  320D               	rrcf	((c:___lodiv@divisor+3)),c
  4304  0007B2  320C               	rrcf	((c:___lodiv@divisor+2)),c
  4305  0007B4  320B               	rrcf	((c:___lodiv@divisor+1)),c
  4306  0007B6  320A               	rrcf	((c:___lodiv@divisor)),c
  4307  0007B8  3209               	line	29
  4308                           	
  4309                           l1287:
  4310  0007BA                     	decfsz	((c:___lodiv@counter)),c
  4311  0007BA  2E19               	
  4312                           	goto	l1277
  4313  0007BC  EFA1  F003         	goto	l616
  4314  0007C0  EFE2  F003         	
  4315                           l622:
  4316  0007C4                     	line	30
  4317                           	
  4318                           l616:
  4319  0007C4                     	line	31
  4320                           	movff	(c:___lodiv@quotient),(c:?___lodiv)
  4321  0007C4  C011  F001         	movff	(c:___lodiv@quotient+1),(c:?___lodiv+1)
  4322  0007C8  C012  F002         	movff	(c:___lodiv@quotient+2),(c:?___lodiv+2)
  4323  0007CC  C013  F003         	movff	(c:___lodiv@quotient+3),(c:?___lodiv+3)
  4324  0007D0  C014  F004         	movff	(c:___lodiv@quotient+4),(c:?___lodiv+4)
  4325  0007D4  C015  F005         	movff	(c:___lodiv@quotient+5),(c:?___lodiv+5)
  4326  0007D8  C016  F006         	movff	(c:___lodiv@quotient+6),(c:?___lodiv+6)
  4327  0007DC  C017  F007         	movff	(c:___lodiv@quotient+7),(c:?___lodiv+7)
  4328  0007E0  C018  F008         	line	32
  4329                           	
  4330                           l623:
  4331  0007E4                     	return	;funcret
  4332  0007E4  0012               	opt stack 0
  4333                           GLOBAL	__end_of___lodiv
  4334                           	__end_of___lodiv:
  4335  0007E6                     	signat	___lodiv,8319
  4336                           	global	_LCD_string
  4337                           
  4338 ;; *************** function _LCD_string *****************
  4339 ;; Defined at:
  4340 ;;		line 101 in file "lcd.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  string          2    4[COMRAM] PTR unsigned char 
  4343 ;;		 -> print_IR@buf(16), 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4355 ;;      Params:         2       0       0       0
  4356 ;;      Locals:         0       0       0       0
  4357 ;;      Temps:          0       0       0       0
  4358 ;;      Totals:         2       0       0       0
  4359 ;;Total ram usage:        2 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    3
  4362 ;; This function calls:
  4363 ;;		_LCD_send
  4364 ;; This function is called by:
  4365 ;;		_print_IR
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           psect	text14,class=CODE,space=0,reloc=2,group=0
  4369                           	file	"lcd.c"
  4370                           	line	101
  4371                           global __ptext14
  4372                           __ptext14:
  4373  000EF8                     psect	text14
  4374                           	file	"lcd.c"
  4375                           	line	101
  4376                           	global	__size_of_LCD_string
  4377                           	__size_of_LCD_string	equ	__end_of_LCD_string-_LCD_string
  4378  0000                     	
  4379                           _LCD_string:
  4380  000EF8                     ;incstack = 0
  4381                           	opt	stack 26
  4382                           	line	102
  4383                           	
  4384                           l1419:
  4385  000EF8                     ;lcd.c: 102:     while (*string != 0) {
  4386                           	goto	l1427
  4387  000EF8  EF8F  F007         	
  4388                           l50:
  4389  000EFC                     	line	105
  4390                           	
  4391                           l1421:
  4392  000EFC                     ;lcd.c: 105:         LCD_send(*string++, 1);
  4393                           	movlw	low(01h)
  4394  000EFC  0E01               	movwf	((c:LCD_send@type)),c
  4395  000EFE  6E03               	movff	(c:LCD_string@string),fsr2l
  4396  000F00  C005  FFD9         	movff	(c:LCD_string@string+1),fsr2h
  4397  000F04  C006  FFDA         	movf	indf2,w
  4398  000F08  50DF               	
  4399                           	call	_LCD_send
  4400  000F0A  EC9E  F007         	
  4401                           l1423:
  4402  000F0E                     	infsnz	((c:LCD_string@string)),c
  4403  000F0E  4A05               	incf	((c:LCD_string@string+1)),c
  4404  000F10  2A06               	line	106
  4405                           	
  4406                           l1425:
  4407  000F12                     ;lcd.c: 106:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  4408                           	opt asmopt_push
  4409                           opt asmopt_off
  4410                           	movlw	33
  4411  000F12  0E21               u737:
  4412  000F14                     decfsz	wreg,f
  4413  000F14  2EE8               	bra	u737
  4414  000F16  D7FE               	nop
  4415  000F18  F000               opt asmopt_pop
  4416                           
  4417                           	goto	l1427
  4418  000F1A  EF8F  F007         	line	109
  4419                           ;lcd.c: 109:     }
  4420                           	
  4421                           l49:
  4422  000F1E                     	line	102
  4423                           	
  4424                           l1427:
  4425  000F1E                     ;lcd.c: 102:     while (*string != 0) {
  4426                           	movff	(c:LCD_string@string),fsr2l
  4427  000F1E  C005  FFD9         	movff	(c:LCD_string@string+1),fsr2h
  4428  000F22  C006  FFDA         	movf	indf2,w
  4429  000F26  50DF               	btfss	status,2
  4430  000F28  A4D8               	goto	u661
  4431  000F2A  EF99  F007         	goto	u660
  4432  000F2E  EF9B  F007         u661:
  4433  000F32                     	goto	l1421
  4434  000F32  EF7E  F007         u660:
  4435  000F36                     	goto	l52
  4436  000F36  EF9D  F007         	
  4437                           l51:
  4438  000F3A                     	line	110
  4439                           	
  4440                           l52:
  4441  000F3A                     	return	;funcret
  4442  000F3A  0012               	opt stack 0
  4443                           GLOBAL	__end_of_LCD_string
  4444                           	__end_of_LCD_string:
  4445  000F3C                     	signat	_LCD_string,4217
  4446                           	global	_LCD_line
  4447                           
  4448 ;; *************** function _LCD_line *****************
  4449 ;; Defined at:
  4450 ;;		line 89 in file "lcd.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  line            1    wreg     unsigned char 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  line            1    4[COMRAM] unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4464 ;;      Params:         0       0       0       0
  4465 ;;      Locals:         1       0       0       0
  4466 ;;      Temps:          0       0       0       0
  4467 ;;      Totals:         1       0       0       0
  4468 ;;Total ram usage:        1 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    3
  4471 ;; This function calls:
  4472 ;;		_LCD_send
  4473 ;; This function is called by:
  4474 ;;		_print_IR
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           psect	text15,class=CODE,space=0,reloc=2,group=0
  4478                           	line	89
  4479                           global __ptext15
  4480                           __ptext15:
  4481  000E5E                     psect	text15
  4482                           	file	"lcd.c"
  4483                           	line	89
  4484                           	global	__size_of_LCD_line
  4485                           	__size_of_LCD_line	equ	__end_of_LCD_line-_LCD_line
  4486  0000                     	
  4487                           _LCD_line:
  4488  000E5E                     ;incstack = 0
  4489                           	opt	stack 26
  4490                           ;LCD_line@line stored from wreg
  4491                           	movwf	((c:LCD_line@line)),c
  4492  000E5E  6E05               	line	90
  4493                           	
  4494                           l1409:
  4495  000E60                     ;lcd.c: 90:     if (line == 1) {
  4496                           		decf	((c:LCD_line@line)),c,w
  4497  000E60  0405               	btfss	status,2
  4498  000E62  A4D8               	goto	u641
  4499  000E64  EF36  F007         	goto	u640
  4500  000E68  EF38  F007         
  4501                           u641:
  4502  000E6C                     	goto	l1413
  4503  000E6C  EF3F  F007         u640:
  4504  000E70                     	line	91
  4505                           	
  4506                           l1411:
  4507  000E70                     ;lcd.c: 91:         LCD_send(0x80, 0);
  4508                           	movlw	low(0)
  4509  000E70  0E00               	movwf	((c:LCD_send@type)),c
  4510  000E72  6E03               	movlw	(080h)&0ffh
  4511  000E74  0E80               	
  4512                           	call	_LCD_send
  4513  000E76  EC9E  F007         	line	92
  4514                           ;lcd.c: 92:     } else if (line == 2) {
  4515                           	goto	l1417
  4516  000E7A  EF51  F007         	
  4517                           l43:
  4518  000E7E                     	
  4519                           l1413:
  4520  000E7E                     		movlw	2
  4521  000E7E  0E02               	xorwf	((c:LCD_line@line)),c,w
  4522  000E80  1805               	btfss	status,2
  4523  000E82  A4D8               	goto	u651
  4524  000E84  EF46  F007         	goto	u650
  4525  000E88  EF48  F007         
  4526                           u651:
  4527  000E8C                     	goto	l1417
  4528  000E8C  EF51  F007         u650:
  4529  000E90                     	line	93
  4530                           	
  4531                           l1415:
  4532  000E90                     ;lcd.c: 93:         LCD_send(0xC0, 0);
  4533                           	movlw	low(0)
  4534  000E90  0E00               	movwf	((c:LCD_send@type)),c
  4535  000E92  6E03               	movlw	(0C0h)&0ffh
  4536  000E94  0EC0               	
  4537                           	call	_LCD_send
  4538  000E96  EC9E  F007         	goto	l1417
  4539  000E9A  EF51  F007         	line	94
  4540                           ;lcd.c: 94:     }
  4541                           	
  4542                           l45:
  4543  000E9E                     	goto	l1417
  4544  000E9E  EF51  F007         	
  4545                           l44:
  4546  000EA2                     	line	95
  4547                           	
  4548                           l1417:
  4549  000EA2                     ;lcd.c: 95:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4550                           	opt asmopt_push
  4551                           opt asmopt_off
  4552                           	movlw	33
  4553  000EA2  0E21               u747:
  4554  000EA4                     decfsz	wreg,f
  4555  000EA4  2EE8               	bra	u747
  4556  000EA6  D7FE               	nop
  4557  000EA8  F000               opt asmopt_pop
  4558                           
  4559                           	line	96
  4560                           	
  4561                           l46:
  4562  000EAA                     	return	;funcret
  4563  000EAA  0012               	opt stack 0
  4564                           GLOBAL	__end_of_LCD_line
  4565                           	__end_of_LCD_line:
  4566  000EAC                     	signat	_LCD_line,4217
  4567                           	global	_LCD_clear
  4568                           
  4569 ;; *************** function _LCD_clear *****************
  4570 ;; Defined at:
  4571 ;;		line 115 in file "lcd.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;		None
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4585 ;;      Params:         0       0       0       0
  4586 ;;      Locals:         0       0       0       0
  4587 ;;      Temps:          1       0       0       0
  4588 ;;      Totals:         1       0       0       0
  4589 ;;Total ram usage:        1 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    3
  4592 ;; This function calls:
  4593 ;;		_LCD_send
  4594 ;; This function is called by:
  4595 ;;		_print_IR
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           psect	text16,class=CODE,space=0,reloc=2,group=0
  4599                           	line	115
  4600                           global __ptext16
  4601                           __ptext16:
  4602  000F68                     psect	text16
  4603                           	file	"lcd.c"
  4604                           	line	115
  4605                           	global	__size_of_LCD_clear
  4606                           	__size_of_LCD_clear	equ	__end_of_LCD_clear-_LCD_clear
  4607  0000                     	
  4608                           _LCD_clear:
  4609  000F68                     ;incstack = 0
  4610                           	opt	stack 26
  4611                           	line	116
  4612                           	
  4613                           l1429:
  4614  000F68                     ;lcd.c: 116:     LCD_send(0b00000001, 0);
  4615                           	movlw	low(0)
  4616  000F68  0E00               	movwf	((c:LCD_send@type)),c
  4617  000F6A  6E03               	movlw	(01h)&0ffh
  4618  000F6C  0E01               	
  4619                           	call	_LCD_send
  4620  000F6E  EC9E  F007         	line	117
  4621                           	
  4622                           l1431:
  4623  000F72                     ;lcd.c: 117:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4624                           	opt asmopt_push
  4625                           opt asmopt_off
  4626                           movlw	6
  4627  000F72  0E06               movwf	(??_LCD_clear+0+0)&0ffh,c,f
  4628  000F74  6E05               	movlw	48
  4629  000F76  0E30               u757:
  4630  000F78                     decfsz	wreg,f
  4631  000F78  2EE8               	bra	u757
  4632  000F7A  D7FE               	decfsz	(??_LCD_clear+0+0)&0ffh,c,f
  4633  000F7C  2E05               	bra	u757
  4634  000F7E  D7FC               	nop2
  4635  000F80  D000               opt asmopt_pop
  4636                           
  4637                           	line	118
  4638                           	
  4639                           l55:
  4640  000F82                     	return	;funcret
  4641  000F82  0012               	opt stack 0
  4642                           GLOBAL	__end_of_LCD_clear
  4643                           	__end_of_LCD_clear:
  4644  000F84                     	signat	_LCD_clear,89
  4645                           	global	_init_capture
  4646                           
  4647 ;; *************** function _init_capture *****************
  4648 ;; Defined at:
  4649 ;;		line 27 in file "ir.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4663 ;;      Params:         0       0       0       0
  4664 ;;      Locals:         0       0       0       0
  4665 ;;      Temps:          0       0       0       0
  4666 ;;      Totals:         0       0       0       0
  4667 ;;Total ram usage:        0 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_main
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           psect	text17,class=CODE,space=0,reloc=2,group=0
  4676                           	file	"ir.c"
  4677                           	line	27
  4678                           global __ptext17
  4679                           __ptext17:
  4680  000F9E                     psect	text17
  4681                           	file	"ir.c"
  4682                           	line	27
  4683                           	global	__size_of_init_capture
  4684                           	__size_of_init_capture	equ	__end_of_init_capture-_init_capture
  4685  0000                     	
  4686                           _init_capture:
  4687  000F9E                     ;incstack = 0
  4688                           	opt	stack 30
  4689                           	line	41
  4690                           	
  4691                           l1503:
  4692  000F9E                     ;ir.c: 41:     LATA = 0;
  4693                           	movlw	low(0)
  4694  000F9E  0E00               	movwf	((c:3977)),c	;volatile
  4695  000FA0  6E89               	line	42
  4696                           ;ir.c: 42:     TRISA = 0b00001100;
  4697                           	movlw	low(0Ch)
  4698  000FA2  0E0C               	movwf	((c:3986)),c	;volatile
  4699  000FA4  6E92               	line	43
  4700                           ;ir.c: 43:     CAP1CON = 0b01000110;
  4701                           	movlw	low(046h)
  4702  000FA6  0E46               	movwf	((c:3939)),c	;volatile
  4703  000FA8  6E63               	line	44
  4704                           ;ir.c: 44:     CAP2CON = 0b01000110;
  4705                           	movlw	low(046h)
  4706  000FAA  0E46               	movwf	((c:3938)),c	;volatile
  4707  000FAC  6E62               	line	45
  4708                           ;ir.c: 45:     T5CON = 0b00001001;
  4709                           	movlw	low(09h)
  4710  000FAE  0E09               	movwf	((c:4023)),c	;volatile
  4711  000FB0  6EB7               	line	46
  4712                           ;ir.c: 46:     DFLTCON = 0b00011000;
  4713                           	movlw	low(018h)
  4714  000FB2  0E18               	movwf	((c:3936)),c	;volatile
  4715  000FB4  6E60               	line	47
  4716                           	
  4717                           l115:
  4718  000FB6                     	return	;funcret
  4719  000FB6  0012               	opt stack 0
  4720                           GLOBAL	__end_of_init_capture
  4721                           	__end_of_init_capture:
  4722  000FB8                     	signat	_init_capture,89
  4723                           	global	_LCD_init
  4724                           
  4725 ;; *************** function _LCD_init *****************
  4726 ;; Defined at:
  4727 ;;		line 49 in file "lcd.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0, cstack
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4741 ;;      Params:         0       0       0       0
  4742 ;;      Locals:         0       0       0       0
  4743 ;;      Temps:          1       0       0       0
  4744 ;;      Totals:         1       0       0       0
  4745 ;;Total ram usage:        1 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    3
  4748 ;; This function calls:
  4749 ;;		_LCD_out
  4750 ;;		_LCD_send
  4751 ;; This function is called by:
  4752 ;;		_main
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           psect	text18,class=CODE,space=0,reloc=2,group=0
  4756                           	file	"lcd.c"
  4757                           	line	49
  4758                           global __ptext18
  4759                           __ptext18:
  4760  0007E6                     psect	text18
  4761                           	file	"lcd.c"
  4762                           	line	49
  4763                           	global	__size_of_LCD_init
  4764                           	__size_of_LCD_init	equ	__end_of_LCD_init-_LCD_init
  4765  0000                     	
  4766                           _LCD_init:
  4767  0007E6                     ;incstack = 0
  4768                           	opt	stack 27
  4769                           	line	52
  4770                           	
  4771                           l1445:
  4772  0007E6                     ;lcd.c: 52:     LATA = 0;
  4773                           	movlw	low(0)
  4774  0007E6  0E00               	movwf	((c:3977)),c	;volatile
  4775  0007E8  6E89               	line	53
  4776                           ;lcd.c: 53:     LATC = 0;
  4777                           	movlw	low(0)
  4778  0007EA  0E00               	movwf	((c:3979)),c	;volatile
  4779  0007EC  6E8B               	line	54
  4780                           ;lcd.c: 54:     LATD = 0;
  4781                           	movlw	low(0)
  4782  0007EE  0E00               	movwf	((c:3980)),c	;volatile
  4783  0007F0  6E8C               	line	57
  4784                           ;lcd.c: 57:     TRISA = 0;
  4785                           	movlw	low(0)
  4786  0007F2  0E00               	movwf	((c:3986)),c	;volatile
  4787  0007F4  6E92               	line	58
  4788                           ;lcd.c: 58:     TRISC = 0;
  4789                           	movlw	low(0)
  4790  0007F6  0E00               	movwf	((c:3988)),c	;volatile
  4791  0007F8  6E94               	line	59
  4792                           ;lcd.c: 59:     TRISD = 0;
  4793                           	movlw	low(0)
  4794  0007FA  0E00               	movwf	((c:3989)),c	;volatile
  4795  0007FC  6E95               	line	63
  4796                           	
  4797                           l1447:
  4798  0007FE                     ;lcd.c: 63:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4799                           	opt asmopt_push
  4800                           opt asmopt_off
  4801                           movlw	39
  4802  0007FE  0E27               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4803  000800  6E05               	movlw	245
  4804  000802  0EF5               u767:
  4805  000804                     decfsz	wreg,f
  4806  000804  2EE8               	bra	u767
  4807  000806  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4808  000808  2E05               	bra	u767
  4809  00080A  D7FC               	nop
  4810  00080C  F000               opt asmopt_pop
  4811                           
  4812                           	line	64
  4813                           	
  4814                           l1449:
  4815  00080E                     ;lcd.c: 64:     LCD_out(0b0011);
  4816                           	movlw	(03h)&0ffh
  4817  00080E  0E03               	
  4818                           	call	_LCD_out
  4819  000810  EC0B  F006         	line	65
  4820                           	
  4821                           l1451:
  4822  000814                     ;lcd.c: 65:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4823                           	opt asmopt_push
  4824                           opt asmopt_off
  4825                           movlw	13
  4826  000814  0E0D               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4827  000816  6E05               	movlw	252
  4828  000818  0EFC               u777:
  4829  00081A                     decfsz	wreg,f
  4830  00081A  2EE8               	bra	u777
  4831  00081C  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4832  00081E  2E05               	bra	u777
  4833  000820  D7FC               opt asmopt_pop
  4834                           
  4835                           	line	66
  4836                           	
  4837                           l1453:
  4838  000822                     ;lcd.c: 66:     LCD_out(0b0011);
  4839                           	movlw	(03h)&0ffh
  4840  000822  0E03               	
  4841                           	call	_LCD_out
  4842  000824  EC0B  F006         	line	67
  4843                           	
  4844                           l1455:
  4845  000828                     ;lcd.c: 67:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  4846                           	opt asmopt_push
  4847                           opt asmopt_off
  4848                           	movlw	133
  4849  000828  0E85               u787:
  4850  00082A                     decfsz	wreg,f
  4851  00082A  2EE8               	bra	u787
  4852  00082C  D7FE               	nop
  4853  00082E  F000               opt asmopt_pop
  4854                           
  4855                           	line	68
  4856                           	
  4857                           l1457:
  4858  000830                     ;lcd.c: 68:     LCD_out(0b0011);
  4859                           	movlw	(03h)&0ffh
  4860  000830  0E03               	
  4861                           	call	_LCD_out
  4862  000832  EC0B  F006         	line	69
  4863                           	
  4864                           l1459:
  4865  000836                     ;lcd.c: 69:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4866                           	opt asmopt_push
  4867                           opt asmopt_off
  4868                           	movlw	33
  4869  000836  0E21               u797:
  4870  000838                     decfsz	wreg,f
  4871  000838  2EE8               	bra	u797
  4872  00083A  D7FE               	nop
  4873  00083C  F000               opt asmopt_pop
  4874                           
  4875                           	line	70
  4876                           	
  4877                           l1461:
  4878  00083E                     ;lcd.c: 70:     LCD_out(0b0010);
  4879                           	movlw	(02h)&0ffh
  4880  00083E  0E02               	
  4881                           	call	_LCD_out
  4882  000840  EC0B  F006         	line	71
  4883                           	
  4884                           l1463:
  4885  000844                     ;lcd.c: 71:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4886                           	opt asmopt_push
  4887                           opt asmopt_off
  4888                           	movlw	33
  4889  000844  0E21               u807:
  4890  000846                     decfsz	wreg,f
  4891  000846  2EE8               	bra	u807
  4892  000848  D7FE               	nop
  4893  00084A  F000               opt asmopt_pop
  4894                           
  4895                           	line	73
  4896                           	
  4897                           l1465:
  4898  00084C                     ;lcd.c: 73:     LCD_send(0b00101000, 0);
  4899                           	movlw	low(0)
  4900  00084C  0E00               	movwf	((c:LCD_send@type)),c
  4901  00084E  6E03               	movlw	(028h)&0ffh
  4902  000850  0E28               	
  4903                           	call	_LCD_send
  4904  000852  EC9E  F007         	line	74
  4905                           	
  4906                           l1467:
  4907  000856                     ;lcd.c: 74:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4908                           	opt asmopt_push
  4909                           opt asmopt_off
  4910                           movlw	6
  4911  000856  0E06               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4912  000858  6E05               	movlw	48
  4913  00085A  0E30               u817:
  4914  00085C                     decfsz	wreg,f
  4915  00085C  2EE8               	bra	u817
  4916  00085E  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4917  000860  2E05               	bra	u817
  4918  000862  D7FC               	nop2
  4919  000864  D000               opt asmopt_pop
  4920                           
  4921                           	line	75
  4922                           	
  4923                           l1469:
  4924  000866                     ;lcd.c: 75:     LCD_send(0b00001000, 0);
  4925                           	movlw	low(0)
  4926  000866  0E00               	movwf	((c:LCD_send@type)),c
  4927  000868  6E03               	movlw	(08h)&0ffh
  4928  00086A  0E08               	
  4929                           	call	_LCD_send
  4930  00086C  EC9E  F007         	line	76
  4931                           	
  4932                           l1471:
  4933  000870                     ;lcd.c: 76:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4934                           	opt asmopt_push
  4935                           opt asmopt_off
  4936                           movlw	6
  4937  000870  0E06               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4938  000872  6E05               	movlw	48
  4939  000874  0E30               u827:
  4940  000876                     decfsz	wreg,f
  4941  000876  2EE8               	bra	u827
  4942  000878  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4943  00087A  2E05               	bra	u827
  4944  00087C  D7FC               	nop2
  4945  00087E  D000               opt asmopt_pop
  4946                           
  4947                           	line	77
  4948                           	
  4949                           l1473:
  4950  000880                     ;lcd.c: 77:     LCD_send(0b00000001, 0);
  4951                           	movlw	low(0)
  4952  000880  0E00               	movwf	((c:LCD_send@type)),c
  4953  000882  6E03               	movlw	(01h)&0ffh
  4954  000884  0E01               	
  4955                           	call	_LCD_send
  4956  000886  EC9E  F007         	line	78
  4957                           	
  4958                           l1475:
  4959  00088A                     ;lcd.c: 78:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4960                           	opt asmopt_push
  4961                           opt asmopt_off
  4962                           movlw	6
  4963  00088A  0E06               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4964  00088C  6E05               	movlw	48
  4965  00088E  0E30               u837:
  4966  000890                     decfsz	wreg,f
  4967  000890  2EE8               	bra	u837
  4968  000892  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4969  000894  2E05               	bra	u837
  4970  000896  D7FC               	nop2
  4971  000898  D000               opt asmopt_pop
  4972                           
  4973                           	line	79
  4974                           	
  4975                           l1477:
  4976  00089A                     ;lcd.c: 79:     LCD_send(0b00000110, 0);
  4977                           	movlw	low(0)
  4978  00089A  0E00               	movwf	((c:LCD_send@type)),c
  4979  00089C  6E03               	movlw	(06h)&0ffh
  4980  00089E  0E06               	
  4981                           	call	_LCD_send
  4982  0008A0  EC9E  F007         	line	80
  4983                           	
  4984                           l1479:
  4985  0008A4                     ;lcd.c: 80:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4986                           	opt asmopt_push
  4987                           opt asmopt_off
  4988                           movlw	6
  4989  0008A4  0E06               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4990  0008A6  6E05               	movlw	48
  4991  0008A8  0E30               u847:
  4992  0008AA                     decfsz	wreg,f
  4993  0008AA  2EE8               	bra	u847
  4994  0008AC  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4995  0008AE  2E05               	bra	u847
  4996  0008B0  D7FC               	nop2
  4997  0008B2  D000               opt asmopt_pop
  4998                           
  4999                           	line	81
  5000                           	
  5001                           l1481:
  5002  0008B4                     ;lcd.c: 81:     LCD_send(0b00001100, 0);
  5003                           	movlw	low(0)
  5004  0008B4  0E00               	movwf	((c:LCD_send@type)),c
  5005  0008B6  6E03               	movlw	(0Ch)&0ffh
  5006  0008B8  0E0C               	
  5007                           	call	_LCD_send
  5008  0008BA  EC9E  F007         	line	82
  5009                           	
  5010                           l1483:
  5011  0008BE                     ;lcd.c: 82:     _delay((unsigned long)((2)*(8000000/4000.0)));
  5012                           	opt asmopt_push
  5013                           opt asmopt_off
  5014                           movlw	6
  5015  0008BE  0E06               movwf	(??_LCD_init+0+0)&0ffh,c,f
  5016  0008C0  6E05               	movlw	48
  5017  0008C2  0E30               u857:
  5018  0008C4                     decfsz	wreg,f
  5019  0008C4  2EE8               	bra	u857
  5020  0008C6  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  5021  0008C8  2E05               	bra	u857
  5022  0008CA  D7FC               	nop2
  5023  0008CC  D000               opt asmopt_pop
  5024                           
  5025                           	line	84
  5026                           	
  5027                           l40:
  5028  0008CE                     	return	;funcret
  5029  0008CE  0012               	opt stack 0
  5030                           GLOBAL	__end_of_LCD_init
  5031                           	__end_of_LCD_init:
  5032  0008D0                     	signat	_LCD_init,89
  5033                           	global	_LCD_send
  5034                           
  5035 ;; *************** function _LCD_send *****************
  5036 ;; Defined at:
  5037 ;;		line 34 in file "lcd.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  Byte            1    wreg     unsigned char 
  5040 ;;  type            1    2[COMRAM] unsigned char 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  Byte            1    3[COMRAM] unsigned char 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5052 ;;      Params:         1       0       0       0
  5053 ;;      Locals:         1       0       0       0
  5054 ;;      Temps:          0       0       0       0
  5055 ;;      Totals:         2       0       0       0
  5056 ;;Total ram usage:        2 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    2
  5059 ;; This function calls:
  5060 ;;		_LCD_out
  5061 ;; This function is called by:
  5062 ;;		_LCD_init
  5063 ;;		_LCD_line
  5064 ;;		_LCD_string
  5065 ;;		_LCD_clear
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           psect	text19,class=CODE,space=0,reloc=2,group=0
  5069                           	line	34
  5070                           global __ptext19
  5071                           __ptext19:
  5072  000F3C                     psect	text19
  5073                           	file	"lcd.c"
  5074                           	line	34
  5075                           	global	__size_of_LCD_send
  5076                           	__size_of_LCD_send	equ	__end_of_LCD_send-_LCD_send
  5077  0000                     	
  5078                           _LCD_send:
  5079  000F3C                     ;incstack = 0
  5080                           	opt	stack 26
  5081                           ;LCD_send@Byte stored from wreg
  5082                           	movwf	((c:LCD_send@Byte)),c
  5083  000F3C  6E04               	line	38
  5084                           	
  5085                           l1393:
  5086  000F3E                     ;lcd.c: 38:     PORTAbits.RA6 = type;
  5087                           	btfsc	(c:LCD_send@type),c,0
  5088  000F3E  B003               	bra	u625
  5089  000F40  D002               	bcf	((c:3968)),c,6	;volatile
  5090  000F42  9C80               	bra	u626
  5091  000F44  D001               	u625:
  5092  000F46                     	bsf	((c:3968)),c,6	;volatile
  5093  000F46  8C80               	u626:
  5094  000F48                     
  5095                           	line	41
  5096                           	
  5097                           l1395:
  5098  000F48                     ;lcd.c: 41:     LCD_out(Byte >> 4);
  5099                           	swapf	((c:LCD_send@Byte)),c,w
  5100  000F48  3804               	andlw	(0ffh shr 4) & 0ffh
  5101  000F4A  0B0F               	
  5102                           	call	_LCD_out
  5103  000F4C  EC0B  F006         	line	42
  5104                           	
  5105                           l1397:
  5106  000F50                     ;lcd.c: 42:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  5107                           	opt asmopt_push
  5108                           opt asmopt_off
  5109                           	movlw	6
  5110  000F50  0E06               u867:
  5111  000F52                     decfsz	wreg,f
  5112  000F52  2EE8               	bra	u867
  5113  000F54  D7FE               	nop2
  5114  000F56  D000               opt asmopt_pop
  5115                           
  5116                           	line	44
  5117                           	
  5118                           l1399:
  5119  000F58                     ;lcd.c: 44:     LCD_out(Byte);
  5120                           	movf	((c:LCD_send@Byte)),c,w
  5121  000F58  5004               	
  5122                           	call	_LCD_out
  5123  000F5A  EC0B  F006         	line	45
  5124                           ;lcd.c: 45:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  5125                           	opt asmopt_push
  5126                           opt asmopt_off
  5127                           	movlw	33
  5128  000F5E  0E21               u877:
  5129  000F60                     decfsz	wreg,f
  5130  000F60  2EE8               	bra	u877
  5131  000F62  D7FE               	nop
  5132  000F64  F000               opt asmopt_pop
  5133                           
  5134                           	line	47
  5135                           	
  5136                           l37:
  5137  000F66                     	return	;funcret
  5138  000F66  0012               	opt stack 0
  5139                           GLOBAL	__end_of_LCD_send
  5140                           	__end_of_LCD_send:
  5141  000F68                     	signat	_LCD_send,8313
  5142                           	global	_LCD_out
  5143                           
  5144 ;; *************** function _LCD_out *****************
  5145 ;; Defined at:
  5146 ;;		line 19 in file "lcd.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  number          1    wreg     unsigned char 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  number          1    1[COMRAM] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5160 ;;      Params:         0       0       0       0
  5161 ;;      Locals:         1       0       0       0
  5162 ;;      Temps:          1       0       0       0
  5163 ;;      Totals:         2       0       0       0
  5164 ;;Total ram usage:        2 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    1
  5167 ;; This function calls:
  5168 ;;		_E_TOG
  5169 ;; This function is called by:
  5170 ;;		_LCD_send
  5171 ;;		_LCD_init
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           psect	text20,class=CODE,space=0,reloc=2,group=0
  5175                           	line	19
  5176                           global __ptext20
  5177                           __ptext20:
  5178  000C16                     psect	text20
  5179                           	file	"lcd.c"
  5180                           	line	19
  5181                           	global	__size_of_LCD_out
  5182                           	__size_of_LCD_out	equ	__end_of_LCD_out-_LCD_out
  5183  0000                     	
  5184                           _LCD_out:
  5185  000C16                     ;incstack = 0
  5186                           	opt	stack 26
  5187                           ;LCD_out@number stored from wreg
  5188                           	movwf	((c:LCD_out@number)),c
  5189  000C16  6E02               	line	22
  5190                           	
  5191                           l1347:
  5192  000C18                     ;lcd.c: 19: void LCD_out(unsigned char number);lcd.c: 20:  {;lcd.c: 22:     PORTCbits.RC
                                 1 = (number & 0b0001);
  5193                           	movff	(c:LCD_out@number),??_LCD_out+0+0
  5194  000C18  C002  F001         	movlw	01h
  5195  000C1C  0E01               	andwf	(??_LCD_out+0+0),c
  5196  000C1E  1601               	rlncf	(??_LCD_out+0+0),c
  5197  000C20  4601               	movf	((c:3970)),c,w	;volatile
  5198  000C22  5082               	xorwf	(??_LCD_out+0+0),c,w
  5199  000C24  1801               	andlw	not (((1<<1)-1)<<1)
  5200  000C26  0BFD               	xorwf	(??_LCD_out+0+0),c,w
  5201  000C28  1801               	movwf	((c:3970)),c	;volatile
  5202  000C2A  6E82               	line	23
  5203                           ;lcd.c: 23:     PORTCbits.RC2 = (number & 0b0010) >> 1;
  5204                           	movff	(c:LCD_out@number),??_LCD_out+0+0
  5205  000C2C  C002  F001         	bcf	status,0
  5206  000C30  90D8               	rrcf	(??_LCD_out+0+0),c
  5207  000C32  3201               
  5208                           	movlw	01h
  5209  000C34  0E01               	andwf	(??_LCD_out+0+0),c
  5210  000C36  1601               	rlncf	(??_LCD_out+0+0),c
  5211  000C38  4601               	rlncf	(??_LCD_out+0+0),c
  5212  000C3A  4601               	movf	((c:3970)),c,w	;volatile
  5213  000C3C  5082               	xorwf	(??_LCD_out+0+0),c,w
  5214  000C3E  1801               	andlw	not (((1<<1)-1)<<2)
  5215  000C40  0BFB               	xorwf	(??_LCD_out+0+0),c,w
  5216  000C42  1801               	movwf	((c:3970)),c	;volatile
  5217  000C44  6E82               	line	24
  5218                           ;lcd.c: 24:     PORTDbits.RD0 = (number & 0b0100) >> 2;
  5219                           	movff	(c:LCD_out@number),??_LCD_out+0+0
  5220  000C46  C002  F001         	bcf	status,0
  5221  000C4A  90D8               	rrcf	(??_LCD_out+0+0),c
  5222  000C4C  3201               	bcf	status,0
  5223  000C4E  90D8               	rrcf	(??_LCD_out+0+0),c
  5224  000C50  3201               
  5225                           	movlw	01h
  5226  000C52  0E01               	andwf	(??_LCD_out+0+0),c
  5227  000C54  1601               	movf	((c:3971)),c,w	;volatile
  5228  000C56  5083               	xorwf	(??_LCD_out+0+0),c,w
  5229  000C58  1801               	andlw	not ((1<<1)-1)
  5230  000C5A  0BFE               	xorwf	(??_LCD_out+0+0),c,w
  5231  000C5C  1801               	movwf	((c:3971)),c	;volatile
  5232  000C5E  6E83               	line	25
  5233                           ;lcd.c: 25:     PORTDbits.RD1 = (number & 0b1000) >> 3;
  5234                           	movff	(c:LCD_out@number),??_LCD_out+0+0
  5235  000C60  C002  F001         	bcf	status,0
  5236  000C64  90D8               	rrcf	(??_LCD_out+0+0),c
  5237  000C66  3201               	bcf	status,0
  5238  000C68  90D8               	rrcf	(??_LCD_out+0+0),c
  5239  000C6A  3201               	bcf	status,0
  5240  000C6C  90D8               	rrcf	(??_LCD_out+0+0),c
  5241  000C6E  3201               
  5242                           	movlw	01h
  5243  000C70  0E01               	andwf	(??_LCD_out+0+0),c
  5244  000C72  1601               	rlncf	(??_LCD_out+0+0),c
  5245  000C74  4601               	movf	((c:3971)),c,w	;volatile
  5246  000C76  5083               	xorwf	(??_LCD_out+0+0),c,w
  5247  000C78  1801               	andlw	not (((1<<1)-1)<<1)
  5248  000C7A  0BFD               	xorwf	(??_LCD_out+0+0),c,w
  5249  000C7C  1801               	movwf	((c:3971)),c	;volatile
  5250  000C7E  6E83               	line	27
  5251                           	
  5252                           l1349:
  5253  000C80                     ;lcd.c: 27:     E_TOG();
  5254                           	call	_E_TOG	;wreg free
  5255  000C80  ECDC  F007         	line	28
  5256                           	
  5257                           l1351:
  5258  000C84                     ;lcd.c: 28:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  5259                           	opt asmopt_push
  5260                           opt asmopt_off
  5261                           	movlw	3
  5262  000C84  0E03               u887:
  5263  000C86                     decfsz	wreg,f
  5264  000C86  2EE8               	bra	u887
  5265  000C88  D7FE               	nop
  5266  000C8A  F000               opt asmopt_pop
  5267                           
  5268                           	line	29
  5269                           	
  5270                           l34:
  5271  000C8C                     	return	;funcret
  5272  000C8C  0012               	opt stack 0
  5273                           GLOBAL	__end_of_LCD_out
  5274                           	__end_of_LCD_out:
  5275  000C8E                     	signat	_LCD_out,4217
  5276                           	global	_E_TOG
  5277                           
  5278 ;; *************** function _E_TOG *****************
  5279 ;; Defined at:
  5280 ;;		line 4 in file "lcd.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;		None
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;		None
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  1    wreg      void 
  5287 ;; Registers used:
  5288 ;;		wreg
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5294 ;;      Params:         0       0       0       0
  5295 ;;      Locals:         0       0       0       0
  5296 ;;      Temps:          0       0       0       0
  5297 ;;      Totals:         0       0       0       0
  5298 ;;Total ram usage:        0 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; This function calls:
  5301 ;;		Nothing
  5302 ;; This function is called by:
  5303 ;;		_LCD_out
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           psect	text21,class=CODE,space=0,reloc=2,group=0
  5307                           	line	4
  5308                           global __ptext21
  5309                           __ptext21:
  5310  000FB8                     psect	text21
  5311                           	file	"lcd.c"
  5312                           	line	4
  5313                           	global	__size_of_E_TOG
  5314                           	__size_of_E_TOG	equ	__end_of_E_TOG-_E_TOG
  5315  0000                     	
  5316                           _E_TOG:
  5317  000FB8                     ;incstack = 0
  5318                           	opt	stack 26
  5319                           	line	5
  5320                           	
  5321                           l1305:
  5322  000FB8                     ;lcd.c: 5:     PORTCbits.RC0 = 1;
  5323                           	bsf	((c:3970)),c,0	;volatile
  5324  000FB8  8082               	line	6
  5325                           	
  5326                           l1307:
  5327  000FBA                     ;lcd.c: 6:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  5328                           	opt asmopt_push
  5329                           opt asmopt_off
  5330                           	movlw	3
  5331  000FBA  0E03               u897:
  5332  000FBC                     decfsz	wreg,f
  5333  000FBC  2EE8               	bra	u897
  5334  000FBE  D7FE               	nop
  5335  000FC0  F000               opt asmopt_pop
  5336                           
  5337                           	line	7
  5338                           	
  5339                           l1309:
  5340  000FC2                     ;lcd.c: 7:     PORTCbits.RC0 = 0;
  5341                           	bcf	((c:3970)),c,0	;volatile
  5342  000FC2  9082               	line	8
  5343                           ;lcd.c: 8:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  5344                           	opt asmopt_push
  5345                           opt asmopt_off
  5346                           	movlw	3
  5347  000FC4  0E03               u907:
  5348  000FC6                     decfsz	wreg,f
  5349  000FC6  2EE8               	bra	u907
  5350  000FC8  D7FE               	nop
  5351  000FCA  F000               opt asmopt_pop
  5352                           
  5353                           	line	9
  5354                           	
  5355                           l25:
  5356  000FCC                     	return	;funcret
  5357  000FCC  0012               	opt stack 0
  5358                           GLOBAL	__end_of_E_TOG
  5359                           	__end_of_E_TOG:
  5360  000FCE                     	signat	_E_TOG,89
  5361                           psect	smallconst
  5362                           	db 0	; dummy byte at the end
  5363  000314  00                 	global	__smallconst
  5364                           	global	__mediumconst
  5365                           	GLOBAL	__activetblptr
  5366                           __activetblptr	EQU	1
  5367  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  5368                           	PSECT	rparam,class=COMRAM,space=1,noexec
  5369                           	GLOBAL	__Lrparam
  5370                           	FNCONF	rparam,??,?
  5371                           	GLOBAL	___rparam_used
  5372                           	___rparam_used EQU 1
  5373  0000                     	GLOBAL	___param_bank
  5374                           	___param_bank EQU 0
  5375  0000                     GLOBAL	__Lparam, __Hparam
  5376                           GLOBAL	__Lrparam, __Hrparam
  5377                           __Lparam	EQU	__Lrparam
  5378  0000                     __Hparam	EQU	__Hrparam
  5379  0000                     	end


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     32      72
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> print_IR@buf(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> print_IR@buf(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S973_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> print_IR@buf(BANK0[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> print_IR@buf(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    read_IR@Values	PTR struct Sensor_ir size(2) Largest target is 4
		 -> main@Values(BANK0[4]), 

    print_IR@Values	PTR struct Sensor_ir size(2) Largest target is 4
		 -> main@Values(BANK0[4]), 

    LCD_string@string	PTR unsigned char  size(2) Largest target is 16
		 -> print_IR@buf(BANK0[16]), 


Critical Paths under _main in COMRAM

    _main->_print_IR
    _print_IR->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _LCD_string->_LCD_send
    _LCD_line->_LCD_send
    _LCD_clear->_LCD_send
    _LCD_init->_LCD_send
    _LCD_send->_LCD_out

Critical Paths under _main in BANK0

    _main->_print_IR
    _print_IR->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   10051
                                             26 BANK0      6     6      0
                           _LCD_init
                       _init_capture
                           _print_IR
                            _read_IR
 ---------------------------------------------------------------------------------
 (1) _read_IR                                              4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _print_IR                                            19    17      2    8955
                                             91 COMRAM     3     1      2
                                             10 BANK0     16    16      0
                          _LCD_clear
                           _LCD_line
                         _LCD_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    5986
                                             85 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5483
                                             77 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6    5130
                                             59 COMRAM    18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    3759
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               6     4      2     166
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (2) _LCD_string                                           2     0      2    1035
                                              4 COMRAM     2     0      2
                           _LCD_send
 ---------------------------------------------------------------------------------
 (2) _LCD_line                                             1     1      0     882
                                              4 COMRAM     1     1      0
                           _LCD_send
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     838
                                              4 COMRAM     1     1      0
                           _LCD_send
 ---------------------------------------------------------------------------------
 (1) _init_capture                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0     926
                                              4 COMRAM     1     1      0
                            _LCD_out
                           _LCD_send
 ---------------------------------------------------------------------------------
 (3) _LCD_send                                             2     1      1     838
                                              2 COMRAM     2     1      1
                            _LCD_out
 ---------------------------------------------------------------------------------
 (4) _LCD_out                                              2     2      0      88
                                              0 COMRAM     2     2      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (5) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_out
       _E_TOG
     _LCD_send
       _LCD_out
         _E_TOG
   _init_capture
   _print_IR
     _LCD_clear
       _LCD_send
         _LCD_out
           _E_TOG
     _LCD_line
       _LCD_send
         _LCD_out
           _E_TOG
     _LCD_string
       _LCD_send
         _LCD_out
           _E_TOG
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
   _read_IR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      48       5       45.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A6       3        0.0%
DATA                 0      0      A6      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Nov 30 11:58:30 2018

                     l40 08CE                       l25 0FCC                       l34 0C8C  
                     l50 0EFC                       l43 0E7E                       l51 0F3A  
                     l44 0EA2                       l52 0F3A                       l37 0F66  
                     l45 0E9E                       l46 0EAA                       l55 0F82  
                     l49 0F1E                       l81 0C9E                       l58 0C14  
                     l82 0C9E                       l83 0CB0                       l84 0CBC  
                     l85 0CF2                       l86 0CF6                       l87 0CF6  
                    l115 0FB6                      l141 0AD4                      l118 0E5C  
                    l143 0ADC                      l151 032C                      l144 0B04  
                    l145 0AE8                      l161 0506                      l153 0352  
                    l146 0B22                      l162 050E                      l147 0B4A  
                    l139 0ABA                      l163 053A                      l155 035A  
                    l148 0B66                      l156 048E                      l172 0D3A  
                    l157 039E                      l173 0D10                      l166 06A2  
                    l174 0D56                      l159 050A                      l167 062E  
                    l175 0D5E                      l168 06E0                      l169 0684  
                    l620 0742                      l621 07A8                      l622 07C4  
                    l630 0924                      l623 07E4                      l631 0976  
                    l616 07C4                      l632 0992                      l617 072C  
                    l633 09B2                      l618 0714                      l626 0992  
                    l619 073E                      l627 090E                      l628 08F6  
                    l629 0920                      l860 0A3E                      l861 0A90  
                    l854 09E6                      l856 09DC                      l857 0A8C  
                    l858 0A88                      l866 0ED2                      l882 0DD2  
                    l867 0EB8                      l883 0DCA                      l868 0EF6  
                    l884 0DEE                      l876 0DBC                      l869 0EF6  
                    l885 0E0E                      l879 0FCE                      u400 0DEA  
                    u401 0DE6                      u410 0AA2                      u411 0A9E  
                    u500 091C                      u420 0AC8                      u501 0918  
                    u421 0AC4                      u510 0952                      u350 09C6  
                    u430 0B22                      u511 094E                      u351 09C2  
                    u431 0B1E                      u360 09D8                      u440 0B32  
                    u520 0326                      u600 05A8                      u361 09D4  
                    u441 0B2E                      u521 0322                      u601 05A4  
                    u370 0A04                      u530 0346                      u610 0652  
                    u451 06E8                      u371 0A00                      u531 0342  
                    u611 064E                      u460 070C                      u380 0A3A  
                    u540 04A0                      u461 0708                      u381 0A36  
                    u541 049C                      u470 073A                      u390 0EF2  
                    u550 04BE                      u630 0D56                      u471 0736  
                    u391 0EEE                      u551 04BA                      u631 0D52  
                    u640 0E70                      u480 0782                      u560 04D8  
                    u625 0F46                      u641 0E6C                      u481 077E  
                    u561 04D4                      u626 0F48                      u650 0E90  
                    u490 08EE                      u570 04F2                      u651 0E8C  
                    u491 08EA                      u571 04EE                      u707 0BF0  
                    u660 0F36                      u580 0502                      u661 0F32  
                    u581 04FE                      u717 0BFE                      u590 0560  
                    u670 0CAC                      u807 0846                      u591 055C  
                    u727 0C0C                      u671 0CA8                      u817 085C  
                    u737 0F14                      u907 0FC6                      u827 0876  
                    u747 0EA4                      u837 0890                      u757 0F78  
                    u847 08AA                      u767 0804                      u687 0CE0  
                    u857 08C4                      u777 081A                      u697 0BE2  
                    u867 0F52                      u787 082A                      u877 0F60  
                    u797 0838                      u887 0C86                      u897 0FBC  
         print_IR@Values 005C                      _pad 0A92                      wreg 000FE8  
            ?_LCD_string 0005             __CFG_LVP$OFF 000000          __end_of_LCD_out 0C8E  
                   l1301 0976                     l1221 0A04                     l1213 09B4  
                   l1303 0988                     l1223 0A3E                     l1215 09C6  
                   l1231 0ECA                     l1311 0316                     l1305 0FB8  
                   l1225 0A90                     l1217 09DC                     l1233 0ED2  
                   l1241 0DEE                     l1321 038A                     l1313 0326  
                   l1401 0CFA                     l1307 0FBA                     l1411 0E70  
                   l1219 09E6                     l1227 0EAC                     l1243 0E0E  
                   l1235 0DBE                     l1251 0AC8                     l1331 0426  
                   l1323 039E                     l1315 032C                     l1403 0D02  
                   l1309 0FC2                     l1413 0E7E                     l1421 0EFC  
                   l1229 0EB8                     l1237 0DCA                     l1261 0B32  
                   l1253 0AD4                     l1245 0A92                     l1341 04F2  
                   l1325 03A4                     l1333 048E                     l1317 0346  
                   l1405 0D10                     l1501 0C06                     l1351 0C84  
                   l1503 0F9E                     l1431 0F72                     l1415 0E90  
                   l1423 0F0E                     l1271 070C                     l1239 0DD2  
                   l1263 0B4A                     l1255 0AE8                     l1247 0AA2  
                   l1335 04A0                     l1343 050E                     l1327 041A  
                   l1319 0382                     l1407 0D3A                     l1511 0CB4  
                   l1417 0EA2                     l1409 0E60                     l1425 0F12  
                   l1281 0782                     l1273 0714                     l1265 0B66  
                   l1257 0AFC                     l1249 0ABA                     l1345 053A  
                   l1337 04BE                     l1329 0420                     l1361 0584  
                   l1353 053C                     l1441 0DA6                     l1433 0D60  
                   l1505 0E10                     l1513 0CBC                     l1347 0C18  
                   l1451 0814                     l1427 0F1E                     l1419 0EF8  
                   l1283 07A2                     l1275 072C                     l1267 06E2  
                   l1291 08EE                     l1259 0B04                     l1339 04D8  
                   l1371 0652                     l1363 05A8                     l1355 0560  
                   l1443 0DBC                     l1435 0D72                     l1515 0CC8  
                   l1507 0C8E                     l1349 0C80                     l1461 083E  
                   l1453 0822                     l1445 07E6                     l1429 0F68  
                   l1285 07A8                     l1277 0742                     l1269 06EE  
                   l1293 08F6                     l1381 0692                     l1373 0660  
                   l1365 05F2                     l1357 056E                     l1437 0D7A  
                   l1517 0CD4                     l1509 0CB0                     l1471 0870  
                   l1463 0844                     l1455 0828                     l1447 07FE  
                   l1287 07BA                     l1279 0754                     l1295 090E  
                   l1391 06E0                     l1383 069E                     l1375 0674  
                   l1367 062A                     l1359 0580                     l1439 0D82  
                   l1393 0F3E                     l1481 08B4                     l1473 0880  
                   l1465 084C                     l1457 0830                     l1449 080E  
                   l1297 0924                     l1289 08D0                     l1377 0680  
                   l1369 062E                     l1385 06A2                     l1395 0F48  
                   l1483 08BE                     l1475 088A                     l1467 0856  
                   l1459 0836                     l1299 0952                     l1387 06C6  
                   l1379 0684                     l1491 0BA2                     l1397 0F50  
                   l1477 089A                     l1469 0866                     l1389 06D4  
                   l1493 0BA8                     l1485 0B68                     l1399 0F58  
                   l1479 08A4                     l1495 0BDC                     l1487 0B72  
                   l1497 0BEA                     l1489 0B96                     l1499 0BF8  
                   ?_pad 0011                     STR_1 030B                     STR_2 0301  
                   _LATA 000F89                     _LATC 000F8B                     _LATD 000F8C  
                   _dbuf 0068                     _main 0C8E                     _prec 0064  
                   _nout 0060                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
                   _utoa 0316                     start 0000       __size_of_LCD_clear 001C  
           ___param_bank 000000                    ??_pad 0017         __end_of_LCD_line 0EAC  
       __end_of_LCD_init 08D0         __end_of_LCD_send 0F68                    ?_main 0001  
                  ?_utoa 001C          __end_of___lodiv 07E6          __end_of___lomod 09B4  
                  _T5CON 000FB7                    _E_TOG 0FB8             vfpfcnvrt@fmt 003E  
           vfpfcnvrt@llu 0046                    _TRISA 000F92                    _TRISC 000F94  
                  _TRISD 000F95                    _flags 0066          __end_of_read_IR 0E5E  
                  _fputc 09B4                    _fputs 0EAC                    pad@fp 0011  
                  _width 0062                    _putch 0FCE                    tablat 000FF5  
                  utoa@d 001E                    utoa@i 003A                    utoa@n 0032  
                  utoa@p 002E                    utoa@w 0030                    status 000FD8  
        __end_of_sprintf 0DBE         ___lodiv@dividend 0001           __CFG_MCLRE$OFF 000000  
        __initialization 0F84      __size_of_LCD_string 0044             __end_of_main 0CFA  
           __end_of_utoa 053C           __CFG_OSC$IRCIO 000000                   ??_main 00A2  
                 ??_utoa 0026            __activetblptr 000001                   ?_E_TOG 0001  
              ??_LCD_out 0001         ___lodiv@quotient 0011        __end_of_LCD_clear 0F84  
                 ?_fputc 0001                   ?_fputs 000A                   _ANSEL0 000FB8  
                 _ANSEL1 000FB9                   ?_putch 0001            ?_init_capture 0001  
                 _OSCCON 000FD3             vfprintf@cfmt 0054                ??___lodiv 0011  
              ??___lomod 0011                   clear_0 0F8A                   pad@buf 0013  
                 _strlen 0DBE                   fputc@c 0001                ??_read_IR 0003  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
           __mediumconst 0000         __end_of_print_IR 0C16                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 0D60                   utoa@fp 001C                ??_sprintf 005C  
         ??_init_capture 0001               __accesstop 0060  __end_of__initialization 0F90  
              ?_LCD_line 0001                ?_LCD_init 0001                ?_LCD_send 0003  
          ___rparam_used 000001            __end_of_E_TOG 0FCE             LCD_line@line 0005  
         __pcstackCOMRAM 0001            __end_of_fputc 0A92            __end_of_fputs 0EF8  
          __end_of_putch 0FD0             LCD_send@Byte 0004             LCD_send@type 0003  
                ??_E_TOG 0001             ??_LCD_string 0007                  ??_fputc 0005  
                ??_fputs 000E                  ??_putch 0001               __pbssBANK0 0060  
       LCD_string@string 0005               ??_LCD_line 0005               ??_LCD_init 0005  
             ??_LCD_send 0004       __end_of_LCD_string 0F3C                  _CAP1CON 000F63  
                _CAP2CON 000F62                  _DFLTCON 000F60                  ?_strlen 0001  
                _LCD_out 0C16       __size_of_vfpfcnvrt 01A6         ___lomod@dividend 0001  
                __Hparam 0000                  __Lparam 0000                ?_print_IR 005C  
                ___lodiv 06E2                  ___lomod 08D0     __end_of_init_capture 0FB8  
              ?_vfprintf 004E             __psmallconst 0300                  __pcinit 0F84  
                __ramtop 0300                  __ptext0 0C8E                  __ptext1 0E10  
                __ptext2 0B68                  __ptext3 0D60                  __ptext4 0CFA  
                __ptext5 053C                  __ptext6 0316                  __ptext7 0A92  
                __ptext8 0DBE                  __ptext9 0EAC          __size_of_strlen 0052  
                _read_IR 0E10             __size_of_pad 00D6                _T5CONbits 000FB7  
                _sprintf 0D60                _LCD_clear 0F68     end_of_initialization 0F90  
                fputc@fp 0003                  fputs@fp 000C        __end_of_vfpfcnvrt 06E2  
             ??_print_IR 005E                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0054  
                strlen@a 0005                  strlen@s 0001                _PORTAbits 000F80  
              _PORTCbits 000F82                _PORTDbits 000F83              print_IR@buf 0092  
             ?_LCD_clear 0001               main@Values 00A4        __size_of_LCD_line 004E  
      __size_of_LCD_init 00EA        __size_of_LCD_send 002C              vfpfcnvrt@ap 0040  
            vfpfcnvrt@fp 003C           __end_of_strlen 0E10      start_initialization 0F84  
        ___lodiv@divisor 0009          ___lodiv@counter 0019              __end_of_pad 0B68  
  __size_of_init_capture 001A              vfprintf@fmt 0050            LCD_out@number 0002  
               ??_strlen 0003                 ?_LCD_out 0001            __pcstackBANK0 0088  
            ??_LCD_clear 0005             _init_capture 0F9E                 ?___lodiv 0001  
               ?___lomod 0001        __size_of_print_IR 00AE        __size_of_vfprintf 0066  
               _CAP1BUFH 000F69                 _CAP1BUFL 000F68                 _CAP2BUFH 000F67  
               _CAP2BUFL 000F66          ___lomod@divisor 0009              __smallconst 0300  
        ___lomod@counter 0011                 ?_read_IR 0001           __size_of_E_TOG 0016  
               ?_sprintf 0056            read_IR@Values 0001           __size_of_fputc 00DE  
         __size_of_fputs 004C           __size_of_putch 0002                 _LCD_line 0E5E  
               _LCD_init 07E6                 _LCD_send 0F3C                _vfpfcnvrt 053C  
       __size_of_LCD_out 0078                 __Hrparam 0000               vfprintf@ap 0052  
               __Lrparam 0000               vfprintf@fp 004E             __Lsmallconst 0300  
       __size_of___lodiv 0104         __size_of___lomod 00E4               ?_vfpfcnvrt 003C  
             sprintf@fmt 0058               sprintf@ret 0088         __size_of_read_IR 004E  
               __ptext10 09B4                 __ptext11 0FCE                 __ptext20 0C16  
               __ptext12 08D0                 __ptext21 0FB8                 __ptext13 06E2  
               __ptext14 0EF8                 __ptext15 0E5E                 __ptext16 0F68  
               __ptext17 0F9E                 __ptext18 07E6                 __ptext19 0F3C  
       __size_of_sprintf 005E            __size_of_main 006C            __size_of_utoa 0226  
               _print_IR 0B68                 _vfprintf 0CFA               _LCD_string 0EF8  
              sprintf@ap 008A               _OSCCONbits 000FD3              ??_vfpfcnvrt 0042  
               sprintf@f 008C                 sprintf@s 0056  
