

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Nov 30 11:49:59 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4331 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   108                           DFLTCON equ 0F60h ;# 
   109  0000                     # 118 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   110                           CAP3CON equ 0F61h ;# 
   111  0000                     # 177 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   112                           CAP2CON equ 0F62h ;# 
   113  0000                     # 236 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   114                           CAP1CON equ 0F63h ;# 
   115  0000                     # 295 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   116                           CAP3BUFL equ 0F64h ;# 
   117  0000                     # 300 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   118                           MAXCNTL equ 0F64h ;# 
   119  0000                     # 307 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   120                           CAP3BUFH equ 0F65h ;# 
   121  0000                     # 312 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   122                           MAXCNTH equ 0F65h ;# 
   123  0000                     # 319 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   124                           CAP2BUFL equ 0F66h ;# 
   125  0000                     # 324 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   126                           POSCNTL equ 0F66h ;# 
   127  0000                     # 331 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   128                           CAP2BUFH equ 0F67h ;# 
   129  0000                     # 336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   130                           POSCNTH equ 0F67h ;# 
   131  0000                     # 343 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   132                           CAP1BUFL equ 0F68h ;# 
   133  0000                     # 348 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   134                           VELRL equ 0F68h ;# 
   135  0000                     # 355 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   136                           CAP1BUFH equ 0F69h ;# 
   137  0000                     # 360 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   138                           VELRH equ 0F69h ;# 
   139  0000                     # 367 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   140                           OVDCONS equ 0F6Ah ;# 
   141  0000                     # 437 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   142                           OVDCOND equ 0F6Bh ;# 
   143  0000                     # 507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   144                           FLTCONFIG equ 0F6Ch ;# 
   145  0000                     # 569 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   146                           DTCON equ 0F6Dh ;# 
   147  0000                     # 695 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   148                           PWMCON1 equ 0F6Eh ;# 
   149  0000                     # 761 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   150                           PWMCON0 equ 0F6Fh ;# 
   151  0000                     # 831 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   152                           SEVTCMPH equ 0F70h ;# 
   153  0000                     # 838 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   154                           SEVTCMPL equ 0F71h ;# 
   155  0000                     # 845 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   156                           PDC3H equ 0F72h ;# 
   157  0000                     # 852 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   158                           PDC3L equ 0F73h ;# 
   159  0000                     # 859 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   160                           PDC2H equ 0F74h ;# 
   161  0000                     # 866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   162                           PDC2L equ 0F75h ;# 
   163  0000                     # 873 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   164                           PDC1H equ 0F76h ;# 
   165  0000                     # 880 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   166                           PDC1L equ 0F77h ;# 
   167  0000                     # 887 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   168                           PDC0H equ 0F78h ;# 
   169  0000                     # 894 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   170                           PDC0L equ 0F79h ;# 
   171  0000                     # 901 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   172                           PTPERH equ 0F7Ah ;# 
   173  0000                     # 908 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   174                           PTPERL equ 0F7Bh ;# 
   175  0000                     # 915 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   176                           PTMRH equ 0F7Ch ;# 
   177  0000                     # 922 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   178                           PTMRL equ 0F7Dh ;# 
   179  0000                     # 929 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   180                           PTCON1 equ 0F7Eh ;# 
   181  0000                     # 956 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   182                           PTCON0 equ 0F7Fh ;# 
   183  0000                     # 1038 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   184                           PORTA equ 0F80h ;# 
   185  0000                     # 1199 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   186                           PORTB equ 0F81h ;# 
   187  0000                     # 1270 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   188                           PORTC equ 0F82h ;# 
   189  0000                     # 1536 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   190                           PORTD equ 0F83h ;# 
   191  0000                     # 1607 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   192                           PORTE equ 0F84h ;# 
   193  0000                     # 1733 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   194                           TMR5 equ 0F87h ;# 
   195  0000                     # 1740 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   196                           TMR5L equ 0F87h ;# 
   197  0000                     # 1747 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   198                           TMR5H equ 0F88h ;# 
   199  0000                     # 1754 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   200                           LATA equ 0F89h ;# 
   201  0000                     # 1866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   202                           LATB equ 0F8Ah ;# 
   203  0000                     # 1978 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   204                           LATC equ 0F8Bh ;# 
   205  0000                     # 2090 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   206                           LATD equ 0F8Ch ;# 
   207  0000                     # 2202 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   208                           LATE equ 0F8Dh ;# 
   209  0000                     # 2254 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   210                           PR5 equ 0F90h ;# 
   211  0000                     # 2261 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   212                           PR5L equ 0F90h ;# 
   213  0000                     # 2268 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   214                           PR5H equ 0F91h ;# 
   215  0000                     # 2275 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   216                           TRISA equ 0F92h ;# 
   217  0000                     # 2280 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   218                           DDRA equ 0F92h ;# 
   219  0000                     # 2497 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   220                           TRISB equ 0F93h ;# 
   221  0000                     # 2502 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   222                           DDRB equ 0F93h ;# 
   223  0000                     # 2719 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   224                           TRISC equ 0F94h ;# 
   225  0000                     # 2724 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   226                           DDRC equ 0F94h ;# 
   227  0000                     # 2941 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   228                           TRISD equ 0F95h ;# 
   229  0000                     # 2946 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   230                           DDRD equ 0F95h ;# 
   231  0000                     # 3163 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   232                           TRISE equ 0F96h ;# 
   233  0000                     # 3168 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   234                           DDRE equ 0F96h ;# 
   235  0000                     # 3265 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   236                           ADCHS equ 0F99h ;# 
   237  0000                     # 3403 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   238                           ADCON3 equ 0F9Ah ;# 
   239  0000                     # 3475 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   240                           OSCTUNE equ 0F9Bh ;# 
   241  0000                     # 3533 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   242                           PIE1 equ 0F9Dh ;# 
   243  0000                     # 3613 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   244                           PIR1 equ 0F9Eh ;# 
   245  0000                     # 3693 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   246                           IPR1 equ 0F9Fh ;# 
   247  0000                     # 3773 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   248                           PIE2 equ 0FA0h ;# 
   249  0000                     # 3814 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   250                           PIR2 equ 0FA1h ;# 
   251  0000                     # 3855 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   252                           IPR2 equ 0FA2h ;# 
   253  0000                     # 3896 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   254                           PIE3 equ 0FA3h ;# 
   255  0000                     # 3988 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   256                           PIR3 equ 0FA4h ;# 
   257  0000                     # 4048 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   258                           IPR3 equ 0FA5h ;# 
   259  0000                     # 4108 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   260                           EECON1 equ 0FA6h ;# 
   261  0000                     # 4174 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   262                           EECON2 equ 0FA7h ;# 
   263  0000                     # 4181 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   264                           EEDATA equ 0FA8h ;# 
   265  0000                     # 4188 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   266                           EEADR equ 0FA9h ;# 
   267  0000                     # 4195 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   268                           BAUDCON equ 0FAAh ;# 
   269  0000                     # 4200 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   270                           BAUDCTL equ 0FAAh ;# 
   271  0000                     # 4375 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   272                           RCSTA equ 0FABh ;# 
   273  0000                     # 4380 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   274                           RCSTA1 equ 0FABh ;# 
   275  0000                     # 4585 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   276                           TXSTA equ 0FACh ;# 
   277  0000                     # 4590 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   278                           TXSTA1 equ 0FACh ;# 
   279  0000                     # 4841 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   280                           TXREG equ 0FADh ;# 
   281  0000                     # 4846 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   282                           TXREG1 equ 0FADh ;# 
   283  0000                     # 4853 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   284                           RCREG equ 0FAEh ;# 
   285  0000                     # 4858 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   286                           RCREG1 equ 0FAEh ;# 
   287  0000                     # 4865 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   288                           SPBRG equ 0FAFh ;# 
   289  0000                     # 4870 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   290                           SPBRG1 equ 0FAFh ;# 
   291  0000                     # 4877 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   292                           SPBRGH equ 0FB0h ;# 
   293  0000                     # 4884 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   294                           QEICON equ 0FB6h ;# 
   295  0000                     # 5036 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   296                           T5CON equ 0FB7h ;# 
   297  0000                     # 5154 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   298                           ANSEL0 equ 0FB8h ;# 
   299  0000                     # 5216 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   300                           ANSEL1 equ 0FB9h ;# 
   301  0000                     # 5236 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   302                           CCP2CON equ 0FBAh ;# 
   303  0000                     # 5315 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   304                           CCPR2 equ 0FBBh ;# 
   305  0000                     # 5322 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   306                           CCPR2L equ 0FBBh ;# 
   307  0000                     # 5329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   308                           CCPR2H equ 0FBCh ;# 
   309  0000                     # 5336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   310                           CCP1CON equ 0FBDh ;# 
   311  0000                     # 5415 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   312                           CCPR1 equ 0FBEh ;# 
   313  0000                     # 5422 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   314                           CCPR1L equ 0FBEh ;# 
   315  0000                     # 5429 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   316                           CCPR1H equ 0FBFh ;# 
   317  0000                     # 5436 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   318                           ADCON2 equ 0FC0h ;# 
   319  0000                     # 5512 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   320                           ADCON1 equ 0FC1h ;# 
   321  0000                     # 5608 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   322                           ADCON0 equ 0FC2h ;# 
   323  0000                     # 5727 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   324                           ADRES equ 0FC3h ;# 
   325  0000                     # 5734 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   326                           ADRESL equ 0FC3h ;# 
   327  0000                     # 5741 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   328                           ADRESH equ 0FC4h ;# 
   329  0000                     # 5748 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   330                           SSPCON equ 0FC6h ;# 
   331  0000                     # 5753 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   332                           SSPCON1 equ 0FC6h ;# 
   333  0000                     # 5886 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   334                           SSPSTAT equ 0FC7h ;# 
   335  0000                     # 6107 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   336                           SSPADD equ 0FC8h ;# 
   337  0000                     # 6114 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   338                           SSPBUF equ 0FC9h ;# 
   339  0000                     # 6121 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   340                           T2CON equ 0FCAh ;# 
   341  0000                     # 6219 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   342                           PR2 equ 0FCBh ;# 
   343  0000                     # 6224 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   344                           MEMCON equ 0FCBh ;# 
   345  0000                     # 6329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   346                           TMR2 equ 0FCCh ;# 
   347  0000                     # 6336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   348                           T1CON equ 0FCDh ;# 
   349  0000                     # 6448 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   350                           TMR1 equ 0FCEh ;# 
   351  0000                     # 6455 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   352                           TMR1L equ 0FCEh ;# 
   353  0000                     # 6462 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   354                           TMR1H equ 0FCFh ;# 
   355  0000                     # 6469 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   356                           RCON equ 0FD0h ;# 
   357  0000                     # 6612 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   358                           WDTCON equ 0FD1h ;# 
   359  0000                     # 6639 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   360                           LVDCON equ 0FD2h ;# 
   361  0000                     # 6704 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   362                           OSCCON equ 0FD3h ;# 
   363  0000                     # 6790 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   364                           T0CON equ 0FD5h ;# 
   365  0000                     # 6866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   366                           TMR0 equ 0FD6h ;# 
   367  0000                     # 6873 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   368                           TMR0L equ 0FD6h ;# 
   369  0000                     # 6880 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   370                           TMR0H equ 0FD7h ;# 
   371  0000                     # 6887 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   372                           STATUS equ 0FD8h ;# 
   373  0000                     # 6958 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   374                           FSR2 equ 0FD9h ;# 
   375  0000                     # 6965 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   376                           FSR2L equ 0FD9h ;# 
   377  0000                     # 6972 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   378                           FSR2H equ 0FDAh ;# 
   379  0000                     # 6979 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   380                           PLUSW2 equ 0FDBh ;# 
   381  0000                     # 6986 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   382                           PREINC2 equ 0FDCh ;# 
   383  0000                     # 6993 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   384                           POSTDEC2 equ 0FDDh ;# 
   385  0000                     # 7000 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   386                           POSTINC2 equ 0FDEh ;# 
   387  0000                     # 7007 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   388                           INDF2 equ 0FDFh ;# 
   389  0000                     # 7014 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   390                           BSR equ 0FE0h ;# 
   391  0000                     # 7021 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   392                           FSR1 equ 0FE1h ;# 
   393  0000                     # 7028 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   394                           FSR1L equ 0FE1h ;# 
   395  0000                     # 7035 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   396                           FSR1H equ 0FE2h ;# 
   397  0000                     # 7042 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   398                           PLUSW1 equ 0FE3h ;# 
   399  0000                     # 7049 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   400                           PREINC1 equ 0FE4h ;# 
   401  0000                     # 7056 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   402                           POSTDEC1 equ 0FE5h ;# 
   403  0000                     # 7063 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   404                           POSTINC1 equ 0FE6h ;# 
   405  0000                     # 7070 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   406                           INDF1 equ 0FE7h ;# 
   407  0000                     # 7077 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   408                           WREG equ 0FE8h ;# 
   409  0000                     # 7084 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   410                           FSR0 equ 0FE9h ;# 
   411  0000                     # 7091 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   412                           FSR0L equ 0FE9h ;# 
   413  0000                     # 7098 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   414                           FSR0H equ 0FEAh ;# 
   415  0000                     # 7105 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   416                           PLUSW0 equ 0FEBh ;# 
   417  0000                     # 7112 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   418                           PREINC0 equ 0FECh ;# 
   419  0000                     # 7119 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   420                           POSTDEC0 equ 0FEDh ;# 
   421  0000                     # 7126 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   422                           POSTINC0 equ 0FEEh ;# 
   423  0000                     # 7133 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   424                           INDF0 equ 0FEFh ;# 
   425  0000                     # 7140 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   426                           INTCON3 equ 0FF0h ;# 
   427  0000                     # 7232 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   428                           INTCON2 equ 0FF1h ;# 
   429  0000                     # 7309 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   430                           INTCON equ 0FF2h ;# 
   431  0000                     # 7426 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   432                           PROD equ 0FF3h ;# 
   433  0000                     # 7433 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   434                           PRODL equ 0FF3h ;# 
   435  0000                     # 7440 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   436                           PRODH equ 0FF4h ;# 
   437  0000                     # 7447 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   438                           TABLAT equ 0FF5h ;# 
   439  0000                     # 7456 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   440                           TBLPTR equ 0FF6h ;# 
   441  0000                     # 7463 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   442                           TBLPTRL equ 0FF6h ;# 
   443  0000                     # 7470 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   444                           TBLPTRH equ 0FF7h ;# 
   445  0000                     # 7477 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   446                           TBLPTRU equ 0FF8h ;# 
   447  0000                     # 7486 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   448                           PCLAT equ 0FF9h ;# 
   449  0000                     # 7493 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   450                           PC equ 0FF9h ;# 
   451  0000                     # 7500 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   452                           PCL equ 0FF9h ;# 
   453  0000                     # 7507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   454                           PCLATH equ 0FFAh ;# 
   455  0000                     # 7514 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   456                           PCLATU equ 0FFBh ;# 
   457  0000                     # 7521 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   458                           STKPTR equ 0FFCh ;# 
   459  0000                     # 7595 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   460                           TOS equ 0FFDh ;# 
   461  0000                     # 7602 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   462                           TOSL equ 0FFDh ;# 
   463  0000                     # 7609 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   464                           TOSH equ 0FFEh ;# 
   465  0000                     # 7616 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   466                           TOSU equ 0FFFh ;# 
   467  0000                     # 54 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   468                           DFLTCON equ 0F60h ;# 
   469  0000                     # 118 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   470                           CAP3CON equ 0F61h ;# 
   471  0000                     # 177 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   472                           CAP2CON equ 0F62h ;# 
   473  0000                     # 236 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   474                           CAP1CON equ 0F63h ;# 
   475  0000                     # 295 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   476                           CAP3BUFL equ 0F64h ;# 
   477  0000                     # 300 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   478                           MAXCNTL equ 0F64h ;# 
   479  0000                     # 307 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   480                           CAP3BUFH equ 0F65h ;# 
   481  0000                     # 312 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   482                           MAXCNTH equ 0F65h ;# 
   483  0000                     # 319 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   484                           CAP2BUFL equ 0F66h ;# 
   485  0000                     # 324 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   486                           POSCNTL equ 0F66h ;# 
   487  0000                     # 331 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   488                           CAP2BUFH equ 0F67h ;# 
   489  0000                     # 336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   490                           POSCNTH equ 0F67h ;# 
   491  0000                     # 343 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   492                           CAP1BUFL equ 0F68h ;# 
   493  0000                     # 348 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   494                           VELRL equ 0F68h ;# 
   495  0000                     # 355 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   496                           CAP1BUFH equ 0F69h ;# 
   497  0000                     # 360 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   498                           VELRH equ 0F69h ;# 
   499  0000                     # 367 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   500                           OVDCONS equ 0F6Ah ;# 
   501  0000                     # 437 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   502                           OVDCOND equ 0F6Bh ;# 
   503  0000                     # 507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   504                           FLTCONFIG equ 0F6Ch ;# 
   505  0000                     # 569 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   506                           DTCON equ 0F6Dh ;# 
   507  0000                     # 695 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   508                           PWMCON1 equ 0F6Eh ;# 
   509  0000                     # 761 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   510                           PWMCON0 equ 0F6Fh ;# 
   511  0000                     # 831 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   512                           SEVTCMPH equ 0F70h ;# 
   513  0000                     # 838 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   514                           SEVTCMPL equ 0F71h ;# 
   515  0000                     # 845 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   516                           PDC3H equ 0F72h ;# 
   517  0000                     # 852 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   518                           PDC3L equ 0F73h ;# 
   519  0000                     # 859 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   520                           PDC2H equ 0F74h ;# 
   521  0000                     # 866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   522                           PDC2L equ 0F75h ;# 
   523  0000                     # 873 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   524                           PDC1H equ 0F76h ;# 
   525  0000                     # 880 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   526                           PDC1L equ 0F77h ;# 
   527  0000                     # 887 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   528                           PDC0H equ 0F78h ;# 
   529  0000                     # 894 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   530                           PDC0L equ 0F79h ;# 
   531  0000                     # 901 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   532                           PTPERH equ 0F7Ah ;# 
   533  0000                     # 908 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   534                           PTPERL equ 0F7Bh ;# 
   535  0000                     # 915 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   536                           PTMRH equ 0F7Ch ;# 
   537  0000                     # 922 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   538                           PTMRL equ 0F7Dh ;# 
   539  0000                     # 929 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   540                           PTCON1 equ 0F7Eh ;# 
   541  0000                     # 956 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   542                           PTCON0 equ 0F7Fh ;# 
   543  0000                     # 1038 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   544                           PORTA equ 0F80h ;# 
   545  0000                     # 1199 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   546                           PORTB equ 0F81h ;# 
   547  0000                     # 1270 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   548                           PORTC equ 0F82h ;# 
   549  0000                     # 1536 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   550                           PORTD equ 0F83h ;# 
   551  0000                     # 1607 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   552                           PORTE equ 0F84h ;# 
   553  0000                     # 1733 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   554                           TMR5 equ 0F87h ;# 
   555  0000                     # 1740 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   556                           TMR5L equ 0F87h ;# 
   557  0000                     # 1747 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   558                           TMR5H equ 0F88h ;# 
   559  0000                     # 1754 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   560                           LATA equ 0F89h ;# 
   561  0000                     # 1866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   562                           LATB equ 0F8Ah ;# 
   563  0000                     # 1978 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   564                           LATC equ 0F8Bh ;# 
   565  0000                     # 2090 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   566                           LATD equ 0F8Ch ;# 
   567  0000                     # 2202 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   568                           LATE equ 0F8Dh ;# 
   569  0000                     # 2254 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   570                           PR5 equ 0F90h ;# 
   571  0000                     # 2261 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   572                           PR5L equ 0F90h ;# 
   573  0000                     # 2268 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   574                           PR5H equ 0F91h ;# 
   575  0000                     # 2275 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   576                           TRISA equ 0F92h ;# 
   577  0000                     # 2280 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   578                           DDRA equ 0F92h ;# 
   579  0000                     # 2497 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   580                           TRISB equ 0F93h ;# 
   581  0000                     # 2502 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   582                           DDRB equ 0F93h ;# 
   583  0000                     # 2719 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   584                           TRISC equ 0F94h ;# 
   585  0000                     # 2724 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   586                           DDRC equ 0F94h ;# 
   587  0000                     # 2941 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   588                           TRISD equ 0F95h ;# 
   589  0000                     # 2946 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   590                           DDRD equ 0F95h ;# 
   591  0000                     # 3163 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   592                           TRISE equ 0F96h ;# 
   593  0000                     # 3168 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   594                           DDRE equ 0F96h ;# 
   595  0000                     # 3265 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   596                           ADCHS equ 0F99h ;# 
   597  0000                     # 3403 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   598                           ADCON3 equ 0F9Ah ;# 
   599  0000                     # 3475 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   600                           OSCTUNE equ 0F9Bh ;# 
   601  0000                     # 3533 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   602                           PIE1 equ 0F9Dh ;# 
   603  0000                     # 3613 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   604                           PIR1 equ 0F9Eh ;# 
   605  0000                     # 3693 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   606                           IPR1 equ 0F9Fh ;# 
   607  0000                     # 3773 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   608                           PIE2 equ 0FA0h ;# 
   609  0000                     # 3814 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   610                           PIR2 equ 0FA1h ;# 
   611  0000                     # 3855 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   612                           IPR2 equ 0FA2h ;# 
   613  0000                     # 3896 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   614                           PIE3 equ 0FA3h ;# 
   615  0000                     # 3988 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   616                           PIR3 equ 0FA4h ;# 
   617  0000                     # 4048 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   618                           IPR3 equ 0FA5h ;# 
   619  0000                     # 4108 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   620                           EECON1 equ 0FA6h ;# 
   621  0000                     # 4174 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   622                           EECON2 equ 0FA7h ;# 
   623  0000                     # 4181 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   624                           EEDATA equ 0FA8h ;# 
   625  0000                     # 4188 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   626                           EEADR equ 0FA9h ;# 
   627  0000                     # 4195 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   628                           BAUDCON equ 0FAAh ;# 
   629  0000                     # 4200 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   630                           BAUDCTL equ 0FAAh ;# 
   631  0000                     # 4375 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   632                           RCSTA equ 0FABh ;# 
   633  0000                     # 4380 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   634                           RCSTA1 equ 0FABh ;# 
   635  0000                     # 4585 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   636                           TXSTA equ 0FACh ;# 
   637  0000                     # 4590 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   638                           TXSTA1 equ 0FACh ;# 
   639  0000                     # 4841 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   640                           TXREG equ 0FADh ;# 
   641  0000                     # 4846 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   642                           TXREG1 equ 0FADh ;# 
   643  0000                     # 4853 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   644                           RCREG equ 0FAEh ;# 
   645  0000                     # 4858 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   646                           RCREG1 equ 0FAEh ;# 
   647  0000                     # 4865 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   648                           SPBRG equ 0FAFh ;# 
   649  0000                     # 4870 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   650                           SPBRG1 equ 0FAFh ;# 
   651  0000                     # 4877 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   652                           SPBRGH equ 0FB0h ;# 
   653  0000                     # 4884 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   654                           QEICON equ 0FB6h ;# 
   655  0000                     # 5036 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   656                           T5CON equ 0FB7h ;# 
   657  0000                     # 5154 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   658                           ANSEL0 equ 0FB8h ;# 
   659  0000                     # 5216 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   660                           ANSEL1 equ 0FB9h ;# 
   661  0000                     # 5236 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   662                           CCP2CON equ 0FBAh ;# 
   663  0000                     # 5315 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   664                           CCPR2 equ 0FBBh ;# 
   665  0000                     # 5322 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   666                           CCPR2L equ 0FBBh ;# 
   667  0000                     # 5329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   668                           CCPR2H equ 0FBCh ;# 
   669  0000                     # 5336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   670                           CCP1CON equ 0FBDh ;# 
   671  0000                     # 5415 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   672                           CCPR1 equ 0FBEh ;# 
   673  0000                     # 5422 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   674                           CCPR1L equ 0FBEh ;# 
   675  0000                     # 5429 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   676                           CCPR1H equ 0FBFh ;# 
   677  0000                     # 5436 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   678                           ADCON2 equ 0FC0h ;# 
   679  0000                     # 5512 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   680                           ADCON1 equ 0FC1h ;# 
   681  0000                     # 5608 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   682                           ADCON0 equ 0FC2h ;# 
   683  0000                     # 5727 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   684                           ADRES equ 0FC3h ;# 
   685  0000                     # 5734 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   686                           ADRESL equ 0FC3h ;# 
   687  0000                     # 5741 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   688                           ADRESH equ 0FC4h ;# 
   689  0000                     # 5748 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   690                           SSPCON equ 0FC6h ;# 
   691  0000                     # 5753 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   692                           SSPCON1 equ 0FC6h ;# 
   693  0000                     # 5886 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   694                           SSPSTAT equ 0FC7h ;# 
   695  0000                     # 6107 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   696                           SSPADD equ 0FC8h ;# 
   697  0000                     # 6114 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   698                           SSPBUF equ 0FC9h ;# 
   699  0000                     # 6121 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   700                           T2CON equ 0FCAh ;# 
   701  0000                     # 6219 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   702                           PR2 equ 0FCBh ;# 
   703  0000                     # 6224 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   704                           MEMCON equ 0FCBh ;# 
   705  0000                     # 6329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   706                           TMR2 equ 0FCCh ;# 
   707  0000                     # 6336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   708                           T1CON equ 0FCDh ;# 
   709  0000                     # 6448 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   710                           TMR1 equ 0FCEh ;# 
   711  0000                     # 6455 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   712                           TMR1L equ 0FCEh ;# 
   713  0000                     # 6462 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   714                           TMR1H equ 0FCFh ;# 
   715  0000                     # 6469 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   716                           RCON equ 0FD0h ;# 
   717  0000                     # 6612 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   718                           WDTCON equ 0FD1h ;# 
   719  0000                     # 6639 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   720                           LVDCON equ 0FD2h ;# 
   721  0000                     # 6704 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   722                           OSCCON equ 0FD3h ;# 
   723  0000                     # 6790 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   724                           T0CON equ 0FD5h ;# 
   725  0000                     # 6866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   726                           TMR0 equ 0FD6h ;# 
   727  0000                     # 6873 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   728                           TMR0L equ 0FD6h ;# 
   729  0000                     # 6880 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   730                           TMR0H equ 0FD7h ;# 
   731  0000                     # 6887 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   732                           STATUS equ 0FD8h ;# 
   733  0000                     # 6958 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   734                           FSR2 equ 0FD9h ;# 
   735  0000                     # 6965 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   736                           FSR2L equ 0FD9h ;# 
   737  0000                     # 6972 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   738                           FSR2H equ 0FDAh ;# 
   739  0000                     # 6979 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   740                           PLUSW2 equ 0FDBh ;# 
   741  0000                     # 6986 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   742                           PREINC2 equ 0FDCh ;# 
   743  0000                     # 6993 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   744                           POSTDEC2 equ 0FDDh ;# 
   745  0000                     # 7000 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   746                           POSTINC2 equ 0FDEh ;# 
   747  0000                     # 7007 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   748                           INDF2 equ 0FDFh ;# 
   749  0000                     # 7014 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   750                           BSR equ 0FE0h ;# 
   751  0000                     # 7021 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   752                           FSR1 equ 0FE1h ;# 
   753  0000                     # 7028 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   754                           FSR1L equ 0FE1h ;# 
   755  0000                     # 7035 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   756                           FSR1H equ 0FE2h ;# 
   757  0000                     # 7042 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   758                           PLUSW1 equ 0FE3h ;# 
   759  0000                     # 7049 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   760                           PREINC1 equ 0FE4h ;# 
   761  0000                     # 7056 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   762                           POSTDEC1 equ 0FE5h ;# 
   763  0000                     # 7063 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   764                           POSTINC1 equ 0FE6h ;# 
   765  0000                     # 7070 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   766                           INDF1 equ 0FE7h ;# 
   767  0000                     # 7077 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   768                           WREG equ 0FE8h ;# 
   769  0000                     # 7084 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   770                           FSR0 equ 0FE9h ;# 
   771  0000                     # 7091 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   772                           FSR0L equ 0FE9h ;# 
   773  0000                     # 7098 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   774                           FSR0H equ 0FEAh ;# 
   775  0000                     # 7105 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   776                           PLUSW0 equ 0FEBh ;# 
   777  0000                     # 7112 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   778                           PREINC0 equ 0FECh ;# 
   779  0000                     # 7119 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   780                           POSTDEC0 equ 0FEDh ;# 
   781  0000                     # 7126 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   782                           POSTINC0 equ 0FEEh ;# 
   783  0000                     # 7133 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   784                           INDF0 equ 0FEFh ;# 
   785  0000                     # 7140 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   786                           INTCON3 equ 0FF0h ;# 
   787  0000                     # 7232 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   788                           INTCON2 equ 0FF1h ;# 
   789  0000                     # 7309 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   790                           INTCON equ 0FF2h ;# 
   791  0000                     # 7426 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   792                           PROD equ 0FF3h ;# 
   793  0000                     # 7433 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   794                           PRODL equ 0FF3h ;# 
   795  0000                     # 7440 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   796                           PRODH equ 0FF4h ;# 
   797  0000                     # 7447 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   798                           TABLAT equ 0FF5h ;# 
   799  0000                     # 7456 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   800                           TBLPTR equ 0FF6h ;# 
   801  0000                     # 7463 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   802                           TBLPTRL equ 0FF6h ;# 
   803  0000                     # 7470 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   804                           TBLPTRH equ 0FF7h ;# 
   805  0000                     # 7477 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   806                           TBLPTRU equ 0FF8h ;# 
   807  0000                     # 7486 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   808                           PCLAT equ 0FF9h ;# 
   809  0000                     # 7493 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   810                           PC equ 0FF9h ;# 
   811  0000                     # 7500 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   812                           PCL equ 0FF9h ;# 
   813  0000                     # 7507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   814                           PCLATH equ 0FFAh ;# 
   815  0000                     # 7514 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   816                           PCLATU equ 0FFBh ;# 
   817  0000                     # 7521 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   818                           STKPTR equ 0FFCh ;# 
   819  0000                     # 7595 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   820                           TOS equ 0FFDh ;# 
   821  0000                     # 7602 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   822                           TOSL equ 0FFDh ;# 
   823  0000                     # 7609 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   824                           TOSH equ 0FFEh ;# 
   825  0000                     # 7616 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   826                           TOSU equ 0FFFh ;# 
   827  0000                     # 54 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   828                           DFLTCON equ 0F60h ;# 
   829  0000                     # 118 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   830                           CAP3CON equ 0F61h ;# 
   831  0000                     # 177 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   832                           CAP2CON equ 0F62h ;# 
   833  0000                     # 236 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   834                           CAP1CON equ 0F63h ;# 
   835  0000                     # 295 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   836                           CAP3BUFL equ 0F64h ;# 
   837  0000                     # 300 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   838                           MAXCNTL equ 0F64h ;# 
   839  0000                     # 307 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   840                           CAP3BUFH equ 0F65h ;# 
   841  0000                     # 312 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   842                           MAXCNTH equ 0F65h ;# 
   843  0000                     # 319 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   844                           CAP2BUFL equ 0F66h ;# 
   845  0000                     # 324 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   846                           POSCNTL equ 0F66h ;# 
   847  0000                     # 331 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   848                           CAP2BUFH equ 0F67h ;# 
   849  0000                     # 336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   850                           POSCNTH equ 0F67h ;# 
   851  0000                     # 343 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   852                           CAP1BUFL equ 0F68h ;# 
   853  0000                     # 348 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   854                           VELRL equ 0F68h ;# 
   855  0000                     # 355 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   856                           CAP1BUFH equ 0F69h ;# 
   857  0000                     # 360 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   858                           VELRH equ 0F69h ;# 
   859  0000                     # 367 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   860                           OVDCONS equ 0F6Ah ;# 
   861  0000                     # 437 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   862                           OVDCOND equ 0F6Bh ;# 
   863  0000                     # 507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   864                           FLTCONFIG equ 0F6Ch ;# 
   865  0000                     # 569 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   866                           DTCON equ 0F6Dh ;# 
   867  0000                     # 695 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   868                           PWMCON1 equ 0F6Eh ;# 
   869  0000                     # 761 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   870                           PWMCON0 equ 0F6Fh ;# 
   871  0000                     # 831 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   872                           SEVTCMPH equ 0F70h ;# 
   873  0000                     # 838 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   874                           SEVTCMPL equ 0F71h ;# 
   875  0000                     # 845 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   876                           PDC3H equ 0F72h ;# 
   877  0000                     # 852 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   878                           PDC3L equ 0F73h ;# 
   879  0000                     # 859 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   880                           PDC2H equ 0F74h ;# 
   881  0000                     # 866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   882                           PDC2L equ 0F75h ;# 
   883  0000                     # 873 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   884                           PDC1H equ 0F76h ;# 
   885  0000                     # 880 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   886                           PDC1L equ 0F77h ;# 
   887  0000                     # 887 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   888                           PDC0H equ 0F78h ;# 
   889  0000                     # 894 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   890                           PDC0L equ 0F79h ;# 
   891  0000                     # 901 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   892                           PTPERH equ 0F7Ah ;# 
   893  0000                     # 908 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   894                           PTPERL equ 0F7Bh ;# 
   895  0000                     # 915 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   896                           PTMRH equ 0F7Ch ;# 
   897  0000                     # 922 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   898                           PTMRL equ 0F7Dh ;# 
   899  0000                     # 929 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   900                           PTCON1 equ 0F7Eh ;# 
   901  0000                     # 956 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   902                           PTCON0 equ 0F7Fh ;# 
   903  0000                     # 1038 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   904                           PORTA equ 0F80h ;# 
   905  0000                     # 1199 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   906                           PORTB equ 0F81h ;# 
   907  0000                     # 1270 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   908                           PORTC equ 0F82h ;# 
   909  0000                     # 1536 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   910                           PORTD equ 0F83h ;# 
   911  0000                     # 1607 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   912                           PORTE equ 0F84h ;# 
   913  0000                     # 1733 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   914                           TMR5 equ 0F87h ;# 
   915  0000                     # 1740 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   916                           TMR5L equ 0F87h ;# 
   917  0000                     # 1747 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   918                           TMR5H equ 0F88h ;# 
   919  0000                     # 1754 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   920                           LATA equ 0F89h ;# 
   921  0000                     # 1866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   922                           LATB equ 0F8Ah ;# 
   923  0000                     # 1978 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   924                           LATC equ 0F8Bh ;# 
   925  0000                     # 2090 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   926                           LATD equ 0F8Ch ;# 
   927  0000                     # 2202 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   928                           LATE equ 0F8Dh ;# 
   929  0000                     # 2254 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   930                           PR5 equ 0F90h ;# 
   931  0000                     # 2261 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   932                           PR5L equ 0F90h ;# 
   933  0000                     # 2268 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   934                           PR5H equ 0F91h ;# 
   935  0000                     # 2275 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   936                           TRISA equ 0F92h ;# 
   937  0000                     # 2280 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   938                           DDRA equ 0F92h ;# 
   939  0000                     # 2497 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   940                           TRISB equ 0F93h ;# 
   941  0000                     # 2502 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   942                           DDRB equ 0F93h ;# 
   943  0000                     # 2719 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   944                           TRISC equ 0F94h ;# 
   945  0000                     # 2724 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   946                           DDRC equ 0F94h ;# 
   947  0000                     # 2941 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   948                           TRISD equ 0F95h ;# 
   949  0000                     # 2946 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   950                           DDRD equ 0F95h ;# 
   951  0000                     # 3163 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   952                           TRISE equ 0F96h ;# 
   953  0000                     # 3168 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   954                           DDRE equ 0F96h ;# 
   955  0000                     # 3265 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   956                           ADCHS equ 0F99h ;# 
   957  0000                     # 3403 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   958                           ADCON3 equ 0F9Ah ;# 
   959  0000                     # 3475 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   960                           OSCTUNE equ 0F9Bh ;# 
   961  0000                     # 3533 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   962                           PIE1 equ 0F9Dh ;# 
   963  0000                     # 3613 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   964                           PIR1 equ 0F9Eh ;# 
   965  0000                     # 3693 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   966                           IPR1 equ 0F9Fh ;# 
   967  0000                     # 3773 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   968                           PIE2 equ 0FA0h ;# 
   969  0000                     # 3814 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   970                           PIR2 equ 0FA1h ;# 
   971  0000                     # 3855 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   972                           IPR2 equ 0FA2h ;# 
   973  0000                     # 3896 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   974                           PIE3 equ 0FA3h ;# 
   975  0000                     # 3988 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   976                           PIR3 equ 0FA4h ;# 
   977  0000                     # 4048 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   978                           IPR3 equ 0FA5h ;# 
   979  0000                     # 4108 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   980                           EECON1 equ 0FA6h ;# 
   981  0000                     # 4174 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   982                           EECON2 equ 0FA7h ;# 
   983  0000                     # 4181 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   984                           EEDATA equ 0FA8h ;# 
   985  0000                     # 4188 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   986                           EEADR equ 0FA9h ;# 
   987  0000                     # 4195 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   988                           BAUDCON equ 0FAAh ;# 
   989  0000                     # 4200 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   990                           BAUDCTL equ 0FAAh ;# 
   991  0000                     # 4375 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   992                           RCSTA equ 0FABh ;# 
   993  0000                     # 4380 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   994                           RCSTA1 equ 0FABh ;# 
   995  0000                     # 4585 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   996                           TXSTA equ 0FACh ;# 
   997  0000                     # 4590 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
   998                           TXSTA1 equ 0FACh ;# 
   999  0000                     # 4841 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1000                           TXREG equ 0FADh ;# 
  1001  0000                     # 4846 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1002                           TXREG1 equ 0FADh ;# 
  1003  0000                     # 4853 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1004                           RCREG equ 0FAEh ;# 
  1005  0000                     # 4858 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1006                           RCREG1 equ 0FAEh ;# 
  1007  0000                     # 4865 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1008                           SPBRG equ 0FAFh ;# 
  1009  0000                     # 4870 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1010                           SPBRG1 equ 0FAFh ;# 
  1011  0000                     # 4877 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1012                           SPBRGH equ 0FB0h ;# 
  1013  0000                     # 4884 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1014                           QEICON equ 0FB6h ;# 
  1015  0000                     # 5036 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1016                           T5CON equ 0FB7h ;# 
  1017  0000                     # 5154 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1018                           ANSEL0 equ 0FB8h ;# 
  1019  0000                     # 5216 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1020                           ANSEL1 equ 0FB9h ;# 
  1021  0000                     # 5236 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1022                           CCP2CON equ 0FBAh ;# 
  1023  0000                     # 5315 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1024                           CCPR2 equ 0FBBh ;# 
  1025  0000                     # 5322 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1026                           CCPR2L equ 0FBBh ;# 
  1027  0000                     # 5329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1028                           CCPR2H equ 0FBCh ;# 
  1029  0000                     # 5336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1030                           CCP1CON equ 0FBDh ;# 
  1031  0000                     # 5415 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1032                           CCPR1 equ 0FBEh ;# 
  1033  0000                     # 5422 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1034                           CCPR1L equ 0FBEh ;# 
  1035  0000                     # 5429 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1036                           CCPR1H equ 0FBFh ;# 
  1037  0000                     # 5436 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1038                           ADCON2 equ 0FC0h ;# 
  1039  0000                     # 5512 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1040                           ADCON1 equ 0FC1h ;# 
  1041  0000                     # 5608 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1042                           ADCON0 equ 0FC2h ;# 
  1043  0000                     # 5727 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1044                           ADRES equ 0FC3h ;# 
  1045  0000                     # 5734 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1046                           ADRESL equ 0FC3h ;# 
  1047  0000                     # 5741 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1048                           ADRESH equ 0FC4h ;# 
  1049  0000                     # 5748 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1050                           SSPCON equ 0FC6h ;# 
  1051  0000                     # 5753 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1052                           SSPCON1 equ 0FC6h ;# 
  1053  0000                     # 5886 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1054                           SSPSTAT equ 0FC7h ;# 
  1055  0000                     # 6107 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1056                           SSPADD equ 0FC8h ;# 
  1057  0000                     # 6114 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1058                           SSPBUF equ 0FC9h ;# 
  1059  0000                     # 6121 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1060                           T2CON equ 0FCAh ;# 
  1061  0000                     # 6219 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1062                           PR2 equ 0FCBh ;# 
  1063  0000                     # 6224 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1064                           MEMCON equ 0FCBh ;# 
  1065  0000                     # 6329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1066                           TMR2 equ 0FCCh ;# 
  1067  0000                     # 6336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1068                           T1CON equ 0FCDh ;# 
  1069  0000                     # 6448 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1070                           TMR1 equ 0FCEh ;# 
  1071  0000                     # 6455 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1072                           TMR1L equ 0FCEh ;# 
  1073  0000                     # 6462 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1074                           TMR1H equ 0FCFh ;# 
  1075  0000                     # 6469 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1076                           RCON equ 0FD0h ;# 
  1077  0000                     # 6612 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1078                           WDTCON equ 0FD1h ;# 
  1079  0000                     # 6639 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1080                           LVDCON equ 0FD2h ;# 
  1081  0000                     # 6704 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1082                           OSCCON equ 0FD3h ;# 
  1083  0000                     # 6790 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1084                           T0CON equ 0FD5h ;# 
  1085  0000                     # 6866 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1086                           TMR0 equ 0FD6h ;# 
  1087  0000                     # 6873 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1088                           TMR0L equ 0FD6h ;# 
  1089  0000                     # 6880 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1090                           TMR0H equ 0FD7h ;# 
  1091  0000                     # 6887 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1092                           STATUS equ 0FD8h ;# 
  1093  0000                     # 6958 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1094                           FSR2 equ 0FD9h ;# 
  1095  0000                     # 6965 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1096                           FSR2L equ 0FD9h ;# 
  1097  0000                     # 6972 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1098                           FSR2H equ 0FDAh ;# 
  1099  0000                     # 6979 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1100                           PLUSW2 equ 0FDBh ;# 
  1101  0000                     # 6986 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1102                           PREINC2 equ 0FDCh ;# 
  1103  0000                     # 6993 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1104                           POSTDEC2 equ 0FDDh ;# 
  1105  0000                     # 7000 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1106                           POSTINC2 equ 0FDEh ;# 
  1107  0000                     # 7007 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1108                           INDF2 equ 0FDFh ;# 
  1109  0000                     # 7014 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1110                           BSR equ 0FE0h ;# 
  1111  0000                     # 7021 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1112                           FSR1 equ 0FE1h ;# 
  1113  0000                     # 7028 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1114                           FSR1L equ 0FE1h ;# 
  1115  0000                     # 7035 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1116                           FSR1H equ 0FE2h ;# 
  1117  0000                     # 7042 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1118                           PLUSW1 equ 0FE3h ;# 
  1119  0000                     # 7049 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1120                           PREINC1 equ 0FE4h ;# 
  1121  0000                     # 7056 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1122                           POSTDEC1 equ 0FE5h ;# 
  1123  0000                     # 7063 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1124                           POSTINC1 equ 0FE6h ;# 
  1125  0000                     # 7070 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1126                           INDF1 equ 0FE7h ;# 
  1127  0000                     # 7077 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1128                           WREG equ 0FE8h ;# 
  1129  0000                     # 7084 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1130                           FSR0 equ 0FE9h ;# 
  1131  0000                     # 7091 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1132                           FSR0L equ 0FE9h ;# 
  1133  0000                     # 7098 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1134                           FSR0H equ 0FEAh ;# 
  1135  0000                     # 7105 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1136                           PLUSW0 equ 0FEBh ;# 
  1137  0000                     # 7112 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1138                           PREINC0 equ 0FECh ;# 
  1139  0000                     # 7119 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1140                           POSTDEC0 equ 0FEDh ;# 
  1141  0000                     # 7126 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1142                           POSTINC0 equ 0FEEh ;# 
  1143  0000                     # 7133 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1144                           INDF0 equ 0FEFh ;# 
  1145  0000                     # 7140 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1146                           INTCON3 equ 0FF0h ;# 
  1147  0000                     # 7232 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1148                           INTCON2 equ 0FF1h ;# 
  1149  0000                     # 7309 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1150                           INTCON equ 0FF2h ;# 
  1151  0000                     # 7426 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1152                           PROD equ 0FF3h ;# 
  1153  0000                     # 7433 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1154                           PRODL equ 0FF3h ;# 
  1155  0000                     # 7440 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1156                           PRODH equ 0FF4h ;# 
  1157  0000                     # 7447 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1158                           TABLAT equ 0FF5h ;# 
  1159  0000                     # 7456 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1160                           TBLPTR equ 0FF6h ;# 
  1161  0000                     # 7463 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1162                           TBLPTRL equ 0FF6h ;# 
  1163  0000                     # 7470 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1164                           TBLPTRH equ 0FF7h ;# 
  1165  0000                     # 7477 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1166                           TBLPTRU equ 0FF8h ;# 
  1167  0000                     # 7486 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1168                           PCLAT equ 0FF9h ;# 
  1169  0000                     # 7493 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1170                           PC equ 0FF9h ;# 
  1171  0000                     # 7500 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1172                           PCL equ 0FF9h ;# 
  1173  0000                     # 7507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1174                           PCLATH equ 0FFAh ;# 
  1175  0000                     # 7514 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1176                           PCLATU equ 0FFBh ;# 
  1177  0000                     # 7521 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1178                           STKPTR equ 0FFCh ;# 
  1179  0000                     # 7595 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1180                           TOS equ 0FFDh ;# 
  1181  0000                     # 7602 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1182                           TOSL equ 0FFDh ;# 
  1183  0000                     # 7609 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1184                           TOSH equ 0FFEh ;# 
  1185  0000                     # 7616 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4331.h"
  1186                           TOSU equ 0FFFh ;# 
  1187  0000                     	FNCALL	_main,_LCD_init
  1188                           	FNCALL	_main,_LCD_line
  1189                           	FNCALL	_main,_LCD_send
  1190                           	FNCALL	_main,_LCD_string
  1191                           	FNCALL	_main,_init_capture
  1192                           	FNCALL	_main,_read_IR
  1193                           	FNCALL	_main,_sprintf
  1194                           	FNCALL	_sprintf,_vfprintf
  1195                           	FNCALL	_vfprintf,_vfpfcnvrt
  1196                           	FNCALL	_vfpfcnvrt,_fputc
  1197                           	FNCALL	_vfpfcnvrt,_utoa
  1198                           	FNCALL	_utoa,___lodiv
  1199                           	FNCALL	_utoa,___lomod
  1200                           	FNCALL	_utoa,_pad
  1201                           	FNCALL	_pad,_fputc
  1202                           	FNCALL	_pad,_fputs
  1203                           	FNCALL	_pad,_strlen
  1204                           	FNCALL	_fputs,_fputc
  1205                           	FNCALL	_fputc,_putch
  1206                           	FNCALL	_LCD_string,_LCD_send
  1207                           	FNCALL	_LCD_line,_LCD_send
  1208                           	FNCALL	_LCD_init,_LCD_out
  1209                           	FNCALL	_LCD_init,_LCD_send
  1210                           	FNCALL	_LCD_send,_LCD_out
  1211                           	FNCALL	_LCD_out,_E_TOG
  1212                           	FNROOT	_main
  1213                           	global	_flags
  1214                           	global	_nout
  1215                           	global	_width
  1216                           	global	_prec
  1217                           	global	_dbuf
  1218                           	global	_CAP1BUFL
  1219                           _CAP1BUFL	set	0xF68
  1220  0000                     	global	_CAP1BUFH
  1221                           _CAP1BUFH	set	0xF69
  1222  0000                     	global	_CAP2BUFL
  1223                           _CAP2BUFL	set	0xF66
  1224  0000                     	global	_CAP2BUFH
  1225                           _CAP2BUFH	set	0xF67
  1226  0000                     	global	_DFLTCON
  1227                           _DFLTCON	set	0xF60
  1228  0000                     	global	_CAP2CON
  1229                           _CAP2CON	set	0xF62
  1230  0000                     	global	_CAP1CON
  1231                           _CAP1CON	set	0xF63
  1232  0000                     	global	_T5CONbits
  1233                           _T5CONbits	set	0xFB7
  1234  0000                     	global	_T5CON
  1235                           _T5CON	set	0xFB7
  1236  0000                     	global	_OSCCONbits
  1237                           _OSCCONbits	set	0xFD3
  1238  0000                     	global	_OSCCON
  1239                           _OSCCON	set	0xFD3
  1240  0000                     	global	_ANSEL1
  1241                           _ANSEL1	set	0xFB9
  1242  0000                     	global	_ANSEL0
  1243                           _ANSEL0	set	0xFB8
  1244  0000                     	global	_TRISD
  1245                           _TRISD	set	0xF95
  1246  0000                     	global	_TRISC
  1247                           _TRISC	set	0xF94
  1248  0000                     	global	_TRISA
  1249                           _TRISA	set	0xF92
  1250  0000                     	global	_LATD
  1251                           _LATD	set	0xF8C
  1252  0000                     	global	_LATC
  1253                           _LATC	set	0xF8B
  1254  0000                     	global	_LATA
  1255                           _LATA	set	0xF89
  1256  0000                     	global	_PORTAbits
  1257                           _PORTAbits	set	0xF80
  1258  0000                     	global	_PORTDbits
  1259                           _PORTDbits	set	0xF83
  1260  0000                     	global	_PORTCbits
  1261                           _PORTCbits	set	0xF82
  1262  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
  1263                           global __psmallconst
  1264                           __psmallconst:
  1265  000300                     	db	0
  1266  000300  00                 	
  1267                           STR_2:
  1268  000301                     	db	82	;'R'
  1269  000301  52                 	db	105	;'i'
  1270  000302  69                 	db	103	;'g'
  1271  000303  67                 	db	104	;'h'
  1272  000304  68                 	db	116	;'t'
  1273  000305  74                 	db	58	;':'
  1274  000306  3A                 	db	32
  1275  000307  20                 	db	37
  1276  000308  25                 	db	117	;'u'
  1277  000309  75                 	db	0
  1278  00030A  00                 	
  1279                           STR_1:
  1280  00030B                     	db	76	;'L'
  1281  00030B  4C                 	db	101	;'e'
  1282  00030C  65                 	db	102	;'f'
  1283  00030D  66                 	db	116	;'t'
  1284  00030E  74                 	db	58	;':'
  1285  00030F  3A                 	db	32
  1286  000310  20                 	db	37
  1287  000311  25                 	db	117	;'u'
  1288  000312  75                 	db	0
  1289  000313  00                 ; #config settings
  1290                           global __CFG_OSC$IRCIO
  1291                           __CFG_OSC$IRCIO equ 0x0
  1292  0000                     global __CFG_MCLRE$OFF
  1293                           __CFG_MCLRE$OFF equ 0x0
  1294  0000                     global __CFG_LVP$OFF
  1295                           __CFG_LVP$OFF equ 0x0
  1296  0000                     	file	"/tmp/xcDxPu5sn"
  1297                           	line	#
  1298                           psect	cinit,class=CODE,delta=1,reloc=2
  1299                           global __pcinit
  1300                           __pcinit:
  1301  000F0A                     global start_initialization
  1302                           start_initialization:
  1303  000F0A                     
  1304                           global __initialization
  1305                           __initialization:
  1306  000F0A                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
  1307                           global __pbssCOMRAM
  1308                           __pbssCOMRAM:
  1309  00005E                     _flags:
  1310  00005E                            ds      2
  1311  00005E                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
  1312                           global __pbssBANK0
  1313                           __pbssBANK0:
  1314  000060                     _nout:
  1315  000060                            ds      2
  1316  000060                     _width:
  1317  000062                            ds      2
  1318  000062                     _prec:
  1319  000064                            ds      2
  1320  000064                     _dbuf:
  1321  000066                            ds      32
  1322  000066                     	file	"/tmp/xcDxPu5sn"
  1323                           	line	#
  1324                           psect	cinit
  1325                           ; Clear objects allocated to BANK0 (38 bytes)
  1326                           	global __pbssBANK0
  1327                           lfsr	0,__pbssBANK0
  1328  000F0A  EE00  F060         movlw	38
  1329  000F0E  0E26               clear_0:
  1330  000F10                     clrf	postinc0,c
  1331  000F10  6AEE               decf	wreg
  1332  000F12  06E8               bnz	clear_0
  1333  000F14  E1FD               ; Clear objects allocated to COMRAM (2 bytes)
  1334                           	global __pbssCOMRAM
  1335                           clrf	(__pbssCOMRAM+1)&0xffh,c
  1336  000F16  6A5F               clrf	(__pbssCOMRAM+0)&0xffh,c
  1337  000F18  6A5E               psect cinit,class=CODE,delta=1
  1338                           global end_of_initialization,__end_of__initialization
  1339                           
  1340                           ;End of C runtime variable initialization code
  1341                           
  1342                           end_of_initialization:
  1343  000F1A                     __end_of__initialization:
  1344  000F1A                     	GLOBAL	__Lsmallconst
  1345                           	movlw	low highword(__Lsmallconst)
  1346  000F1A  0E00               	movwf	tblptru
  1347  000F1C  6EF8               	movlw	high(__Lsmallconst)
  1348  000F1E  0E03               	movwf	tblptrh
  1349  000F20  6EF7               movlb 0
  1350  000F22  0100               goto _main	;jump to C main() function
  1351  000F24  EFB1  F005         psect	cstackBANK0,class=BANK0,space=1,noexec
  1352                           global __pcstackBANK0
  1353                           __pcstackBANK0:
  1354  000086                     	global	sprintf@ret
  1355                           sprintf@ret:	; 2 bytes @ 0x0
  1356  000086                     	ds   2
  1357  000086                     	global	sprintf@ap
  1358                           sprintf@ap:	; 2 bytes @ 0x2
  1359  000088                     	ds   2
  1360  000088                     	global	sprintf@f
  1361                           sprintf@f:	; 6 bytes @ 0x4
  1362  00008A                     	ds   6
  1363  00008A                     	global	main@buf
  1364                           main@buf:	; 16 bytes @ 0xA
  1365  000090                     	ds   16
  1366  000090                     	global	main@values
  1367                           main@values:	; 4 bytes @ 0x1A
  1368  0000A0                     	ds   4
  1369  0000A0                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  1370                           global __pcstackCOMRAM
  1371                           __pcstackCOMRAM:
  1372  000001                     ?_init_capture:	; 1 bytes @ 0x0
  1373  000001                     ??_init_capture:	; 1 bytes @ 0x0
  1374  000001                     ?_read_IR:	; 1 bytes @ 0x0
  1375  000001                     ?_putch:	; 1 bytes @ 0x0
  1376  000001                     ??_putch:	; 1 bytes @ 0x0
  1377  000001                     ?_E_TOG:	; 1 bytes @ 0x0
  1378  000001                     ??_E_TOG:	; 1 bytes @ 0x0
  1379  000001                     ?_LCD_out:	; 1 bytes @ 0x0
  1380  000001                     ??_LCD_out:	; 1 bytes @ 0x0
  1381  000001                     ?_LCD_init:	; 1 bytes @ 0x0
  1382  000001                     ?_LCD_line:	; 1 bytes @ 0x0
  1383  000001                     ?_main:	; 1 bytes @ 0x0
  1384  000001                     ?_fputc:	; 2 bytes @ 0x0
  1385  000001                     	global	?_strlen
  1386                           ?_strlen:	; 2 bytes @ 0x0
  1387  000001                     	global	?___lodiv
  1388                           ?___lodiv:	; 8 bytes @ 0x0
  1389  000001                     	global	?___lomod
  1390                           ?___lomod:	; 8 bytes @ 0x0
  1391  000001                     putch@c:	; 1 bytes @ 0x0
  1392  000001                     	global	read_IR@values
  1393                           read_IR@values:	; 2 bytes @ 0x0
  1394  000001                     	global	fputc@c
  1395                           fputc@c:	; 2 bytes @ 0x0
  1396  000001                     	global	strlen@s
  1397                           strlen@s:	; 2 bytes @ 0x0
  1398  000001                     	global	___lodiv@dividend
  1399                           ___lodiv@dividend:	; 8 bytes @ 0x0
  1400  000001                     	global	___lomod@dividend
  1401                           ___lomod@dividend:	; 8 bytes @ 0x0
  1402  000001                     	ds   1
  1403  000001                     	global	LCD_out@number
  1404                           LCD_out@number:	; 1 bytes @ 0x1
  1405  000002                     	ds   1
  1406  000002                     ??_read_IR:	; 1 bytes @ 0x2
  1407  000003                     ??_strlen:	; 1 bytes @ 0x2
  1408  000003                     ?_LCD_send:	; 1 bytes @ 0x2
  1409  000003                     	global	LCD_send@type
  1410                           LCD_send@type:	; 1 bytes @ 0x2
  1411  000003                     	global	fputc@fp
  1412                           fputc@fp:	; 2 bytes @ 0x2
  1413  000003                     	ds   1
  1414  000003                     ??_LCD_send:	; 1 bytes @ 0x3
  1415  000004                     	global	LCD_send@Byte
  1416                           LCD_send@Byte:	; 1 bytes @ 0x3
  1417  000004                     	ds   1
  1418  000004                     ??_fputc:	; 1 bytes @ 0x4
  1419  000005                     ??_LCD_init:	; 1 bytes @ 0x4
  1420  000005                     ??_LCD_line:	; 1 bytes @ 0x4
  1421  000005                     ?_LCD_string:	; 1 bytes @ 0x4
  1422  000005                     	global	LCD_line@line
  1423                           LCD_line@line:	; 1 bytes @ 0x4
  1424  000005                     	global	LCD_string@string
  1425                           LCD_string@string:	; 2 bytes @ 0x4
  1426  000005                     	global	strlen@a
  1427                           strlen@a:	; 2 bytes @ 0x4
  1428  000005                     	ds   2
  1429  000005                     ??_LCD_string:	; 1 bytes @ 0x6
  1430  000007                     	ds   2
  1431  000007                     	global	___lodiv@divisor
  1432                           ___lodiv@divisor:	; 8 bytes @ 0x8
  1433  000009                     	global	___lomod@divisor
  1434                           ___lomod@divisor:	; 8 bytes @ 0x8
  1435  000009                     	ds   1
  1436  000009                     ?_fputs:	; 2 bytes @ 0x9
  1437  00000A                     	global	fputs@s
  1438                           fputs@s:	; 2 bytes @ 0x9
  1439  00000A                     	ds   2
  1440  00000A                     	global	fputs@fp
  1441                           fputs@fp:	; 2 bytes @ 0xB
  1442  00000C                     	ds   2
  1443  00000C                     ??_fputs:	; 1 bytes @ 0xD
  1444  00000E                     	global	fputs@c
  1445                           fputs@c:	; 1 bytes @ 0xD
  1446  00000E                     	ds   1
  1447  00000E                     	global	fputs@i
  1448                           fputs@i:	; 2 bytes @ 0xE
  1449  00000F                     	ds   2
  1450  00000F                     ??___lodiv:	; 1 bytes @ 0x10
  1451  000011                     ??___lomod:	; 1 bytes @ 0x10
  1452  000011                     	global	?_pad
  1453                           ?_pad:	; 2 bytes @ 0x10
  1454  000011                     	global	___lomod@counter
  1455                           ___lomod@counter:	; 1 bytes @ 0x10
  1456  000011                     	global	pad@fp
  1457                           pad@fp:	; 2 bytes @ 0x10
  1458  000011                     	global	___lodiv@quotient
  1459                           ___lodiv@quotient:	; 8 bytes @ 0x10
  1460  000011                     	ds   2
  1461  000011                     	global	pad@buf
  1462                           pad@buf:	; 2 bytes @ 0x12
  1463  000013                     	ds   2
  1464  000013                     	global	pad@p
  1465                           pad@p:	; 2 bytes @ 0x14
  1466  000015                     	ds   2
  1467  000015                     ??_pad:	; 1 bytes @ 0x16
  1468  000017                     	ds   1
  1469  000017                     	global	pad@i
  1470                           pad@i:	; 2 bytes @ 0x17
  1471  000018                     	ds   1
  1472  000018                     	global	___lodiv@counter
  1473                           ___lodiv@counter:	; 1 bytes @ 0x18
  1474  000019                     	ds   1
  1475  000019                     	global	pad@w
  1476                           pad@w:	; 2 bytes @ 0x19
  1477  00001A                     	ds   2
  1478  00001A                     	global	?_utoa
  1479                           ?_utoa:	; 2 bytes @ 0x1B
  1480  00001C                     	global	utoa@fp
  1481                           utoa@fp:	; 2 bytes @ 0x1B
  1482  00001C                     	ds   2
  1483  00001C                     	global	utoa@d
  1484                           utoa@d:	; 8 bytes @ 0x1D
  1485  00001E                     	ds   8
  1486  00001E                     ??_utoa:	; 1 bytes @ 0x25
  1487  000026                     	ds   8
  1488  000026                     	global	utoa@p
  1489                           utoa@p:	; 2 bytes @ 0x2D
  1490  00002E                     	ds   2
  1491  00002E                     	global	utoa@w
  1492                           utoa@w:	; 2 bytes @ 0x2F
  1493  000030                     	ds   2
  1494  000030                     	global	utoa@n
  1495                           utoa@n:	; 8 bytes @ 0x31
  1496  000032                     	ds   8
  1497  000032                     	global	utoa@i
  1498                           utoa@i:	; 2 bytes @ 0x39
  1499  00003A                     	ds   2
  1500  00003A                     	global	?_vfpfcnvrt
  1501                           ?_vfpfcnvrt:	; 2 bytes @ 0x3B
  1502  00003C                     	global	vfpfcnvrt@fp
  1503                           vfpfcnvrt@fp:	; 2 bytes @ 0x3B
  1504  00003C                     	ds   2
  1505  00003C                     	global	vfpfcnvrt@fmt
  1506                           vfpfcnvrt@fmt:	; 2 bytes @ 0x3D
  1507  00003E                     	ds   2
  1508  00003E                     	global	vfpfcnvrt@ap
  1509                           vfpfcnvrt@ap:	; 2 bytes @ 0x3F
  1510  000040                     	ds   2
  1511  000040                     ??_vfpfcnvrt:	; 1 bytes @ 0x41
  1512  000042                     	ds   4
  1513  000042                     	global	vfpfcnvrt@llu
  1514                           vfpfcnvrt@llu:	; 8 bytes @ 0x45
  1515  000046                     	ds   8
  1516  000046                     	global	?_vfprintf
  1517                           ?_vfprintf:	; 2 bytes @ 0x4D
  1518  00004E                     	global	vfprintf@fp
  1519                           vfprintf@fp:	; 2 bytes @ 0x4D
  1520  00004E                     	ds   2
  1521  00004E                     	global	vfprintf@fmt
  1522                           vfprintf@fmt:	; 2 bytes @ 0x4F
  1523  000050                     	ds   2
  1524  000050                     	global	vfprintf@ap
  1525                           vfprintf@ap:	; 2 bytes @ 0x51
  1526  000052                     	ds   2
  1527  000052                     ??_vfprintf:	; 1 bytes @ 0x53
  1528  000054                     	global	vfprintf@cfmt
  1529                           vfprintf@cfmt:	; 2 bytes @ 0x53
  1530  000054                     	ds   2
  1531  000054                     	global	?_sprintf
  1532                           ?_sprintf:	; 2 bytes @ 0x55
  1533  000056                     	global	sprintf@s
  1534                           sprintf@s:	; 2 bytes @ 0x55
  1535  000056                     	ds   2
  1536  000056                     	global	sprintf@fmt
  1537                           sprintf@fmt:	; 2 bytes @ 0x57
  1538  000058                     	ds   4
  1539  000058                     ??_sprintf:	; 1 bytes @ 0x5B
  1540  00005C                     ??_main:	; 1 bytes @ 0x5B
  1541  00005C                     	ds   2
  1542  00005C                     ;!
  1543                           ;!Data Sizes:
  1544                           ;!    Strings     19
  1545                           ;!    Constant    0
  1546                           ;!    Data        0
  1547                           ;!    BSS         40
  1548                           ;!    Persistent  0
  1549                           ;!    Stack       0
  1550                           ;!
  1551                           ;!Auto Spaces:
  1552                           ;!    Space          Size  Autos    Used
  1553                           ;!    COMRAM           95     93      95
  1554                           ;!    BANK0           160     30      68
  1555                           ;!    BANK1           256      0       0
  1556                           ;!    BANK2           256      0       0
  1557                           
  1558                           ;!
  1559                           ;!Pointer List with Targets:
  1560                           ;!
  1561                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 32
  1562                           ;!		 -> dbuf(BANK0[32]), 
  1563                           ;!
  1564                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 32
  1565                           ;!		 -> dbuf(BANK0[32]), 
  1566                           ;!
  1567                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
  1568                           ;!		 -> STR_2(CODE[10]), STR_1(CODE[9]), 
  1569                           ;!
  1570                           ;!    sprintf@s	PTR unsigned char  size(2) Largest target is 16
  1571                           ;!		 -> main@buf(BANK0[16]), 
  1572                           ;!
  1573                           ;!    sprintf@ap	PTR void [1] size(2) Largest target is 2
  1574                           ;!		 -> ?_sprintf(COMRAM[2]), 
  1575                           ;!
  1576                           ;!    f.buffer	PTR unsigned char  size(2) Largest target is 16
  1577                           ;!		 -> main@buf(BANK0[16]), 
  1578                           ;!
  1579                           ;!    fputs@s	PTR const unsigned char  size(2) Largest target is 32
  1580                           ;!		 -> dbuf(BANK0[32]), 
  1581                           ;!
  1582                           ;!    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1583                           ;!		 -> sprintf@f(BANK0[6]), 
  1584                           ;!
  1585                           ;!    S966_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
  1586                           ;!		 -> main@buf(BANK0[16]), 
  1587                           ;!
  1588                           ;!    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
  1589                           ;!		 -> main@buf(BANK0[16]), 
  1590                           ;!
  1591                           ;!    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1592                           ;!		 -> sprintf@f(BANK0[6]), 
  1593                           ;!
  1594                           ;!    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
  1595                           ;!		 -> sprintf@ap(BANK0[2]), 
  1596                           ;!
  1597                           ;!    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1598                           ;!		 -> sprintf@f(BANK0[6]), 
  1599                           ;!
  1600                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
  1601                           ;!		 -> STR_2(CODE[10]), STR_1(CODE[9]), 
  1602                           ;!
  1603                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
  1604                           ;!		 -> STR_2(CODE[10]), STR_1(CODE[9]), 
  1605                           ;!
  1606                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1607                           ;!		 -> sprintf@f(BANK0[6]), 
  1608                           ;!
  1609                           ;!    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
  1610                           ;!		 -> sprintf@ap(BANK0[2]), 
  1611                           ;!
  1612                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
  1613                           ;!		 -> vfprintf@cfmt(COMRAM[2]), 
  1614                           ;!
  1615                           ;!    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1616                           ;!		 -> sprintf@f(BANK0[6]), 
  1617                           ;!
  1618                           ;!    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1619                           ;!		 -> sprintf@f(BANK0[6]), 
  1620                           ;!
  1621                           ;!    pad@buf	PTR unsigned char  size(2) Largest target is 32
  1622                           ;!		 -> dbuf(BANK0[32]), 
  1623                           ;!
  1624                           ;!    read_IR@values	PTR struct Sensor_ir size(2) Largest target is 4
  1625                           ;!		 -> main@values(BANK0[4]), 
  1626                           ;!
  1627                           ;!    LCD_string@string	PTR unsigned char  size(2) Largest target is 16
  1628                           ;!		 -> main@buf(BANK0[16]), 
  1629                           ;!
  1630                           
  1631                           
  1632                           ;!
  1633                           ;!Critical Paths under _main in COMRAM
  1634                           ;!
  1635                           ;!    _main->_sprintf
  1636                           ;!    _sprintf->_vfprintf
  1637                           ;!    _vfprintf->_vfpfcnvrt
  1638                           ;!    _vfpfcnvrt->_utoa
  1639                           ;!    _utoa->_pad
  1640                           ;!    _pad->_fputs
  1641                           ;!    _fputs->_fputc
  1642                           ;!    _LCD_string->_LCD_send
  1643                           ;!    _LCD_line->_LCD_send
  1644                           ;!    _LCD_init->_LCD_send
  1645                           ;!    _LCD_send->_LCD_out
  1646                           ;!
  1647                           ;!Critical Paths under _main in BANK0
  1648                           ;!
  1649                           ;!    _main->_sprintf
  1650                           ;!
  1651                           ;!Critical Paths under _main in BANK1
  1652                           ;!
  1653                           ;!    None.
  1654                           ;!
  1655                           ;!Critical Paths under _main in BANK2
  1656                           ;!
  1657                           ;!    None.
  1658                           
  1659 ;;
  1660 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1661 ;;
  1662                           
  1663                           ;!
  1664                           ;!Call Graph Tables:
  1665                           ;!
  1666                           ;! ---------------------------------------------------------------------------------
  1667                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1668                           ;! ---------------------------------------------------------------------------------
  1669                           ;! (0) _main                                                22    22      0   10256
  1670                           ;!                                             91 COMRAM     2     2      0
  1671                           ;!                                             10 BANK0     20    20      0
  1672                           ;!                           _LCD_init
  1673                           ;!                           _LCD_line
  1674                           ;!                           _LCD_send
  1675                           ;!                         _LCD_string
  1676                           ;!                       _init_capture
  1677                           ;!                            _read_IR
  1678                           ;!                            _sprintf
  1679                           ;! ---------------------------------------------------------------------------------
  1680                           ;! (1) _sprintf                                             16    10      6    5986
  1681                           ;!                                             85 COMRAM     6     0      6
  1682                           ;!                                              0 BANK0     10    10      0
  1683                           ;!                           _vfprintf
  1684                           ;! ---------------------------------------------------------------------------------
  1685                           ;! (2) _vfprintf                                             8     2      6    5483
  1686                           ;!                                             77 COMRAM     8     2      6
  1687                           ;!                          _vfpfcnvrt
  1688                           ;! ---------------------------------------------------------------------------------
  1689                           ;! (3) _vfpfcnvrt                                           44    38      6    5130
  1690                           ;!                                             59 COMRAM    18    12      6
  1691                           ;!                              _fputc
  1692                           ;!                               _utoa
  1693                           ;! ---------------------------------------------------------------------------------
  1694                           ;! (4) _utoa                                                32    22     10    3759
  1695                           ;!                                             27 COMRAM    32    22     10
  1696                           ;!                            ___lodiv
  1697                           ;!                            ___lomod
  1698                           ;!                                _pad
  1699                           ;! ---------------------------------------------------------------------------------
  1700                           ;! (5) _pad                                                 11     5      6    2709
  1701                           ;!                                             16 COMRAM    11     5      6
  1702                           ;!                              _fputc
  1703                           ;!                              _fputs
  1704                           ;!                             _strlen
  1705                           ;! ---------------------------------------------------------------------------------
  1706                           ;! (6) _strlen                                               6     4      2     166
  1707                           ;!                                              0 COMRAM     6     4      2
  1708                           ;! ---------------------------------------------------------------------------------
  1709                           ;! (6) _fputs                                                7     3      4    1235
  1710                           ;!                                              9 COMRAM     7     3      4
  1711                           ;!                              _fputc
  1712                           ;! ---------------------------------------------------------------------------------
  1713                           ;! (7) _fputc                                                9     5      4     834
  1714                           ;!                                              0 COMRAM     9     5      4
  1715                           ;!                              _putch
  1716                           ;! ---------------------------------------------------------------------------------
  1717                           ;! (8) _putch                                                1     1      0       0
  1718                           ;! ---------------------------------------------------------------------------------
  1719                           ;! (5) ___lomod                                             17     1     16     311
  1720                           ;!                                              0 COMRAM    17     1     16
  1721                           ;! ---------------------------------------------------------------------------------
  1722                           ;! (5) ___lodiv                                             25     9     16     314
  1723                           ;!                                              0 COMRAM    25     9     16
  1724                           ;! ---------------------------------------------------------------------------------
  1725                           ;! (1) _read_IR                                              4     2      2     120
  1726                           ;!                                              0 COMRAM     4     2      2
  1727                           ;! ---------------------------------------------------------------------------------
  1728                           ;! (1) _init_capture                                         0     0      0       0
  1729                           ;! ---------------------------------------------------------------------------------
  1730                           ;! (1) _LCD_string                                           2     0      2    1111
  1731                           ;!                                              4 COMRAM     2     0      2
  1732                           ;!                           _LCD_send
  1733                           ;! ---------------------------------------------------------------------------------
  1734                           ;! (1) _LCD_line                                             1     1      0     958
  1735                           ;!                                              4 COMRAM     1     1      0
  1736                           ;!                           _LCD_send
  1737                           ;! ---------------------------------------------------------------------------------
  1738                           ;! (1) _LCD_init                                             1     1      0    1002
  1739                           ;!                                              4 COMRAM     1     1      0
  1740                           ;!                            _LCD_out
  1741                           ;!                           _LCD_send
  1742                           ;! ---------------------------------------------------------------------------------
  1743                           ;! (2) _LCD_send                                             2     1      1     914
  1744                           ;!                                              2 COMRAM     2     1      1
  1745                           ;!                            _LCD_out
  1746                           ;! ---------------------------------------------------------------------------------
  1747                           ;! (3) _LCD_out                                              2     2      0      88
  1748                           ;!                                              0 COMRAM     2     2      0
  1749                           ;!                              _E_TOG
  1750                           ;! ---------------------------------------------------------------------------------
  1751                           ;! (4) _E_TOG                                                0     0      0       0
  1752                           ;! ---------------------------------------------------------------------------------
  1753                           ;! Estimated maximum stack depth 8
  1754                           ;! ---------------------------------------------------------------------------------
  1755                           ;!
  1756                           ;! Call Graph Graphs:
  1757                           ;!
  1758                           ;! _main (ROOT)
  1759                           ;!   _LCD_init
  1760                           ;!     _LCD_out
  1761                           ;!       _E_TOG
  1762                           ;!     _LCD_send
  1763                           ;!       _LCD_out
  1764                           ;!         _E_TOG
  1765                           ;!   _LCD_line
  1766                           ;!     _LCD_send
  1767                           ;!       _LCD_out
  1768                           ;!         _E_TOG
  1769                           ;!   _LCD_send
  1770                           ;!     _LCD_out
  1771                           ;!       _E_TOG
  1772                           ;!   _LCD_string
  1773                           ;!     _LCD_send
  1774                           ;!       _LCD_out
  1775                           ;!         _E_TOG
  1776                           ;!   _init_capture
  1777                           ;!   _read_IR
  1778                           ;!   _sprintf
  1779                           ;!     _vfprintf
  1780                           ;!       _vfpfcnvrt
  1781                           ;!         _fputc
  1782                           ;!           _putch
  1783                           ;!         _utoa
  1784                           ;!           ___lodiv
  1785                           ;!           ___lomod
  1786                           ;!           _pad
  1787                           ;!             _fputc
  1788                           ;!               _putch
  1789                           ;!             _fputs
  1790                           ;!               _fputc
  1791                           ;!                 _putch
  1792                           ;!             _strlen
  1793                           ;!
  1794                           
  1795                           ;! Address spaces:
  1796                           
  1797                           ;!Name               Size   Autos  Total    Cost      Usage
  1798                           ;!BIGRAM             2FF      0       0      10        0.0%
  1799                           ;!EEDATA             100      0       0       0        0.0%
  1800                           ;!BITBANK2           100      0       0       8        0.0%
  1801                           ;!BANK2              100      0       0       9        0.0%
  1802                           ;!BITBANK1           100      0       0       6        0.0%
  1803                           ;!BANK1              100      0       0       7        0.0%
  1804                           ;!BITBANK0            A0      0       0       4        0.0%
  1805                           ;!BANK0               A0     1E      44       5       42.5%
  1806                           ;!BITCOMRAM           5F      0       0       0        0.0%
  1807                           ;!COMRAM              5F     5D      5F       1      100.0%
  1808                           ;!BITSFR               0      0       0     200        0.0%
  1809                           ;!SFR                  0      0       0     200        0.0%
  1810                           ;!STACK                0      0       0       2        0.0%
  1811                           ;!NULL                 0      0       0       0        0.0%
  1812                           ;!ABS                  0      0      A3       3        0.0%
  1813                           ;!DATA                 0      0      A3      11        0.0%
  1814                           ;!CODE                 0      0       0       0        0.0%
  1815                           
  1816                           	global	_main
  1817                           
  1818 ;; *************** function _main *****************
  1819 ;; Defined at:
  1820 ;;		line 21 in file "main.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  buf            16   10[BANK0 ] unsigned char [16]
  1825 ;;  values          4   26[BANK0 ] struct Sensor_ir
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1835 ;;      Params:         0       0       0       0
  1836 ;;      Locals:         0      20       0       0
  1837 ;;      Temps:          2       0       0       0
  1838 ;;      Totals:         2      20       0       0
  1839 ;;Total ram usage:       22 bytes
  1840 ;; Hardware stack levels required when called:    8
  1841 ;; This function calls:
  1842 ;;		_LCD_init
  1843 ;;		_LCD_line
  1844 ;;		_LCD_send
  1845 ;;		_LCD_string
  1846 ;;		_init_capture
  1847 ;;		_read_IR
  1848 ;;		_sprintf
  1849 ;; This function is called by:
  1850 ;;		Startup code after reset
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1854                           	file	"main.c"
  1855                           	line	21
  1856                           global __ptext0
  1857                           __ptext0:
  1858  000B62                     psect	text0
  1859                           	file	"main.c"
  1860                           	line	21
  1861                           	global	__size_of_main
  1862                           	__size_of_main	equ	__end_of_main-_main
  1863  0000                     	
  1864                           _main:
  1865  000B62                     ;incstack = 0
  1866                           	opt	stack 23
  1867                           	line	22
  1868                           	
  1869                           l1484:
  1870  000B62                     ;main.c: 22:     ANSEL0 = 0;
  1871                           	movlw	low(0)
  1872  000B62  0E00               	movwf	((c:4024)),c	;volatile
  1873  000B64  6EB8               	line	23
  1874                           ;main.c: 23:     ANSEL1 = 0;
  1875                           	movlw	low(0)
  1876  000B66  0E00               	movwf	((c:4025)),c	;volatile
  1877  000B68  6EB9               	line	24
  1878                           ;main.c: 24:     OSCCON = 0x72;
  1879                           	movlw	low(072h)
  1880  000B6A  0E72               	movwf	((c:4051)),c	;volatile
  1881  000B6C  6ED3               	line	25
  1882                           ;main.c: 25:     while (!OSCCONbits.IOFS);
  1883                           	goto	l82
  1884  000B6E  EFB9  F005         	
  1885                           l83:
  1886  000B72                     	
  1887                           l82:
  1888  000B72                     	btfss	((c:4051)),c,2	;volatile
  1889  000B72  A4D3               	goto	u671
  1890  000B74  EFBE  F005         	goto	u670
  1891  000B78  EFC0  F005         u671:
  1892  000B7C                     	goto	l82
  1893  000B7C  EFB9  F005         u670:
  1894  000B80                     	goto	l1486
  1895  000B80  EFC2  F005         	
  1896                           l84:
  1897  000B84                     	line	29
  1898                           	
  1899                           l1486:
  1900  000B84                     ;main.c: 29:     LCD_init();
  1901                           	call	_LCD_init	;wreg free
  1902  000B84  ECF2  F003         	line	30
  1903                           	
  1904                           l1488:
  1905  000B88                     ;main.c: 30:     init_capture();
  1906                           	call	_init_capture	;wreg free
  1907  000B88  EC94  F007         	goto	l1490
  1908  000B8C  EFC8  F005         	line	34
  1909                           ;main.c: 32:     struct Sensor_ir values;;main.c: 34:     while (1) {
  1910                           	
  1911                           l85:
  1912  000B90                     	line	35
  1913                           	
  1914                           l1490:
  1915  000B90                     ;main.c: 35:         read_IR(&values);
  1916                           		movlw	low(main@values)
  1917  000B90  0EA0               	movwf	((c:read_IR@values)),c
  1918  000B92  6E01               	movlw	high(main@values)
  1919  000B94  0E00               	movwf	((c:read_IR@values+1)),c
  1920  000B96  6E02               
  1921                           	call	_read_IR	;wreg free
  1922  000B98  ECD9  F006         	line	38
  1923                           	
  1924                           l1492:
  1925  000B9C                     ;main.c: 37:         char buf[16];;main.c: 38:         LCD_send(0b00000001, 0);
  1926                           	movlw	low(0)
  1927  000B9C  0E00               	movwf	((c:LCD_send@type)),c
  1928  000B9E  6E03               	movlw	(01h)&0ffh
  1929  000BA0  0E01               	
  1930                           	call	_LCD_send
  1931  000BA2  EC6F  F007         	line	39
  1932                           	
  1933                           l1494:
  1934  000BA6                     ;main.c: 39:         LCD_line(1);
  1935                           	movlw	(01h)&0ffh
  1936  000BA6  0E01               	
  1937                           	call	_LCD_line
  1938  000BA8  EC00  F007         	line	40
  1939                           	
  1940                           l1496:
  1941  000BAC                     ;main.c: 40:         sprintf(buf, "Left: %u", values.left);
  1942                           		movlw	low(main@buf)
  1943  000BAC  0E90               	movwf	((c:sprintf@s)),c
  1944  000BAE  6E56               	movlw	high(main@buf)
  1945  000BB0  0E00               	movwf	((c:sprintf@s+1)),c
  1946  000BB2  6E57               
  1947                           		movlw	low(STR_1)
  1948  000BB4  0E0B               	movwf	((c:sprintf@fmt)),c
  1949  000BB6  6E58               	movlw	high(STR_1)
  1950  000BB8  0E03               	movwf	((c:sprintf@fmt+1)),c
  1951  000BBA  6E59               
  1952                           	movff	(main@values),0+((c:?_sprintf)+04h)
  1953  000BBC  C0A0  F05A         	movff	(main@values+1),1+((c:?_sprintf)+04h)
  1954  000BC0  C0A1  F05B         	call	_sprintf	;wreg free
  1955  000BC4  EC81  F006         	line	41
  1956                           	
  1957                           l1498:
  1958  000BC8                     ;main.c: 41:         LCD_string(buf);
  1959                           		movlw	low(main@buf)
  1960  000BC8  0E90               	movwf	((c:LCD_string@string)),c
  1961  000BCA  6E05               	movlw	high(main@buf)
  1962  000BCC  0E00               	movwf	((c:LCD_string@string+1)),c
  1963  000BCE  6E06               
  1964                           	call	_LCD_string	;wreg free
  1965  000BD0  EC4D  F007         	line	42
  1966                           	
  1967                           l1500:
  1968  000BD4                     ;main.c: 42:         LCD_line(2);
  1969                           	movlw	(02h)&0ffh
  1970  000BD4  0E02               	
  1971                           	call	_LCD_line
  1972  000BD6  EC00  F007         	line	43
  1973                           	
  1974                           l1502:
  1975  000BDA                     ;main.c: 43:         sprintf(buf, "Right: %u", values.right);
  1976                           		movlw	low(main@buf)
  1977  000BDA  0E90               	movwf	((c:sprintf@s)),c
  1978  000BDC  6E56               	movlw	high(main@buf)
  1979  000BDE  0E00               	movwf	((c:sprintf@s+1)),c
  1980  000BE0  6E57               
  1981                           		movlw	low(STR_2)
  1982  000BE2  0E01               	movwf	((c:sprintf@fmt)),c
  1983  000BE4  6E58               	movlw	high(STR_2)
  1984  000BE6  0E03               	movwf	((c:sprintf@fmt+1)),c
  1985  000BE8  6E59               
  1986                           	movff	0+(main@values+02h),0+((c:?_sprintf)+04h)
  1987  000BEA  C0A2  F05A         	movff	1+(main@values+02h),1+((c:?_sprintf)+04h)
  1988  000BEE  C0A3  F05B         	call	_sprintf	;wreg free
  1989  000BF2  EC81  F006         	line	44
  1990                           	
  1991                           l1504:
  1992  000BF6                     ;main.c: 44:         LCD_string(buf);
  1993                           		movlw	low(main@buf)
  1994  000BF6  0E90               	movwf	((c:LCD_string@string)),c
  1995  000BF8  6E05               	movlw	high(main@buf)
  1996  000BFA  0E00               	movwf	((c:LCD_string@string+1)),c
  1997  000BFC  6E06               
  1998                           	call	_LCD_string	;wreg free
  1999  000BFE  EC4D  F007         	line	49
  2000                           	
  2001                           l1506:
  2002  000C02                     ;main.c: 49:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2003                           	opt asmopt_push
  2004                           opt asmopt_off
  2005                           movlw  6
  2006  000C02  0E06               movwf	(??_main+0+0+1)&0ffh,c,f
  2007  000C04  6E5D               movlw	19
  2008  000C06  0E13               movwf	(??_main+0+0)&0ffh,c,f
  2009  000C08  6E5C               	movlw	174
  2010  000C0A  0EAE               u687:
  2011  000C0C                     decfsz	wreg,f
  2012  000C0C  2EE8               	bra	u687
  2013  000C0E  D7FE               	decfsz	(??_main+0+0)&0ffh,c,f
  2014  000C10  2E5C               	bra	u687
  2015  000C12  D7FC               	decfsz	(??_main+0+0+1)&0ffh,c,f
  2016  000C14  2E5D               	bra	u687
  2017  000C16  D7FA               opt asmopt_pop
  2018                           
  2019                           	goto	l1490
  2020  000C18  EFC8  F005         	line	50
  2021                           ;main.c: 50:     }
  2022                           	
  2023                           l86:
  2024  000C1C                     	goto	l1490
  2025  000C1C  EFC8  F005         	
  2026                           l87:
  2027  000C20                     	line	53
  2028                           	
  2029                           l88:
  2030  000C20                     	global	start
  2031                           	goto	start
  2032  000C20  EF00  F000         	opt stack 0
  2033                           GLOBAL	__end_of_main
  2034                           	__end_of_main:
  2035  000C24                     	signat	_main,89
  2036                           	global	_sprintf
  2037                           
  2038 ;; *************** function _sprintf *****************
  2039 ;; Defined at:
  2040 ;;		line 9 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_sprintf.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  s               2   85[COMRAM] PTR unsigned char 
  2043 ;;		 -> main@buf(16), 
  2044 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  2045 ;;		 -> STR_2(10), STR_1(9), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  f               6    4[BANK0 ] struct _IO_FILE
  2048 ;;  ap              2    2[BANK0 ] PTR void [1]
  2049 ;;		 -> ?_sprintf(2), 
  2050 ;;  ret             2    0[BANK0 ] int 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  2   85[COMRAM] int 
  2053 ;; Registers used:
  2054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2060 ;;      Params:         6       0       0       0
  2061 ;;      Locals:         0      10       0       0
  2062 ;;      Temps:          0       0       0       0
  2063 ;;      Totals:         6      10       0       0
  2064 ;;Total ram usage:       16 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    7
  2067 ;; This function calls:
  2068 ;;		_vfprintf
  2069 ;; This function is called by:
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           psect	text1,class=CODE,space=0,reloc=2,group=2
  2074                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_sprintf.c"
  2075                           	line	9
  2076                           global __ptext1
  2077                           __ptext1:
  2078  000D02                     psect	text1
  2079                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_sprintf.c"
  2080                           	line	9
  2081                           	global	__size_of_sprintf
  2082                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2083  0000                     	
  2084                           _sprintf:
  2085  000D02                     ;incstack = 0
  2086                           	opt	stack 23
  2087                           	line	15
  2088                           	
  2089                           l1468:
  2090  000D02                     		movlw	low(?_sprintf+04h)
  2091  000D02  0E5A               	movlb	0	; () banked
  2092  000D04  0100               	movwf	((sprintf@ap))&0ffh
  2093  000D06  6F88               	movlw	high(?_sprintf+04h)
  2094  000D08  0E00               	movwf	((sprintf@ap+1))&0ffh
  2095  000D0A  6F89               
  2096                           	line	16
  2097                           		movff	(c:sprintf@s),(sprintf@f)
  2098  000D0C  C056  F08A         	movff	(c:sprintf@s+1),(sprintf@f+1)
  2099  000D10  C057  F08B         
  2100                           	line	17
  2101                           	
  2102                           l1470:; BSR set to: 0
  2103  000D14                     
  2104                           	movlw	high(0)
  2105  000D14  0E00               	movwf	(1+(sprintf@f+02h))&0ffh
  2106  000D16  6F8D               	movlw	low(0)
  2107  000D18  0E00               	movwf	(0+(sprintf@f+02h))&0ffh
  2108  000D1A  6F8C               	line	18
  2109                           	
  2110                           l1472:; BSR set to: 0
  2111  000D1C                     
  2112                           	movlw	high(0)
  2113  000D1C  0E00               	movwf	(1+(sprintf@f+04h))&0ffh
  2114  000D1E  6F8F               	movlw	low(0)
  2115  000D20  0E00               	movwf	(0+(sprintf@f+04h))&0ffh
  2116  000D22  6F8E               	line	19
  2117                           	
  2118                           l1474:; BSR set to: 0
  2119  000D24                     
  2120                           		movlw	low(sprintf@f)
  2121  000D24  0E8A               	movwf	((c:vfprintf@fp)),c
  2122  000D26  6E4E               	movlw	high(sprintf@f)
  2123  000D28  0E00               	movwf	((c:vfprintf@fp+1)),c
  2124  000D2A  6E4F               
  2125                           		movff	(c:sprintf@fmt),(c:vfprintf@fmt)
  2126  000D2C  C058  F050         	movff	(c:sprintf@fmt+1),(c:vfprintf@fmt+1)
  2127  000D30  C059  F051         
  2128                           		movlw	low(sprintf@ap)
  2129  000D34  0E88               	movwf	((c:vfprintf@ap)),c
  2130  000D36  6E52               	movlw	high(sprintf@ap)
  2131  000D38  0E00               	movwf	((c:vfprintf@ap+1)),c
  2132  000D3A  6E53               
  2133                           	call	_vfprintf	;wreg free
  2134  000D3C  EC4E  F006         	movff	0+?_vfprintf,(sprintf@ret)
  2135  000D40  C04E  F086         	movff	1+?_vfprintf,(sprintf@ret+1)
  2136  000D44  C04F  F087         	line	20
  2137                           	
  2138                           l1476:
  2139  000D48                     	movlb	0	; () banked
  2140  000D48  0100               	movf	(0+(sprintf@f+02h))&0ffh,w
  2141  000D4A  518C               	addwf	((c:sprintf@s)),c,w
  2142  000D4C  2456               	movwf	c:fsr2l
  2143  000D4E  6ED9               	movf	(1+(sprintf@f+02h))&0ffh,w
  2144  000D50  518D               	addwfc	((c:sprintf@s+1)),c,w
  2145  000D52  2057               	movwf	1+c:fsr2l
  2146  000D54  6EDA               	movlw	low(0)
  2147  000D56  0E00               	movwf	indf2
  2148  000D58  6EDF               	goto	l877
  2149  000D5A  EFAF  F006         	line	22
  2150                           	
  2151                           l1478:; BSR set to: 0
  2152  000D5E                     
  2153                           	line	23
  2154                           ;	Return value of _sprintf is never used
  2155                           	
  2156                           l877:; BSR set to: 0
  2157  000D5E                     
  2158                           	return	;funcret
  2159  000D5E  0012               	opt stack 0
  2160                           GLOBAL	__end_of_sprintf
  2161                           	__end_of_sprintf:
  2162  000D60                     	signat	_sprintf,4698
  2163                           	global	_vfprintf
  2164                           
  2165 ;; *************** function _vfprintf *****************
  2166 ;; Defined at:
  2167 ;;		line 1368 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
  2170 ;;		 -> sprintf@f(6), 
  2171 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
  2172 ;;		 -> STR_2(10), STR_1(9), 
  2173 ;;  ap              2   81[COMRAM] PTR PTR void 
  2174 ;;		 -> sprintf@ap(2), 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  2177 ;;		 -> STR_2(10), STR_1(9), 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  2   77[COMRAM] int 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2187 ;;      Params:         6       0       0       0
  2188 ;;      Locals:         2       0       0       0
  2189 ;;      Temps:          0       0       0       0
  2190 ;;      Totals:         8       0       0       0
  2191 ;;Total ram usage:        8 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    6
  2194 ;; This function calls:
  2195 ;;		_vfpfcnvrt
  2196 ;; This function is called by:
  2197 ;;		_sprintf
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           psect	text2,class=CODE,space=0,reloc=2,group=0
  2201                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2202                           	line	1368
  2203                           global __ptext2
  2204                           __ptext2:
  2205  000C9C                     psect	text2
  2206                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2207                           	line	1368
  2208                           	global	__size_of_vfprintf
  2209                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  2210  0000                     	
  2211                           _vfprintf:; BSR set to: 0
  2212  000C9C                     
  2213                           ;incstack = 0
  2214                           	opt	stack 23
  2215                           	line	1373
  2216                           	
  2217                           l1396:
  2218  000C9C                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
                                 ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.00/pic/sources/c99/
                                 common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt
                                 .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprn
                                 t.c: 1373:     cfmt = (char *)fmt;
  2219                           		movff	(c:vfprintf@fmt),(c:vfprintf@cfmt)
  2220  000C9C  C050  F054         	movff	(c:vfprintf@fmt+1),(c:vfprintf@cfmt+1)
  2221  000CA0  C051  F055         
  2222                           	line	1374
  2223                           	
  2224                           l1398:
  2225  000CA4                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;

  2226                           	movlw	high(0)
  2227  000CA4  0E00               	movlb	0	; () banked
  2228  000CA6  0100               	movwf	((_nout+1))&0ffh
  2229  000CA8  6F61               	movlw	low(0)
  2230  000CAA  0E00               	movwf	((_nout))&0ffh
  2231  000CAC  6F60               	line	1375
  2232                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
                                 mt) {
  2233                           	goto	l1402
  2234  000CAE  EF6E  F006         	
  2235                           l174:; BSR set to: 0
  2236  000CB2                     
  2237                           	line	1376
  2238                           	
  2239                           l1400:; BSR set to: 0
  2240  000CB2                     
  2241                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1376:         nout +
                                 = vfpfcnvrt(fp, &cfmt, ap);
  2242                           		movff	(c:vfprintf@fp),(c:vfpfcnvrt@fp)
  2243  000CB2  C04E  F03C         	movff	(c:vfprintf@fp+1),(c:vfpfcnvrt@fp+1)
  2244  000CB6  C04F  F03D         
  2245                           		movlw	low(vfprintf@cfmt)
  2246  000CBA  0E54               	movwf	((c:vfpfcnvrt@fmt)),c
  2247  000CBC  6E3E               	movlw	high(vfprintf@cfmt)
  2248  000CBE  0E00               	movwf	((c:vfpfcnvrt@fmt+1)),c
  2249  000CC0  6E3F               
  2250                           		movff	(c:vfprintf@ap),(c:vfpfcnvrt@ap)
  2251  000CC2  C052  F040         	movff	(c:vfprintf@ap+1),(c:vfpfcnvrt@ap+1)
  2252  000CC6  C053  F041         
  2253                           	call	_vfpfcnvrt	;wreg free
  2254  000CCA  EC9D  F002         	movf	(0+?_vfpfcnvrt),c,w
  2255  000CCE  503C               	movlb	0	; () banked
  2256  000CD0  0100               	addwf	((_nout))&0ffh
  2257  000CD2  2760               	movf	(1+?_vfpfcnvrt),c,w
  2258  000CD4  503D               	addwfc	((_nout+1))&0ffh
  2259  000CD6  2361               
  2260                           	goto	l1402
  2261  000CD8  EF6E  F006         	line	1377
  2262                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1377:     }
  2263                           	
  2264                           l173:; BSR set to: 0
  2265  000CDC                     
  2266                           	line	1375
  2267                           	
  2268                           l1402:; BSR set to: 0
  2269  000CDC                     
  2270                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
                                 mt) {
  2271                           	movff	(c:vfprintf@cfmt),tblptrl
  2272  000CDC  C054  FFF6         	movff	(c:vfprintf@cfmt+1),tblptrh
  2273  000CE0  C055  FFF7         	if	0	;tblptru may be non-zero
  2274  000CE4                     	clrf	tblptru
  2276  000CE4                     	if	0	;tblptru may be non-zero
  2277  000CE4                     	global __mediumconst
  2278                           movlw	low highword(__mediumconst)
  2281  000CE4                     	tblrd	*
  2282  000CE4  0008               	
  2283                           	movf	tablat,w
  2284  000CE6  50F5               	iorlw	0
  2285  000CE8  0900               	btfss	status,2
  2286  000CEA  A4D8               	goto	u631
  2287  000CEC  EF7A  F006         	goto	u630
  2288  000CF0  EF7C  F006         u631:
  2289  000CF4                     	goto	l1400
  2290  000CF4  EF59  F006         u630:
  2291  000CF8                     	
  2292                           l175:; BSR set to: 0
  2293  000CF8                     
  2294                           	line	1378
  2295                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1378:     return nou
                                 t;
  2296                           	movff	(_nout),(c:?_vfprintf)
  2297  000CF8  C060  F04E         	movff	(_nout+1),(c:?_vfprintf+1)
  2298  000CFC  C061  F04F         	line	1382
  2299                           	
  2300                           l176:; BSR set to: 0
  2301  000D00                     
  2302                           	return	;funcret
  2303  000D00  0012               	opt stack 0
  2304                           GLOBAL	__end_of_vfprintf
  2305                           	__end_of_vfprintf:
  2306  000D02                     	signat	_vfprintf,12410
  2307                           	global	_vfpfcnvrt
  2308                           
  2309 ;; *************** function _vfpfcnvrt *****************
  2310 ;; Defined at:
  2311 ;;		line 670 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  2314 ;;		 -> sprintf@f(6), 
  2315 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  2316 ;;		 -> vfprintf@cfmt(2), 
  2317 ;;  ap              2   63[COMRAM] PTR PTR void 
  2318 ;;		 -> sprintf@ap(2), 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  llu             8   69[COMRAM] unsigned long long 
  2321 ;;  ll              8    0        long long 
  2322 ;;  f               4    0        long long 
  2323 ;;  vp              3    0        PTR void 
  2324 ;;  ct              3    0        unsigned char [3]
  2325 ;;  cp              3    0        PTR unsigned char 
  2326 ;;  i               2    0        int 
  2327 ;;  done            2    0        int 
  2328 ;;  c               1    0        unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  2   59[COMRAM] int 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2338 ;;      Params:         6       0       0       0
  2339 ;;      Locals:         8       0       0       0
  2340 ;;      Temps:          4       0       0       0
  2341 ;;      Totals:        18       0       0       0
  2342 ;;Total ram usage:       18 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    5
  2345 ;; This function calls:
  2346 ;;		_fputc
  2347 ;;		_utoa
  2348 ;; This function is called by:
  2349 ;;		_vfprintf
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           psect	text3,class=CODE,space=0,reloc=2,group=0
  2353                           	line	670
  2354                           global __ptext3
  2355                           __ptext3:
  2356  00053A                     psect	text3
  2357                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2358                           	line	670
  2359                           	global	__size_of_vfpfcnvrt
  2360                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  2361  0000                     	
  2362                           _vfpfcnvrt:; BSR set to: 0
  2363  00053A                     
  2364                           ;incstack = 0
  2365                           	opt	stack 23
  2366                           	line	680
  2367                           	
  2368                           l1348:
  2369  00053A                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 670: static int vfpf
                                 cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.00/pic/sources/c
                                 99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/dopr
                                 nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.00/pic/sources/c99/com
                                 mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.00/pic/sources/c99/co
                                 mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.00/pic/sources/c99/
                                 common/doprnt.c: 675:     unsigned long long llu;
  2370                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2371  00053A  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2372  00053E  C03F  FFDA         	movff	postinc2,tblptrl
  2373  000542  CFDE FFF6          	movff	postdec2,tblptrh
  2374  000546  CFDD FFF7          	if	0	;tblptru may be non-zero
  2375  00054A                     	clrf	tblptru
  2377  00054A                     	if	0	;tblptru may be non-zero
  2378  00054A                     	global __mediumconst
  2379                           movlw	low highword(__mediumconst)
  2382  00054A                     	tblrd	*
  2383  00054A  0008               	
  2384                           	movf	tablat,w
  2385  00054C  50F5               	xorlw	025h
  2386  00054E  0A25               	btfss	status,2
  2387  000550  A4D8               	goto	u591
  2388  000552  EFAD  F002         	goto	u590
  2389  000556  EFAF  F002         u591:
  2390  00055A                     	goto	l1380
  2391  00055A  EF50  F003         u590:
  2392  00055E                     	line	681
  2393                           	
  2394                           l1350:
  2395  00055E                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
                                 
  2396                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2397  00055E  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2398  000562  C03F  FFDA         	incf	postinc2
  2399  000566  2ADE               	movlw	0
  2400  000568  0E00               	addwfc	postdec2
  2401  00056A  22DD               	line	683
  2402                           	
  2403                           l1352:
  2404  00056C                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 683:         flags =
                                  width = 0;
  2405                           	movlw	high(0)
  2406  00056C  0E00               	movlb	0	; () banked
  2407  00056E  0100               	movwf	((_width+1))&0ffh
  2408  000570  6F63               	movlw	low(0)
  2409  000572  0E00               	movwf	((_width))&0ffh
  2410  000574  6F62               	movff	(_width),(c:_flags)
  2411  000576  C062  F05E         	movff	(_width+1),(c:_flags+1)
  2412  00057A  C063  F05F         	line	684
  2413                           	
  2414                           l1354:; BSR set to: 0
  2415  00057E                     
  2416                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 684:         prec = 
                                 -1;
  2417                           	setf	((_prec))&0ffh
  2418  00057E  6964               	setf	((_prec+1))&0ffh
  2419  000580  6965               	line	1182
  2420                           	
  2421                           l1356:; BSR set to: 0
  2422  000582                     
  2423                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1182:         if (*f
                                 mt[0] == 'u') {
  2424                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2425  000582  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2426  000586  C03F  FFDA         	movff	postinc2,tblptrl
  2427  00058A  CFDE FFF6          	movff	postdec2,tblptrh
  2428  00058E  CFDD FFF7          	if	0	;tblptru may be non-zero
  2429  000592                     	clrf	tblptru
  2431  000592                     	if	0	;tblptru may be non-zero
  2432  000592                     	global __mediumconst
  2433                           movlw	low highword(__mediumconst)
  2436  000592                     	tblrd	*
  2437  000592  0008               	
  2438                           	movf	tablat,w
  2439  000594  50F5               	xorlw	075h
  2440  000596  0A75               	btfss	status,2
  2441  000598  A4D8               	goto	u601
  2442  00059A  EFD1  F002         	goto	u600
  2443  00059E  EFD3  F002         u601:
  2444  0005A2                     	goto	l1364
  2445  0005A2  EF16  F003         u600:
  2446  0005A6                     	line	1184
  2447                           	
  2448                           l1358:; BSR set to: 0
  2449  0005A6                     
  2450                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1184:             ++
                                 *fmt;
  2451                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2452  0005A6  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2453  0005AA  C03F  FFDA         	incf	postinc2
  2454  0005AE  2ADE               	movlw	0
  2455  0005B0  0E00               	addwfc	postdec2
  2456  0005B2  22DD               	line	1185
  2457                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1185:             ll
                                 u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
                                 ));
  2458                           	movff	(c:vfpfcnvrt@ap),fsr2l
  2459  0005B4  C040  FFD9         	movff	(c:vfpfcnvrt@ap+1),fsr2h
  2460  0005B8  C041  FFDA         	movff	indf2,??_vfpfcnvrt+0+0
  2461  0005BC  CFDF F042          	movlw	low(02h)
  2462  0005C0  0E02               	addwf	postinc2
  2463  0005C2  26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
  2464  0005C4  CFDF F043          	movlw	high(02h)
  2465  0005C8  0E00               	addwfc	postdec2
  2466  0005CA  22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
  2467  0005CC  C042  FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
  2468  0005D0  C043  FFDA         	movff	postinc2,??_vfpfcnvrt+2+0
  2469  0005D4  CFDE F044          	movff	postdec2,??_vfpfcnvrt+2+0+1
  2470  0005D8  CFDD F045          	movff	??_vfpfcnvrt+2+0,(c:vfpfcnvrt@llu)
  2471  0005DC  C044  F046         	movff	??_vfpfcnvrt+2+1,(c:vfpfcnvrt@llu+1)
  2472  0005E0  C045  F047         	clrf	((c:vfpfcnvrt@llu+2)),c
  2473  0005E4  6A48               	clrf	((c:vfpfcnvrt@llu+3)),c
  2474  0005E6  6A49               	clrf	((c:vfpfcnvrt@llu+4)),c
  2475  0005E8  6A4A               	clrf	((c:vfpfcnvrt@llu+5)),c
  2476  0005EA  6A4B               	clrf	((c:vfpfcnvrt@llu+6)),c
  2477  0005EC  6A4C               	clrf	((c:vfpfcnvrt@llu+7)),c
  2478  0005EE  6A4D               
  2479                           	line	1187
  2480                           	
  2481                           l1360:; BSR set to: 0
  2482  0005F0                     
  2483                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1187:             re
                                 turn utoa(fp, llu);
  2484                           		movff	(c:vfpfcnvrt@fp),(c:utoa@fp)
  2485  0005F0  C03C  F01C         	movff	(c:vfpfcnvrt@fp+1),(c:utoa@fp+1)
  2486  0005F4  C03D  F01D         
  2487                           	movff	(c:vfpfcnvrt@llu),(c:utoa@d)
  2488  0005F8  C046  F01E         	movff	(c:vfpfcnvrt@llu+1),(c:utoa@d+1)
  2489  0005FC  C047  F01F         	movff	(c:vfpfcnvrt@llu+2),(c:utoa@d+2)
  2490  000600  C048  F020         	movff	(c:vfpfcnvrt@llu+3),(c:utoa@d+3)
  2491  000604  C049  F021         	movff	(c:vfpfcnvrt@llu+4),(c:utoa@d+4)
  2492  000608  C04A  F022         	movff	(c:vfpfcnvrt@llu+5),(c:utoa@d+5)
  2493  00060C  C04B  F023         	movff	(c:vfpfcnvrt@llu+6),(c:utoa@d+6)
  2494  000610  C04C  F024         	movff	(c:vfpfcnvrt@llu+7),(c:utoa@d+7)
  2495  000614  C04D  F025         	call	_utoa	;wreg free
  2496  000618  EC8B  F001         	movff	0+?_utoa,(c:?_vfpfcnvrt)
  2497  00061C  C01C  F03C         	movff	1+?_utoa,(c:?_vfpfcnvrt+1)
  2498  000620  C01D  F03D         	goto	l169
  2499  000624  EF6F  F003         	
  2500                           l1362:
  2501  000628                     	goto	l169
  2502  000628  EF6F  F003         	line	1188
  2503                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1188:         }
  2504                           	
  2505                           l168:
  2506  00062C                     	line	1350
  2507                           	
  2508                           l1364:
  2509  00062C                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1350:         if ((*
                                 fmt)[0] == '%') {
  2510                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2511  00062C  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2512  000630  C03F  FFDA         	movff	postinc2,tblptrl
  2513  000634  CFDE FFF6          	movff	postdec2,tblptrh
  2514  000638  CFDD FFF7          	if	0	;tblptru may be non-zero
  2515  00063C                     	clrf	tblptru
  2517  00063C                     	if	0	;tblptru may be non-zero
  2518  00063C                     	global __mediumconst
  2519                           movlw	low highword(__mediumconst)
  2522  00063C                     	tblrd	*
  2523  00063C  0008               	
  2524                           	movf	tablat,w
  2525  00063E  50F5               	xorlw	025h
  2526  000640  0A25               	btfss	status,2
  2527  000642  A4D8               	goto	u611
  2528  000644  EF26  F003         	goto	u610
  2529  000648  EF28  F003         u611:
  2530  00064C                     	goto	l1374
  2531  00064C  EF41  F003         u610:
  2532  000650                     	line	1351
  2533                           	
  2534                           l1366:
  2535  000650                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1351:             ++
                                 *fmt;
  2536                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2537  000650  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2538  000654  C03F  FFDA         	incf	postinc2
  2539  000658  2ADE               	movlw	0
  2540  00065A  0E00               	addwfc	postdec2
  2541  00065C  22DD               	line	1352
  2542                           	
  2543                           l1368:
  2544  00065E                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1352:             fp
                                 utc((int)'%', fp);
  2545                           	movlw	high(025h)
  2546  00065E  0E00               	movwf	((c:fputc@c+1)),c
  2547  000660  6E02               	movlw	low(025h)
  2548  000662  0E25               	movwf	((c:fputc@c)),c
  2549  000664  6E01               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  2550  000666  C03C  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  2551  00066A  C03D  F004         
  2552                           	call	_fputc	;wreg free
  2553  00066E  ECD9  F004         	line	1353
  2554                           	
  2555                           l1370:
  2556  000672                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1353:             re
                                 turn 1;
  2557                           	movlw	high(01h)
  2558  000672  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  2559  000674  6E3D               	movlw	low(01h)
  2560  000676  0E01               	movwf	((c:?_vfpfcnvrt)),c
  2561  000678  6E3C               	goto	l169
  2562  00067A  EF6F  F003         	
  2563                           l1372:
  2564  00067E                     	goto	l169
  2565  00067E  EF6F  F003         	line	1354
  2566                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1354:         }
  2567                           	
  2568                           l170:
  2569  000682                     	line	1357
  2570                           	
  2571                           l1374:
  2572  000682                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
                                 ;
  2573                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2574  000682  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2575  000686  C03F  FFDA         	incf	postinc2
  2576  00068A  2ADE               	movlw	0
  2577  00068C  0E00               	addwfc	postdec2
  2578  00068E  22DD               	line	1358
  2579                           	
  2580                           l1376:
  2581  000690                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1358:         return
                                  0;
  2582                           	movlw	high(0)
  2583  000690  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  2584  000692  6E3D               	movlw	low(0)
  2585  000694  0E00               	movwf	((c:?_vfpfcnvrt)),c
  2586  000696  6E3C               	goto	l169
  2587  000698  EF6F  F003         	
  2588                           l1378:
  2589  00069C                     	goto	l169
  2590  00069C  EF6F  F003         	line	1359
  2591                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1359:     }
  2592                           	
  2593                           l167:
  2594  0006A0                     	line	1362
  2595                           	
  2596                           l1380:
  2597  0006A0                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
                                 )(*fmt)[0], fp);
  2598                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2599  0006A0  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2600  0006A4  C03F  FFDA         	movff	postinc2,tblptrl
  2601  0006A8  CFDE FFF6          	movff	postdec2,tblptrh
  2602  0006AC  CFDD FFF7          	if	0	;tblptru may be non-zero
  2603  0006B0                     	clrf	tblptru
  2605  0006B0                     	if	0	;tblptru may be non-zero
  2606  0006B0                     	global __mediumconst
  2607                           movlw	low highword(__mediumconst)
  2610  0006B0                     	tblrd	*
  2611  0006B0  0008               	
  2612                           	movf	tablat,w
  2613  0006B2  50F5               
  2614                           	movwf	((c:fputc@c)),c
  2615  0006B4  6E01               	clrf	((c:fputc@c+1)),c
  2616  0006B6  6A02               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  2617  0006B8  C03C  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  2618  0006BC  C03D  F004         
  2619                           	call	_fputc	;wreg free
  2620  0006C0  ECD9  F004         	line	1363
  2621                           	
  2622                           l1382:
  2623  0006C4                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2624                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2625  0006C4  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2626  0006C8  C03F  FFDA         	incf	postinc2
  2627  0006CC  2ADE               	movlw	0
  2628  0006CE  0E00               	addwfc	postdec2
  2629  0006D0  22DD               	line	1364
  2630                           	
  2631                           l1384:
  2632  0006D2                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1364:     return 1;

  2633                           	movlw	high(01h)
  2634  0006D2  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  2635  0006D4  6E3D               	movlw	low(01h)
  2636  0006D6  0E01               	movwf	((c:?_vfpfcnvrt)),c
  2637  0006D8  6E3C               	goto	l169
  2638  0006DA  EF6F  F003         	
  2639                           l1386:
  2640  0006DE                     	line	1365
  2641                           	
  2642                           l169:
  2643  0006DE                     	return	;funcret
  2644  0006DE  0012               	opt stack 0
  2645                           GLOBAL	__end_of_vfpfcnvrt
  2646                           	__end_of_vfpfcnvrt:
  2647  0006E0                     	signat	_vfpfcnvrt,12410
  2648                           	global	_utoa
  2649                           
  2650 ;; *************** function _utoa *****************
  2651 ;; Defined at:
  2652 ;;		line 593 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2655 ;;		 -> sprintf@f(6), 
  2656 ;;  d               8   29[COMRAM] unsigned long long 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  n               8   49[COMRAM] unsigned long long 
  2659 ;;  i               2   57[COMRAM] int 
  2660 ;;  w               2   47[COMRAM] int 
  2661 ;;  p               2   45[COMRAM] int 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  2   27[COMRAM] int 
  2664 ;; Registers used:
  2665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2671 ;;      Params:        10       0       0       0
  2672 ;;      Locals:        14       0       0       0
  2673 ;;      Temps:          8       0       0       0
  2674 ;;      Totals:        32       0       0       0
  2675 ;;Total ram usage:       32 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    4
  2678 ;; This function calls:
  2679 ;;		___lodiv
  2680 ;;		___lomod
  2681 ;;		_pad
  2682 ;; This function is called by:
  2683 ;;		_vfpfcnvrt
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           psect	text4,class=CODE,space=0,reloc=2,group=0
  2687                           	line	593
  2688                           global __ptext4
  2689                           __ptext4:
  2690  000316                     psect	text4
  2691                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  2692                           	line	593
  2693                           	global	__size_of_utoa
  2694                           	__size_of_utoa	equ	__end_of_utoa-_utoa
  2695  0000                     	
  2696                           _utoa:
  2697  000316                     ;incstack = 0
  2698                           	opt	stack 23
  2699                           	line	599
  2700                           	
  2701                           l1306:
  2702  000316                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 593: static int utoa
                                 (FILE *fp, unsigned long long d);/Applications/microchip/xc8/v2.00/pic/sources/c99/commo
                                 n/doprnt.c: 594: {;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 59
                                 5:     int i, p, w;;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 5
                                 96:     unsigned long long n;;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/d
                                 oprnt.c: 599:     if (!(prec < 0)) {
  2703                           	movlb	0	; () banked
  2704  000316  0100               	btfsc	((_prec+1))&0ffh,7
  2705  000318  BF65               	goto	u521
  2706  00031A  EF91  F001         	goto	u520
  2707  00031E  EF93  F001         
  2708                           u521:
  2709  000322                     	goto	l1310
  2710  000322  EF96  F001         u520:
  2711  000326                     	line	600
  2712                           	
  2713                           l1308:; BSR set to: 0
  2714  000326                     
  2715                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 600:         flags &
                                 = ~(1 << 1);
  2716                           	bcf	(0+(1/8)+(c:_flags)),c,(1)&7
  2717  000326  925E               	goto	l1310
  2718  000328  EF96  F001         	line	601
  2719                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 601:     }
  2720                           	
  2721                           l152:; BSR set to: 0
  2722  00032C                     
  2723                           	line	602
  2724                           	
  2725                           l1310:; BSR set to: 0
  2726  00032C                     
  2727                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 602:     p = (0 < pr
                                 ec) ? prec : 1;
  2728                           	btfsc	((_prec+1))&0ffh,7
  2729  00032C  BF65               	goto	u530
  2730  00032E  EFA3  F001         	movf	((_prec+1))&0ffh,w
  2731  000332  5165               	bnz	u531
  2732  000334  E106               	decf	((_prec))&0ffh,w
  2733  000336  0564               	btfsc	status,0
  2734  000338  B0D8               	goto	u531
  2735  00033A  EFA1  F001         	goto	u530
  2736  00033E  EFA3  F001         
  2737                           u531:
  2738  000342                     	goto	l154
  2739  000342  EFA9  F001         u530:
  2740  000346                     	
  2741                           l1312:; BSR set to: 0
  2742  000346                     
  2743                           	movlw	high(01h)
  2744  000346  0E00               	movwf	((c:utoa@p+1)),c
  2745  000348  6E2F               	movlw	low(01h)
  2746  00034A  0E01               	movwf	((c:utoa@p)),c
  2747  00034C  6E2E               	goto	l156
  2748  00034E  EFAD  F001         	
  2749                           l154:; BSR set to: 0
  2750  000352                     
  2751                           	movff	(_prec),(c:utoa@p)
  2752  000352  C064  F02E         	movff	(_prec+1),(c:utoa@p+1)
  2753  000356  C065  F02F         	
  2754                           l156:; BSR set to: 0
  2755  00035A                     
  2756                           	line	603
  2757                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 603:     w = width;

  2758                           	movff	(_width),(c:utoa@w)
  2759  00035A  C062  F030         	movff	(_width+1),(c:utoa@w+1)
  2760  00035E  C063  F031         	line	606
  2761                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 606:     n = d;
  2762                           	movff	(c:utoa@d),(c:utoa@n)
  2763  000362  C01E  F032         	movff	(c:utoa@d+1),(c:utoa@n+1)
  2764  000366  C01F  F033         	movff	(c:utoa@d+2),(c:utoa@n+2)
  2765  00036A  C020  F034         	movff	(c:utoa@d+3),(c:utoa@n+3)
  2766  00036E  C021  F035         	movff	(c:utoa@d+4),(c:utoa@n+4)
  2767  000372  C022  F036         	movff	(c:utoa@d+5),(c:utoa@n+5)
  2768  000376  C023  F037         	movff	(c:utoa@d+6),(c:utoa@n+6)
  2769  00037A  C024  F038         	movff	(c:utoa@d+7),(c:utoa@n+7)
  2770  00037E  C025  F039         	line	607
  2771                           	
  2772                           l1314:; BSR set to: 0
  2773  000382                     
  2774                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(
                                 dbuf) - 1;
  2775                           	movlw	high(01Fh)
  2776  000382  0E00               	movwf	((c:utoa@i+1)),c
  2777  000384  6E3B               	movlw	low(01Fh)
  2778  000386  0E1F               	movwf	((c:utoa@i)),c
  2779  000388  6E3A               	line	608
  2780                           	
  2781                           l1316:; BSR set to: 0
  2782  00038A                     
  2783                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '
                                 \0';
  2784                           	movlw	low(_dbuf)
  2785  00038A  0E66               	addwf	((c:utoa@i)),c,w
  2786  00038C  243A               	movwf	c:fsr2l
  2787  00038E  6ED9               	movlw	high(_dbuf)
  2788  000390  0E00               	addwfc	((c:utoa@i+1)),c,w
  2789  000392  203B               	movwf	1+c:fsr2l
  2790  000394  6EDA               	movlw	low(0)
  2791  000396  0E00               	movwf	indf2
  2792  000398  6EDF               	line	609
  2793                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 609:     while (i &&
                                  (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2794                           	goto	l1328
  2795  00039A  EF47  F002         	
  2796                           l158:; BSR set to: 0
  2797  00039E                     
  2798                           	line	610
  2799                           	
  2800                           l1318:
  2801  00039E                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 610:         --i;
  2802                           	decf	((c:utoa@i)),c
  2803  00039E  063A               	btfss	status,0
  2804  0003A0  A0D8               	decf	((c:utoa@i+1)),c
  2805  0003A2  063B               	line	611
  2806                           	
  2807                           l1320:
  2808  0003A4                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 611:         dbuf[i]
                                  = '0' + (n % 10);
  2809                           	movlw	low(_dbuf)
  2810  0003A4  0E66               	addwf	((c:utoa@i)),c,w
  2811  0003A6  243A               	movwf	c:fsr2l
  2812  0003A8  6ED9               	movlw	high(_dbuf)
  2813  0003AA  0E00               	addwfc	((c:utoa@i+1)),c,w
  2814  0003AC  203B               	movwf	1+c:fsr2l
  2815  0003AE  6EDA               	movff	(c:utoa@n),(c:___lomod@dividend)
  2816  0003B0  C032  F001         	movff	(c:utoa@n+1),(c:___lomod@dividend+1)
  2817  0003B4  C033  F002         	movff	(c:utoa@n+2),(c:___lomod@dividend+2)
  2818  0003B8  C034  F003         	movff	(c:utoa@n+3),(c:___lomod@dividend+3)
  2819  0003BC  C035  F004         	movff	(c:utoa@n+4),(c:___lomod@dividend+4)
  2820  0003C0  C036  F005         	movff	(c:utoa@n+5),(c:___lomod@dividend+5)
  2821  0003C4  C037  F006         	movff	(c:utoa@n+6),(c:___lomod@dividend+6)
  2822  0003C8  C038  F007         	movff	(c:utoa@n+7),(c:___lomod@dividend+7)
  2823  0003CC  C039  F008         	movlw	byte0(0Ah)
  2824  0003D0  0E0A               	movwf	((c:___lomod@divisor)),c
  2825  0003D2  6E09               	movlw	byte1(0Ah)
  2826  0003D4  0E00               	movwf	((c:___lomod@divisor+1)),c
  2827  0003D6  6E0A               	movlw	byte2(0Ah)
  2828  0003D8  0E00               	movwf	((c:___lomod@divisor+2)),c
  2829  0003DA  6E0B               	movlw	byte3(0Ah)
  2830  0003DC  0E00               	movwf	((c:___lomod@divisor+3)),c
  2831  0003DE  6E0C               	movlw	byte4(0Ah)
  2832  0003E0  0E00               	movwf	((c:___lomod@divisor+4)),c
  2833  0003E2  6E0D               	movlw	byte5(0Ah)
  2834  0003E4  0E00               	movwf	((c:___lomod@divisor+5)),c
  2835  0003E6  6E0E               	movlw	byte6(0Ah)
  2836  0003E8  0E00               	movwf	((c:___lomod@divisor+6)),c
  2837  0003EA  6E0F               	movlw	byte7(0Ah)
  2838  0003EC  0E00               	movwf	((c:___lomod@divisor+7)),c
  2839  0003EE  6E10               	call	___lomod	;wreg free
  2840  0003F0  EC67  F004         	movff	0+?___lomod,??_utoa+0+0
  2841  0003F4  C001  F026         	movff	1+?___lomod,??_utoa+0+0+1
  2842  0003F8  C002  F027         	movff	2+?___lomod,??_utoa+0+0+2
  2843  0003FC  C003  F028         	movff	3+?___lomod,??_utoa+0+0+3
  2844  000400  C004  F029         	movff	4+?___lomod,??_utoa+0+0+4
  2845  000404  C005  F02A         	movff	5+?___lomod,??_utoa+0+0+5
  2846  000408  C006  F02B         	movff	6+?___lomod,??_utoa+0+0+6
  2847  00040C  C007  F02C         	movff	7+?___lomod,??_utoa+0+0+7
  2848  000410  C008  F02D         	
  2849                           	movf	(??_utoa+0+0),c,w
  2850  000414  5026               	addlw	low(030h)
  2851  000416  0F30               	movwf	indf2,c
  2852  000418  6EDF               
  2853                           	line	612
  2854                           	
  2855                           l1322:
  2856  00041A                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 612:         --p;
  2857                           	decf	((c:utoa@p)),c
  2858  00041A  062E               	btfss	status,0
  2859  00041C  A0D8               	decf	((c:utoa@p+1)),c
  2860  00041E  062F               	line	613
  2861                           	
  2862                           l1324:
  2863  000420                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 613:         --w;
  2864                           	decf	((c:utoa@w)),c
  2865  000420  0630               	btfss	status,0
  2866  000422  A0D8               	decf	((c:utoa@w+1)),c
  2867  000424  0631               	line	614
  2868                           	
  2869                           l1326:
  2870  000426                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 614:         n = n /
                                  10;
  2871                           	movff	(c:utoa@n),(c:___lodiv@dividend)
  2872  000426  C032  F001         	movff	(c:utoa@n+1),(c:___lodiv@dividend+1)
  2873  00042A  C033  F002         	movff	(c:utoa@n+2),(c:___lodiv@dividend+2)
  2874  00042E  C034  F003         	movff	(c:utoa@n+3),(c:___lodiv@dividend+3)
  2875  000432  C035  F004         	movff	(c:utoa@n+4),(c:___lodiv@dividend+4)
  2876  000436  C036  F005         	movff	(c:utoa@n+5),(c:___lodiv@dividend+5)
  2877  00043A  C037  F006         	movff	(c:utoa@n+6),(c:___lodiv@dividend+6)
  2878  00043E  C038  F007         	movff	(c:utoa@n+7),(c:___lodiv@dividend+7)
  2879  000442  C039  F008         	movlw	byte0(0Ah)
  2880  000446  0E0A               	movwf	((c:___lodiv@divisor)),c
  2881  000448  6E09               	movlw	byte1(0Ah)
  2882  00044A  0E00               	movwf	((c:___lodiv@divisor+1)),c
  2883  00044C  6E0A               	movlw	byte2(0Ah)
  2884  00044E  0E00               	movwf	((c:___lodiv@divisor+2)),c
  2885  000450  6E0B               	movlw	byte3(0Ah)
  2886  000452  0E00               	movwf	((c:___lodiv@divisor+3)),c
  2887  000454  6E0C               	movlw	byte4(0Ah)
  2888  000456  0E00               	movwf	((c:___lodiv@divisor+4)),c
  2889  000458  6E0D               	movlw	byte5(0Ah)
  2890  00045A  0E00               	movwf	((c:___lodiv@divisor+5)),c
  2891  00045C  6E0E               	movlw	byte6(0Ah)
  2892  00045E  0E00               	movwf	((c:___lodiv@divisor+6)),c
  2893  000460  6E0F               	movlw	byte7(0Ah)
  2894  000462  0E00               	movwf	((c:___lodiv@divisor+7)),c
  2895  000464  6E10               	call	___lodiv	;wreg free
  2896  000466  EC70  F003         	movff	0+?___lodiv,(c:utoa@n)
  2897  00046A  C001  F032         	movff	1+?___lodiv,(c:utoa@n+1)
  2898  00046E  C002  F033         	movff	2+?___lodiv,(c:utoa@n+2)
  2899  000472  C003  F034         	movff	3+?___lodiv,(c:utoa@n+3)
  2900  000476  C004  F035         	movff	4+?___lodiv,(c:utoa@n+4)
  2901  00047A  C005  F036         	movff	5+?___lodiv,(c:utoa@n+5)
  2902  00047E  C006  F037         	movff	6+?___lodiv,(c:utoa@n+6)
  2903  000482  C007  F038         	movff	7+?___lodiv,(c:utoa@n+7)
  2904  000486  C008  F039         	
  2905                           	goto	l1328
  2906  00048A  EF47  F002         	line	615
  2907                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 615:     }
  2908                           	
  2909                           l157:
  2910  00048E                     	line	609
  2911                           	
  2912                           l1328:
  2913  00048E                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 609:     while (i &&
                                  (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2914                           	movf	((c:utoa@i)),c,w
  2915  00048E  503A               iorwf	((c:utoa@i+1)),c,w
  2916  000490  103B               	btfsc	status,2
  2917  000492  B4D8               	goto	u541
  2918  000494  EF4E  F002         	goto	u540
  2919  000498  EF50  F002         
  2920                           u541:
  2921  00049C                     	goto	l1338
  2922  00049C  EF86  F002         u540:
  2923  0004A0                     	
  2924                           l1330:
  2925  0004A0                     	movf	((c:utoa@n)),c,w
  2926  0004A0  5032               iorwf	((c:utoa@n+1)),c,w
  2927  0004A2  1033               iorwf	((c:utoa@n+2)),c,w
  2928  0004A4  1034               iorwf	((c:utoa@n+3)),c,w
  2929  0004A6  1035               iorwf	((c:utoa@n+4)),c,w
  2930  0004A8  1036               iorwf	((c:utoa@n+5)),c,w
  2931  0004AA  1037               iorwf	((c:utoa@n+6)),c,w
  2932  0004AC  1038               iorwf	((c:utoa@n+7)),c,w
  2933  0004AE  1039               	btfss	status,2
  2934  0004B0  A4D8               	goto	u551
  2935  0004B2  EF5D  F002         	goto	u550
  2936  0004B6  EF5F  F002         
  2937                           u551:
  2938  0004BA                     	goto	l1318
  2939  0004BA  EFCF  F001         u550:
  2940  0004BE                     	
  2941                           l1332:
  2942  0004BE                     	btfsc	((c:utoa@p+1)),c,7
  2943  0004BE  BE2F               	goto	u560
  2944  0004C0  EF6C  F002         	movf	((c:utoa@p+1)),c,w
  2945  0004C4  502F               	bnz	u561
  2946  0004C6  E106               	decf	((c:utoa@p)),c,w
  2947  0004C8  042E               	btfsc	status,0
  2948  0004CA  B0D8               	goto	u561
  2949  0004CC  EF6A  F002         	goto	u560
  2950  0004D0  EF6C  F002         
  2951                           u561:
  2952  0004D4                     	goto	l1318
  2953  0004D4  EFCF  F001         u560:
  2954  0004D8                     	
  2955                           l1334:
  2956  0004D8                     	btfsc	((c:utoa@w+1)),c,7
  2957  0004D8  BE31               	goto	u571
  2958  0004DA  EF77  F002         	movf	((c:utoa@w+1)),c,w
  2959  0004DE  5031               	bnz	u570
  2960  0004E0  E108               	decf	((c:utoa@w)),c,w
  2961  0004E2  0430               	btfss	status,0
  2962  0004E4  A0D8               	goto	u571
  2963  0004E6  EF77  F002         	goto	u570
  2964  0004EA  EF79  F002         
  2965                           u571:
  2966  0004EE                     	goto	l1338
  2967  0004EE  EF86  F002         u570:
  2968  0004F2                     	
  2969                           l1336:
  2970  0004F2                     	
  2971                           	btfsc	((c:_flags)),c,(1)&7
  2972  0004F2  B25E               	goto	u581
  2973  0004F4  EF7E  F002         	goto	u580
  2974  0004F8  EF80  F002         u581:
  2975  0004FC                     	goto	l1318
  2976  0004FC  EFCF  F001         u580:
  2977  000500                     	goto	l1338
  2978  000500  EF86  F002         	
  2979                           l162:
  2980  000504                     	goto	l1338
  2981  000504  EF86  F002         	
  2982                           l160:
  2983  000508                     	goto	l1338
  2984  000508  EF86  F002         	
  2985                           l163:
  2986  00050C                     	line	618
  2987                           	
  2988                           l1338:
  2989  00050C                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 618:     return pad(
                                 fp, &dbuf[i], w);
  2990                           		movff	(c:utoa@fp),(c:pad@fp)
  2991  00050C  C01C  F011         	movff	(c:utoa@fp+1),(c:pad@fp+1)
  2992  000510  C01D  F012         
  2993                           	movlw	low(_dbuf)
  2994  000514  0E66               	addwf	((c:utoa@i)),c,w
  2995  000516  243A               	movwf	((c:pad@buf)),c
  2996  000518  6E13               	movlw	high(_dbuf)
  2997  00051A  0E00               	addwfc	((c:utoa@i+1)),c,w
  2998  00051C  203B               	movwf	1+((c:pad@buf)),c
  2999  00051E  6E14               	movff	(c:utoa@w),(c:pad@p)
  3000  000520  C030  F015         	movff	(c:utoa@w+1),(c:pad@p+1)
  3001  000524  C031  F016         	call	_pad	;wreg free
  3002  000528  EC48  F005         	movff	0+?_pad,(c:?_utoa)
  3003  00052C  C011  F01C         	movff	1+?_pad,(c:?_utoa+1)
  3004  000530  C012  F01D         	goto	l164
  3005  000534  EF9C  F002         	
  3006                           l1340:
  3007  000538                     	line	619
  3008                           	
  3009                           l164:
  3010  000538                     	return	;funcret
  3011  000538  0012               	opt stack 0
  3012                           GLOBAL	__end_of_utoa
  3013                           	__end_of_utoa:
  3014  00053A                     	signat	_utoa,8314
  3015                           	global	_pad
  3016                           
  3017 ;; *************** function _pad *****************
  3018 ;; Defined at:
  3019 ;;		line 72 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3022 ;;		 -> sprintf@f(6), 
  3023 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3024 ;;		 -> dbuf(32), 
  3025 ;;  p               2   20[COMRAM] int 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  w               2   25[COMRAM] int 
  3028 ;;  i               2   23[COMRAM] int 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  2   16[COMRAM] int 
  3031 ;; Registers used:
  3032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3038 ;;      Params:         6       0       0       0
  3039 ;;      Locals:         4       0       0       0
  3040 ;;      Temps:          1       0       0       0
  3041 ;;      Totals:        11       0       0       0
  3042 ;;Total ram usage:       11 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    3
  3045 ;; This function calls:
  3046 ;;		_fputc
  3047 ;;		_fputs
  3048 ;;		_strlen
  3049 ;; This function is called by:
  3050 ;;		_utoa
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           psect	text5,class=CODE,space=0,reloc=2,group=0
  3054                           	line	72
  3055                           global __ptext5
  3056                           __ptext5:
  3057  000A90                     psect	text5
  3058                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3059                           	line	72
  3060                           	global	__size_of_pad
  3061                           	__size_of_pad	equ	__end_of_pad-_pad
  3062  0000                     	
  3063                           _pad:
  3064  000A90                     ;incstack = 0
  3065                           	opt	stack 23
  3066                           	line	77
  3067                           	
  3068                           l1240:
  3069  000A90                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 72: static int pad(F
                                 ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.00/pic/sources/c99/common/dopr
                                 nt.c: 73: {;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 74:     i
                                 nt i, w;;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 77:     if (
                                 flags & (1 << 0)) {
  3070                           	
  3071                           	btfss	((c:_flags)),c,(0)&7
  3072  000A90  A05E               	goto	u411
  3073  000A92  EF4D  F005         	goto	u410
  3074  000A96  EF4F  F005         u411:
  3075  000A9A                     	goto	l1244
  3076  000A9A  EF5B  F005         u410:
  3077  000A9E                     	line	78
  3078                           	
  3079                           l1242:
  3080  000A9E                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 78:         fputs((c
                                 onst char *)buf, fp);
  3081                           		movff	(c:pad@buf),(c:fputs@s)
  3082  000A9E  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
  3083  000AA2  C014  F00B         
  3084                           		movff	(c:pad@fp),(c:fputs@fp)
  3085  000AA6  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
  3086  000AAA  C012  F00D         
  3087                           	call	_fputs	;wreg free
  3088  000AAE  EC27  F007         	goto	l1244
  3089  000AB2  EF5B  F005         	line	79
  3090                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 79:     }
  3091                           	
  3092                           l140:
  3093  000AB6                     	line	82
  3094                           	
  3095                           l1244:
  3096  000AB6                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
                                 ? 0 : p;
  3097                           	btfsc	((c:pad@p+1)),c,7
  3098  000AB6  BE16               	goto	u421
  3099  000AB8  EF60  F005         	goto	u420
  3100  000ABC  EF62  F005         
  3101                           u421:
  3102  000AC0                     	goto	l1248
  3103  000AC0  EF68  F005         u420:
  3104  000AC4                     	
  3105                           l1246:
  3106  000AC4                     	movff	(c:pad@p),(c:pad@w)
  3107  000AC4  C015  F01A         	movff	(c:pad@p+1),(c:pad@w+1)
  3108  000AC8  C016  F01B         	goto	l144
  3109  000ACC  EF6C  F005         	
  3110                           l142:
  3111  000AD0                     	
  3112                           l1248:
  3113  000AD0                     	movlw	high(0)
  3114  000AD0  0E00               	movwf	((c:pad@w+1)),c
  3115  000AD2  6E1B               	movlw	low(0)
  3116  000AD4  0E00               	movwf	((c:pad@w)),c
  3117  000AD6  6E1A               	
  3118                           l144:
  3119  000AD8                     	line	83
  3120                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3121                           	movlw	high(0)
  3122  000AD8  0E00               	movwf	((c:pad@i+1)),c
  3123  000ADA  6E19               	movlw	low(0)
  3124  000ADC  0E00               	movwf	((c:pad@i)),c
  3125  000ADE  6E18               	line	84
  3126                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 84:     while (i < w
                                 ) {
  3127                           	goto	l1254
  3128  000AE0  EF80  F005         	
  3129                           l146:
  3130  000AE4                     	line	85
  3131                           	
  3132                           l1250:
  3133  000AE4                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
                                 ', fp);
  3134                           	movlw	high(020h)
  3135  000AE4  0E00               	movwf	((c:fputc@c+1)),c
  3136  000AE6  6E02               	movlw	low(020h)
  3137  000AE8  0E20               	movwf	((c:fputc@c)),c
  3138  000AEA  6E01               		movff	(c:pad@fp),(c:fputc@fp)
  3139  000AEC  C011  F003         	movff	(c:pad@fp+1),(c:fputc@fp+1)
  3140  000AF0  C012  F004         
  3141                           	call	_fputc	;wreg free
  3142  000AF4  ECD9  F004         	line	86
  3143                           	
  3144                           l1252:
  3145  000AF8                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3146                           	infsnz	((c:pad@i)),c
  3147  000AF8  4A18               	incf	((c:pad@i+1)),c
  3148  000AFA  2A19               	goto	l1254
  3149  000AFC  EF80  F005         	line	87
  3150                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 87:     }
  3151                           	
  3152                           l145:
  3153  000B00                     	line	84
  3154                           	
  3155                           l1254:
  3156  000B00                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 84:     while (i < w
                                 ) {
  3157                           		movf	((c:pad@w)),c,w
  3158  000B00  501A               	subwf	((c:pad@i)),c,w
  3159  000B02  5C18               	movf	((c:pad@i+1)),c,w
  3160  000B04  5019               	xorlw	80h
  3161  000B06  0A80               	movwf	(??_pad+0+0)&0ffh,c
  3162  000B08  6E17               	movf	((c:pad@w+1)),c,w
  3163  000B0A  501B               	xorlw	80h
  3164  000B0C  0A80               	subwfb	(??_pad+0+0)&0ffh,c,w
  3165  000B0E  5817               	btfss	status,0
  3166  000B10  A0D8               	goto	u431
  3167  000B12  EF8D  F005         	goto	u430
  3168  000B16  EF8F  F005         
  3169                           u431:
  3170  000B1A                     	goto	l1250
  3171  000B1A  EF72  F005         u430:
  3172  000B1E                     	
  3173                           l147:
  3174  000B1E                     	line	90
  3175                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
                                 & (1 << 0))) {
  3176                           	
  3177                           	btfsc	((c:_flags)),c,(0)&7
  3178  000B1E  B05E               	goto	u441
  3179  000B20  EF94  F005         	goto	u440
  3180  000B24  EF96  F005         u441:
  3181  000B28                     	goto	l1258
  3182  000B28  EFA2  F005         u440:
  3183  000B2C                     	line	91
  3184                           	
  3185                           l1256:
  3186  000B2C                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 91:         fputs((c
                                 onst char *)buf, fp);
  3187                           		movff	(c:pad@buf),(c:fputs@s)
  3188  000B2C  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
  3189  000B30  C014  F00B         
  3190                           		movff	(c:pad@fp),(c:fputs@fp)
  3191  000B34  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
  3192  000B38  C012  F00D         
  3193                           	call	_fputs	;wreg free
  3194  000B3C  EC27  F007         	goto	l1258
  3195  000B40  EFA2  F005         	line	92
  3196                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 92:     }
  3197                           	
  3198                           l148:
  3199  000B44                     	line	94
  3200                           	
  3201                           l1258:
  3202  000B44                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 94:     return strle
                                 n(buf) + w;
  3203                           		movff	(c:pad@buf),(c:strlen@s)
  3204  000B44  C013  F001         	movff	(c:pad@buf+1),(c:strlen@s+1)
  3205  000B48  C014  F002         
  3206                           	call	_strlen	;wreg free
  3207  000B4C  ECB0  F006         	movf	((c:pad@w)),c,w
  3208  000B50  501A               	addwf	(0+?_strlen),c,w
  3209  000B52  2401               	movwf	((c:?_pad)),c
  3210  000B54  6E11               	movf	((c:pad@w+1)),c,w
  3211  000B56  501B               	addwfc	(1+?_strlen),c,w
  3212  000B58  2002               	movwf	1+((c:?_pad)),c
  3213  000B5A  6E12               	goto	l149
  3214  000B5C  EFB0  F005         	
  3215                           l1260:
  3216  000B60                     	line	95
  3217                           	
  3218                           l149:
  3219  000B60                     	return	;funcret
  3220  000B60  0012               	opt stack 0
  3221                           GLOBAL	__end_of_pad
  3222                           	__end_of_pad:
  3223  000B62                     	signat	_pad,12410
  3224                           	global	_strlen
  3225                           
  3226 ;; *************** function _strlen *****************
  3227 ;; Defined at:
  3228 ;;		line 12 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3231 ;;		 -> dbuf(32), 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  a               2    4[COMRAM] PTR const unsigned char 
  3234 ;;		 -> dbuf(32), 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  2    0[COMRAM] unsigned int 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3244 ;;      Params:         2       0       0       0
  3245 ;;      Locals:         2       0       0       0
  3246 ;;      Temps:          2       0       0       0
  3247 ;;      Totals:         6       0       0       0
  3248 ;;Total ram usage:        6 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_pad
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           psect	text6,class=CODE,space=0,reloc=2,group=2
  3257                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c"
  3258                           	line	12
  3259                           global __ptext6
  3260                           __ptext6:
  3261  000D60                     psect	text6
  3262                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c"
  3263                           	line	12
  3264                           	global	__size_of_strlen
  3265                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  3266  0000                     	
  3267                           _strlen:
  3268  000D60                     ;incstack = 0
  3269                           	opt	stack 25
  3270                           	line	14
  3271                           	
  3272                           l1230:
  3273  000D60                     		movff	(c:strlen@s),(c:strlen@a)
  3274  000D60  C001  F005         	movff	(c:strlen@s+1),(c:strlen@a+1)
  3275  000D64  C002  F006         
  3276                           	line	16
  3277                           	goto	l1234
  3278  000D68  EFBA  F006         	
  3279                           l884:
  3280  000D6C                     	line	17
  3281                           	
  3282                           l1232:
  3283  000D6C                     	infsnz	((c:strlen@s)),c
  3284  000D6C  4A01               	incf	((c:strlen@s+1)),c
  3285  000D6E  2A02               	goto	l1234
  3286  000D70  EFBA  F006         	line	18
  3287                           	
  3288                           l883:
  3289  000D74                     	line	16
  3290                           	
  3291                           l1234:
  3292  000D74                     	movff	(c:strlen@s),fsr2l
  3293  000D74  C001  FFD9         	movff	(c:strlen@s+1),fsr2h
  3294  000D78  C002  FFDA         	movf	indf2,w
  3295  000D7C  50DF               	btfss	status,2
  3296  000D7E  A4D8               	goto	u401
  3297  000D80  EFC4  F006         	goto	u400
  3298  000D84  EFC6  F006         u401:
  3299  000D88                     	goto	l1232
  3300  000D88  EFB6  F006         u400:
  3301  000D8C                     	goto	l1236
  3302  000D8C  EFC8  F006         	
  3303                           l885:
  3304  000D90                     	line	25
  3305                           	
  3306                           l1236:
  3307  000D90                     	movff	(c:strlen@a),??_strlen+0+0
  3308  000D90  C005  F003         	movff	(c:strlen@a+1),??_strlen+0+0+1
  3309  000D94  C006  F004         	comf	(??_strlen+0+0),c
  3310  000D98  1E03               	comf	(??_strlen+0+1),c
  3311  000D9A  1E04               	infsnz	(??_strlen+0+0),c
  3312  000D9C  4A03               	incf	(??_strlen+0+1),c
  3313  000D9E  2A04               	movf	((c:strlen@s)),c,w
  3314  000DA0  5001               	addwf	(??_strlen+0+0),c,w
  3315  000DA2  2403               	movwf	((c:?_strlen)),c
  3316  000DA4  6E01               	movf	((c:strlen@s+1)),c,w
  3317  000DA6  5002               	addwfc	(??_strlen+0+1),c,w
  3318  000DA8  2004               	movwf	1+((c:?_strlen)),c
  3319  000DAA  6E02               	goto	l886
  3320  000DAC  EFD8  F006         	
  3321                           l1238:
  3322  000DB0                     	line	26
  3323                           	
  3324                           l886:
  3325  000DB0                     	return	;funcret
  3326  000DB0  0012               	opt stack 0
  3327                           GLOBAL	__end_of_strlen
  3328                           	__end_of_strlen:
  3329  000DB2                     	signat	_strlen,4218
  3330                           	global	_fputs
  3331                           
  3332 ;; *************** function _fputs *****************
  3333 ;; Defined at:
  3334 ;;		line 8 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputs.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3337 ;;		 -> dbuf(32), 
  3338 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3339 ;;		 -> sprintf@f(6), 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  i               2   14[COMRAM] int 
  3342 ;;  c               1   13[COMRAM] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  2    9[COMRAM] int 
  3345 ;; Registers used:
  3346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3352 ;;      Params:         4       0       0       0
  3353 ;;      Locals:         3       0       0       0
  3354 ;;      Temps:          0       0       0       0
  3355 ;;      Totals:         7       0       0       0
  3356 ;;Total ram usage:        7 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    2
  3359 ;; This function calls:
  3360 ;;		_fputc
  3361 ;; This function is called by:
  3362 ;;		_pad
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           psect	text7,class=CODE,space=0,reloc=2,group=2
  3366                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputs.c"
  3367                           	line	8
  3368                           global __ptext7
  3369                           __ptext7:
  3370  000E4E                     psect	text7
  3371                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputs.c"
  3372                           	line	8
  3373                           	global	__size_of_fputs
  3374                           	__size_of_fputs	equ	__end_of_fputs-_fputs
  3375  0000                     	
  3376                           _fputs:
  3377  000E4E                     ;incstack = 0
  3378                           	opt	stack 23
  3379                           	line	13
  3380                           	
  3381                           l1222:
  3382  000E4E                     	movlw	high(0)
  3383  000E4E  0E00               	movwf	((c:fputs@i+1)),c
  3384  000E50  6E10               	movlw	low(0)
  3385  000E52  0E00               	movwf	((c:fputs@i)),c
  3386  000E54  6E0F               	line	14
  3387                           	goto	l1228
  3388  000E56  EF3A  F007         	
  3389                           l868:
  3390  000E5A                     	line	15
  3391                           	
  3392                           l1224:
  3393  000E5A                     	movff	(c:fputs@c),(c:fputc@c)
  3394  000E5A  C00E  F001         	clrf	((c:fputc@c+1)),c
  3395  000E5E  6A02               		movff	(c:fputs@fp),(c:fputc@fp)
  3396  000E60  C00C  F003         	movff	(c:fputs@fp+1),(c:fputc@fp+1)
  3397  000E64  C00D  F004         
  3398                           	call	_fputc	;wreg free
  3399  000E68  ECD9  F004         	line	16
  3400                           	
  3401                           l1226:
  3402  000E6C                     	infsnz	((c:fputs@i)),c
  3403  000E6C  4A0F               	incf	((c:fputs@i+1)),c
  3404  000E6E  2A10               	goto	l1228
  3405  000E70  EF3A  F007         	line	17
  3406                           	
  3407                           l867:
  3408  000E74                     	line	14
  3409                           	
  3410                           l1228:
  3411  000E74                     	movf	((c:fputs@i)),c,w
  3412  000E74  500F               	addwf	((c:fputs@s)),c,w
  3413  000E76  240A               	movwf	c:fsr2l
  3414  000E78  6ED9               	movf	((c:fputs@i+1)),c,w
  3415  000E7A  5010               	addwfc	((c:fputs@s+1)),c,w
  3416  000E7C  200B               	movwf	1+c:fsr2l
  3417  000E7E  6EDA               	movf	indf2,w
  3418  000E80  50DF               	movwf	((c:fputs@c)),c
  3419  000E82  6E0E               	movf	((c:fputs@c)),c,w
  3420  000E84  500E               	btfss	status,2
  3421  000E86  A4D8               	goto	u391
  3422  000E88  EF48  F007         	goto	u390
  3423  000E8C  EF4A  F007         u391:
  3424  000E90                     	goto	l1224
  3425  000E90  EF2D  F007         u390:
  3426  000E94                     	goto	l870
  3427  000E94  EF4C  F007         	
  3428                           l869:
  3429  000E98                     	line	19
  3430                           ;	Return value of _fputs is never used
  3431                           	
  3432                           l870:
  3433  000E98                     	return	;funcret
  3434  000E98  0012               	opt stack 0
  3435                           GLOBAL	__end_of_fputs
  3436                           	__end_of_fputs:
  3437  000E9A                     	signat	_fputs,8314
  3438                           	global	_fputc
  3439                           
  3440 ;; *************** function _fputc *****************
  3441 ;; Defined at:
  3442 ;;		line 8 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputc.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  c               2    0[COMRAM] int 
  3445 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3446 ;;		 -> sprintf@f(6), 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  2    0[COMRAM] int 
  3451 ;; Registers used:
  3452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3458 ;;      Params:         4       0       0       0
  3459 ;;      Locals:         0       0       0       0
  3460 ;;      Temps:          5       0       0       0
  3461 ;;      Totals:         9       0       0       0
  3462 ;;Total ram usage:        9 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    1
  3465 ;; This function calls:
  3466 ;;		_putch
  3467 ;; This function is called by:
  3468 ;;		_pad
  3469 ;;		_vfpfcnvrt
  3470 ;;		_fputs
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           psect	text8,class=CODE,space=0,reloc=2,group=2
  3474                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputc.c"
  3475                           	line	8
  3476                           global __ptext8
  3477                           __ptext8:
  3478  0009B2                     psect	text8
  3479                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputc.c"
  3480                           	line	8
  3481                           	global	__size_of_fputc
  3482                           	__size_of_fputc	equ	__end_of_fputc-_fputc
  3483  0000                     	
  3484                           _fputc:
  3485  0009B2                     ;incstack = 0
  3486                           	opt	stack 23
  3487                           	line	12
  3488                           	
  3489                           l1208:
  3490  0009B2                     	movf	((c:fputc@fp)),c,w
  3491  0009B2  5003               iorwf	((c:fputc@fp+1)),c,w
  3492  0009B4  1004               	btfsc	status,2
  3493  0009B6  B4D8               	goto	u351
  3494  0009B8  EFE0  F004         	goto	u350
  3495  0009BC  EFE2  F004         
  3496                           u351:
  3497  0009C0                     	goto	l1212
  3498  0009C0  EFED  F004         u350:
  3499  0009C4                     	
  3500                           l1210:
  3501  0009C4                     	movf	((c:fputc@fp)),c,w
  3502  0009C4  5003               iorwf	((c:fputc@fp+1)),c,w
  3503  0009C6  1004               	btfss	status,2
  3504  0009C8  A4D8               	goto	u361
  3505  0009CA  EFE9  F004         	goto	u360
  3506  0009CE  EFEB  F004         
  3507                           u361:
  3508  0009D2                     	goto	l1214
  3509  0009D2  EFF2  F004         u360:
  3510  0009D6                     	goto	l1212
  3511  0009D6  EFED  F004         	
  3512                           l857:
  3513  0009DA                     	line	13
  3514                           	
  3515                           l1212:
  3516  0009DA                     	movf	((c:fputc@c)),c,w
  3517  0009DA  5001               	
  3518                           	call	_putch
  3519  0009DC  ECAC  F007         	line	14
  3520                           	goto	l862
  3521  0009E0  EF47  F005         	
  3522                           l855:
  3523  0009E4                     	line	15
  3524                           	
  3525                           l1214:
  3526  0009E4                     	lfsr	2,04h
  3527  0009E4  EE20 F004          	movf	((c:fputc@fp)),c,w
  3528  0009E8  5003               	addwf	fsr2l
  3529  0009EA  26D9               	movf	((c:fputc@fp+1)),c,w
  3530  0009EC  5004               	addwfc	fsr2h
  3531  0009EE  22DA               	movf	postinc2,w
  3532  0009F0  50DE               iorwf	postinc2,w
  3533  0009F2  10DE               	btfsc	status,2
  3534  0009F4  B4D8               	goto	u371
  3535  0009F6  EFFF  F004         	goto	u370
  3536  0009FA  EF01  F005         
  3537                           u371:
  3538  0009FE                     	goto	l1218
  3539  0009FE  EF1E  F005         u370:
  3540  000A02                     	
  3541                           l1216:
  3542  000A02                     	lfsr	2,04h
  3543  000A02  EE20 F004          	movf	((c:fputc@fp)),c,w
  3544  000A06  5003               	addwf	fsr2l
  3545  000A08  26D9               	movf	((c:fputc@fp+1)),c,w
  3546  000A0A  5004               	addwfc	fsr2h
  3547  000A0C  22DA               	lfsr	1,02h
  3548  000A0E  EE10 F002          	movf	((c:fputc@fp)),c,w
  3549  000A12  5003               	addwf	fsr1l
  3550  000A14  26E1               	movf	((c:fputc@fp+1)),c,w
  3551  000A16  5004               	addwfc	fsr1h
  3552  000A18  22E2               		movf	postinc2,w
  3553  000A1A  50DE               	subwf	postinc1,w
  3554  000A1C  5CE6               	movf	postinc1,w
  3555  000A1E  50E6               	xorlw	80h
  3556  000A20  0A80               	movwf	(??_fputc+4+0)&0ffh,c
  3557  000A22  6E09               	movf	postinc2,w
  3558  000A24  50DE               	xorlw	80h
  3559  000A26  0A80               	subwfb	(??_fputc+4+0)&0ffh,c,w
  3560  000A28  5809               	btfsc	status,0
  3561  000A2A  B0D8               	goto	u381
  3562  000A2C  EF1A  F005         	goto	u380
  3563  000A30  EF1C  F005         
  3564                           u381:
  3565  000A34                     	goto	l862
  3566  000A34  EF47  F005         u380:
  3567  000A38                     	goto	l1218
  3568  000A38  EF1E  F005         	
  3569                           l861:
  3570  000A3C                     	line	16
  3571                           	
  3572                           l1218:
  3573  000A3C                     	lfsr	2,02h
  3574  000A3C  EE20 F002          	movf	((c:fputc@fp)),c,w
  3575  000A40  5003               	addwf	fsr2l
  3576  000A42  26D9               	movf	((c:fputc@fp+1)),c,w
  3577  000A44  5004               	addwfc	fsr2h
  3578  000A46  22DA               	movff	postinc2,??_fputc+0+0
  3579  000A48  CFDE F005          	movff	postdec2,??_fputc+0+0+1
  3580  000A4C  CFDD F006          	movff	(c:fputc@fp),fsr2l
  3581  000A50  C003  FFD9         	movff	(c:fputc@fp+1),fsr2h
  3582  000A54  C004  FFDA         	movff	postinc2,??_fputc+2+0
  3583  000A58  CFDE F007          	movff	postdec2,??_fputc+2+0+1
  3584  000A5C  CFDD F008          	movf	(??_fputc+0+0),c,w
  3585  000A60  5005               	addwf	(??_fputc+2+0),c,w
  3586  000A62  2407               	movwf	c:fsr2l
  3587  000A64  6ED9               	movf	(??_fputc+0+1),c,w
  3588  000A66  5006               	addwfc	(??_fputc+2+1),c,w
  3589  000A68  2008               	movwf	1+c:fsr2l
  3590  000A6A  6EDA               	movff	(c:fputc@c),indf2
  3591  000A6C  C001  FFDF         
  3592                           	line	17
  3593                           	lfsr	2,02h
  3594  000A70  EE20 F002          	movf	((c:fputc@fp)),c,w
  3595  000A74  5003               	addwf	fsr2l
  3596  000A76  26D9               	movf	((c:fputc@fp+1)),c,w
  3597  000A78  5004               	addwfc	fsr2h
  3598  000A7A  22DA               	incf	postinc2
  3599  000A7C  2ADE               	movlw	0
  3600  000A7E  0E00               	addwfc	postdec2
  3601  000A80  22DD               	goto	l862
  3602  000A82  EF47  F005         	line	18
  3603                           	
  3604                           l859:
  3605  000A86                     	goto	l862
  3606  000A86  EF47  F005         	line	19
  3607                           	
  3608                           l858:
  3609  000A8A                     	goto	l862
  3610  000A8A  EF47  F005         	line	20
  3611                           	
  3612                           l1220:
  3613  000A8E                     	line	21
  3614                           ;	Return value of _fputc is never used
  3615                           	
  3616                           l862:
  3617  000A8E                     	return	;funcret
  3618  000A8E  0012               	opt stack 0
  3619                           GLOBAL	__end_of_fputc
  3620                           	__end_of_fputc:
  3621  000A90                     	signat	_fputc,8314
  3622                           	global	_putch
  3623                           
  3624 ;; *************** function _putch *****************
  3625 ;; Defined at:
  3626 ;;		line 7 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/putch.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  c               1    wreg     unsigned char 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  c               1    0[COMRAM] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3640 ;;      Params:         0       0       0       0
  3641 ;;      Locals:         0       0       0       0
  3642 ;;      Temps:          0       0       0       0
  3643 ;;      Totals:         0       0       0       0
  3644 ;;Total ram usage:        0 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_fputc
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           psect	text9,class=CODE,space=0,reloc=2,group=2
  3653                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/putch.c"
  3654                           	line	7
  3655                           global __ptext9
  3656                           __ptext9:
  3657  000F58                     psect	text9
  3658                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/putch.c"
  3659                           	line	7
  3660                           	global	__size_of_putch
  3661                           	__size_of_putch	equ	__end_of_putch-_putch
  3662  0000                     	
  3663                           _putch:
  3664  000F58                     ;incstack = 0
  3665                           	opt	stack 23
  3666                           	line	9
  3667                           	
  3668                           l880:
  3669  000F58                     	return	;funcret
  3670  000F58  0012               	opt stack 0
  3671                           GLOBAL	__end_of_putch
  3672                           	__end_of_putch:
  3673  000F5A                     	signat	_putch,4217
  3674                           	global	___lomod
  3675                           
  3676 ;; *************** function ___lomod *****************
  3677 ;; Defined at:
  3678 ;;		line 9 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lomod.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  dividend        8    0[COMRAM] unsigned long long 
  3681 ;;  divisor         8    8[COMRAM] unsigned long long 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  counter         1   16[COMRAM] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  8    0[COMRAM] unsigned long long 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3693 ;;      Params:        16       0       0       0
  3694 ;;      Locals:         1       0       0       0
  3695 ;;      Temps:          0       0       0       0
  3696 ;;      Totals:        17       0       0       0
  3697 ;;Total ram usage:       17 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_utoa
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           psect	text10,class=CODE,space=0,reloc=2,group=1
  3706                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lomod.c"
  3707                           	line	9
  3708                           global __ptext10
  3709                           __ptext10:
  3710  0008CE                     psect	text10
  3711                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lomod.c"
  3712                           	line	9
  3713                           	global	__size_of___lomod
  3714                           	__size_of___lomod	equ	__end_of___lomod-___lomod
  3715  0000                     	
  3716                           ___lomod:
  3717  0008CE                     ;incstack = 0
  3718                           	opt	stack 26
  3719                           	line	14
  3720                           	
  3721                           l1284:
  3722  0008CE                     	movf	((c:___lomod@divisor)),c,w
  3723  0008CE  5009               iorwf	((c:___lomod@divisor+1)),c,w
  3724  0008D0  100A               iorwf	((c:___lomod@divisor+2)),c,w
  3725  0008D2  100B               iorwf	((c:___lomod@divisor+3)),c,w
  3726  0008D4  100C               iorwf	((c:___lomod@divisor+4)),c,w
  3727  0008D6  100D               iorwf	((c:___lomod@divisor+5)),c,w
  3728  0008D8  100E               iorwf	((c:___lomod@divisor+6)),c,w
  3729  0008DA  100F               iorwf	((c:___lomod@divisor+7)),c,w
  3730  0008DC  1010               	btfsc	status,2
  3731  0008DE  B4D8               	goto	u491
  3732  0008E0  EF74  F004         	goto	u490
  3733  0008E4  EF76  F004         
  3734                           u491:
  3735  0008E8                     	goto	l627
  3736  0008E8  EFC8  F004         u490:
  3737  0008EC                     	line	15
  3738                           	
  3739                           l1286:
  3740  0008EC                     	movlw	low(01h)
  3741  0008EC  0E01               	movwf	((c:___lomod@counter)),c
  3742  0008EE  6E11               	line	16
  3743                           	goto	l1290
  3744  0008F0  EF86  F004         	
  3745                           l629:
  3746  0008F4                     	line	17
  3747                           	
  3748                           l1288:
  3749  0008F4                     	bcf	status,0
  3750  0008F4  90D8               	rlcf	((c:___lomod@divisor)),c
  3751  0008F6  3609               	rlcf	((c:___lomod@divisor+1)),c
  3752  0008F8  360A               	rlcf	((c:___lomod@divisor+2)),c
  3753  0008FA  360B               	rlcf	((c:___lomod@divisor+3)),c
  3754  0008FC  360C               	rlcf	((c:___lomod@divisor+4)),c
  3755  0008FE  360D               	rlcf	((c:___lomod@divisor+5)),c
  3756  000900  360E               	rlcf	((c:___lomod@divisor+6)),c
  3757  000902  360F               	rlcf	((c:___lomod@divisor+7)),c
  3758  000904  3610               	line	18
  3759                           	incf	((c:___lomod@counter)),c
  3760  000906  2A11               	goto	l1290
  3761  000908  EF86  F004         	line	19
  3762                           	
  3763                           l628:
  3764  00090C                     	line	16
  3765                           	
  3766                           l1290:
  3767  00090C                     	
  3768                           	btfss	((c:___lomod@divisor+7)),c,(63)&7
  3769  00090C  AE10               	goto	u501
  3770  00090E  EF8B  F004         	goto	u500
  3771  000912  EF8D  F004         u501:
  3772  000916                     	goto	l1288
  3773  000916  EF7A  F004         u500:
  3774  00091A                     	goto	l1292
  3775  00091A  EF91  F004         	
  3776                           l630:
  3777  00091E                     	goto	l1292
  3778  00091E  EF91  F004         	line	20
  3779                           	
  3780                           l631:
  3781  000922                     	line	21
  3782                           	
  3783                           l1292:
  3784  000922                     		movf	((c:___lomod@divisor)),c,w
  3785  000922  5009               	subwf	((c:___lomod@dividend)),c,w
  3786  000924  5C01               	movf	((c:___lomod@divisor+1)),c,w
  3787  000926  500A               	subwfb	((c:___lomod@dividend+1)),c,w
  3788  000928  5802               	movf	((c:___lomod@divisor+2)),c,w
  3789  00092A  500B               	subwfb	((c:___lomod@dividend+2)),c,w
  3790  00092C  5803               	movf	((c:___lomod@divisor+3)),c,w
  3791  00092E  500C               	subwfb	((c:___lomod@dividend+3)),c,w
  3792  000930  5804               	movf	((c:___lomod@divisor+4)),c,w
  3793  000932  500D               	subwfb	((c:___lomod@dividend+4)),c,w
  3794  000934  5805               	movf	((c:___lomod@divisor+5)),c,w
  3795  000936  500E               	subwfb	((c:___lomod@dividend+5)),c,w
  3796  000938  5806               	movf	((c:___lomod@divisor+6)),c,w
  3797  00093A  500F               	subwfb	((c:___lomod@dividend+6)),c,w
  3798  00093C  5807               	movf	((c:___lomod@divisor+7)),c,w
  3799  00093E  5010               	subwfb	((c:___lomod@dividend+7)),c,w
  3800  000940  5808               	btfss	status,0
  3801  000942  A0D8               	goto	u511
  3802  000944  EFA6  F004         	goto	u510
  3803  000948  EFA8  F004         
  3804                           u511:
  3805  00094C                     	goto	l1296
  3806  00094C  EFBA  F004         u510:
  3807  000950                     	line	22
  3808                           	
  3809                           l1294:
  3810  000950                     	movf	((c:___lomod@divisor)),c,w
  3811  000950  5009               	subwf	((c:___lomod@dividend)),c
  3812  000952  5E01               	movf	((c:___lomod@divisor+1)),c,w
  3813  000954  500A               	subwfb	((c:___lomod@dividend+1)),c
  3814  000956  5A02               	movf	((c:___lomod@divisor+2)),c,w
  3815  000958  500B               	subwfb	((c:___lomod@dividend+2)),c
  3816  00095A  5A03               	movf	((c:___lomod@divisor+3)),c,w
  3817  00095C  500C               	subwfb	((c:___lomod@dividend+3)),c
  3818  00095E  5A04               	movf	((c:___lomod@divisor+4)),c,w
  3819  000960  500D               	subwfb	((c:___lomod@dividend+4)),c
  3820  000962  5A05               	movf	((c:___lomod@divisor+5)),c,w
  3821  000964  500E               	subwfb	((c:___lomod@dividend+5)),c
  3822  000966  5A06               	movf	((c:___lomod@divisor+6)),c,w
  3823  000968  500F               	subwfb	((c:___lomod@dividend+6)),c
  3824  00096A  5A07               	movf	((c:___lomod@divisor+7)),c,w
  3825  00096C  5010               	subwfb	((c:___lomod@dividend+7)),c
  3826  00096E  5A08               	goto	l1296
  3827  000970  EFBA  F004         	
  3828                           l632:
  3829  000974                     	line	23
  3830                           	
  3831                           l1296:
  3832  000974                     	bcf	status,0
  3833  000974  90D8               	rrcf	((c:___lomod@divisor+7)),c
  3834  000976  3210               	rrcf	((c:___lomod@divisor+6)),c
  3835  000978  320F               	rrcf	((c:___lomod@divisor+5)),c
  3836  00097A  320E               	rrcf	((c:___lomod@divisor+4)),c
  3837  00097C  320D               	rrcf	((c:___lomod@divisor+3)),c
  3838  00097E  320C               	rrcf	((c:___lomod@divisor+2)),c
  3839  000980  320B               	rrcf	((c:___lomod@divisor+1)),c
  3840  000982  320A               	rrcf	((c:___lomod@divisor)),c
  3841  000984  3209               	line	24
  3842                           	
  3843                           l1298:
  3844  000986                     	decfsz	((c:___lomod@counter)),c
  3845  000986  2E11               	
  3846                           	goto	l1292
  3847  000988  EF91  F004         	goto	l627
  3848  00098C  EFC8  F004         	
  3849                           l633:
  3850  000990                     	line	25
  3851                           	
  3852                           l627:
  3853  000990                     	line	26
  3854                           	movff	(c:___lomod@dividend),(c:?___lomod)
  3855  000990  C001  F001         	movff	(c:___lomod@dividend+1),(c:?___lomod+1)
  3856  000994  C002  F002         	movff	(c:___lomod@dividend+2),(c:?___lomod+2)
  3857  000998  C003  F003         	movff	(c:___lomod@dividend+3),(c:?___lomod+3)
  3858  00099C  C004  F004         	movff	(c:___lomod@dividend+4),(c:?___lomod+4)
  3859  0009A0  C005  F005         	movff	(c:___lomod@dividend+5),(c:?___lomod+5)
  3860  0009A4  C006  F006         	movff	(c:___lomod@dividend+6),(c:?___lomod+6)
  3861  0009A8  C007  F007         	movff	(c:___lomod@dividend+7),(c:?___lomod+7)
  3862  0009AC  C008  F008         	line	27
  3863                           	
  3864                           l634:
  3865  0009B0                     	return	;funcret
  3866  0009B0  0012               	opt stack 0
  3867                           GLOBAL	__end_of___lomod
  3868                           	__end_of___lomod:
  3869  0009B2                     	signat	___lomod,8319
  3870                           	global	___lodiv
  3871                           
  3872 ;; *************** function ___lodiv *****************
  3873 ;; Defined at:
  3874 ;;		line 9 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lodiv.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  dividend        8    0[COMRAM] unsigned long long 
  3877 ;;  divisor         8    8[COMRAM] unsigned long long 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  quotient        8   16[COMRAM] unsigned long long 
  3880 ;;  counter         1   24[COMRAM] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  8    0[COMRAM] unsigned long long 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3890 ;;      Params:        16       0       0       0
  3891 ;;      Locals:         9       0       0       0
  3892 ;;      Temps:          0       0       0       0
  3893 ;;      Totals:        25       0       0       0
  3894 ;;Total ram usage:       25 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_utoa
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           psect	text11,class=CODE,space=0,reloc=2,group=1
  3903                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lodiv.c"
  3904                           	line	9
  3905                           global __ptext11
  3906                           __ptext11:
  3907  0006E0                     psect	text11
  3908                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lodiv.c"
  3909                           	line	9
  3910                           	global	__size_of___lodiv
  3911                           	__size_of___lodiv	equ	__end_of___lodiv-___lodiv
  3912  0000                     	
  3913                           ___lodiv:
  3914  0006E0                     ;incstack = 0
  3915                           	opt	stack 26
  3916                           	line	15
  3917                           	
  3918                           l1262:
  3919  0006E0                     	lfsr	2,(___lodiv@quotient)
  3920  0006E0  EE20  F011         	movlw	8-1
  3921  0006E4  0E07               u451:
  3922  0006E6                     	clrf	postinc2
  3923  0006E6  6ADE               	decf	wreg
  3924  0006E8  06E8               	bc	u451
  3925  0006EA  E2FD               	line	16
  3926                           	
  3927                           l1264:
  3928  0006EC                     	movf	((c:___lodiv@divisor)),c,w
  3929  0006EC  5009               iorwf	((c:___lodiv@divisor+1)),c,w
  3930  0006EE  100A               iorwf	((c:___lodiv@divisor+2)),c,w
  3931  0006F0  100B               iorwf	((c:___lodiv@divisor+3)),c,w
  3932  0006F2  100C               iorwf	((c:___lodiv@divisor+4)),c,w
  3933  0006F4  100D               iorwf	((c:___lodiv@divisor+5)),c,w
  3934  0006F6  100E               iorwf	((c:___lodiv@divisor+6)),c,w
  3935  0006F8  100F               iorwf	((c:___lodiv@divisor+7)),c,w
  3936  0006FA  1010               	btfsc	status,2
  3937  0006FC  B4D8               	goto	u461
  3938  0006FE  EF83  F003         	goto	u460
  3939  000702  EF85  F003         
  3940                           u461:
  3941  000706                     	goto	l617
  3942  000706  EFE1  F003         u460:
  3943  00070A                     	line	17
  3944                           	
  3945                           l1266:
  3946  00070A                     	movlw	low(01h)
  3947  00070A  0E01               	movwf	((c:___lodiv@counter)),c
  3948  00070C  6E19               	line	18
  3949                           	goto	l1270
  3950  00070E  EF95  F003         	
  3951                           l619:
  3952  000712                     	line	19
  3953                           	
  3954                           l1268:
  3955  000712                     	bcf	status,0
  3956  000712  90D8               	rlcf	((c:___lodiv@divisor)),c
  3957  000714  3609               	rlcf	((c:___lodiv@divisor+1)),c
  3958  000716  360A               	rlcf	((c:___lodiv@divisor+2)),c
  3959  000718  360B               	rlcf	((c:___lodiv@divisor+3)),c
  3960  00071A  360C               	rlcf	((c:___lodiv@divisor+4)),c
  3961  00071C  360D               	rlcf	((c:___lodiv@divisor+5)),c
  3962  00071E  360E               	rlcf	((c:___lodiv@divisor+6)),c
  3963  000720  360F               	rlcf	((c:___lodiv@divisor+7)),c
  3964  000722  3610               	line	20
  3965                           	incf	((c:___lodiv@counter)),c
  3966  000724  2A19               	goto	l1270
  3967  000726  EF95  F003         	line	21
  3968                           	
  3969                           l618:
  3970  00072A                     	line	18
  3971                           	
  3972                           l1270:
  3973  00072A                     	
  3974                           	btfss	((c:___lodiv@divisor+7)),c,(63)&7
  3975  00072A  AE10               	goto	u471
  3976  00072C  EF9A  F003         	goto	u470
  3977  000730  EF9C  F003         u471:
  3978  000734                     	goto	l1268
  3979  000734  EF89  F003         u470:
  3980  000738                     	goto	l1272
  3981  000738  EFA0  F003         	
  3982                           l620:
  3983  00073C                     	goto	l1272
  3984  00073C  EFA0  F003         	line	22
  3985                           	
  3986                           l621:
  3987  000740                     	line	23
  3988                           	
  3989                           l1272:
  3990  000740                     	bcf	status,0
  3991  000740  90D8               	rlcf	((c:___lodiv@quotient)),c
  3992  000742  3611               	rlcf	((c:___lodiv@quotient+1)),c
  3993  000744  3612               	rlcf	((c:___lodiv@quotient+2)),c
  3994  000746  3613               	rlcf	((c:___lodiv@quotient+3)),c
  3995  000748  3614               	rlcf	((c:___lodiv@quotient+4)),c
  3996  00074A  3615               	rlcf	((c:___lodiv@quotient+5)),c
  3997  00074C  3616               	rlcf	((c:___lodiv@quotient+6)),c
  3998  00074E  3617               	rlcf	((c:___lodiv@quotient+7)),c
  3999  000750  3618               	line	24
  4000                           	
  4001                           l1274:
  4002  000752                     		movf	((c:___lodiv@divisor)),c,w
  4003  000752  5009               	subwf	((c:___lodiv@dividend)),c,w
  4004  000754  5C01               	movf	((c:___lodiv@divisor+1)),c,w
  4005  000756  500A               	subwfb	((c:___lodiv@dividend+1)),c,w
  4006  000758  5802               	movf	((c:___lodiv@divisor+2)),c,w
  4007  00075A  500B               	subwfb	((c:___lodiv@dividend+2)),c,w
  4008  00075C  5803               	movf	((c:___lodiv@divisor+3)),c,w
  4009  00075E  500C               	subwfb	((c:___lodiv@dividend+3)),c,w
  4010  000760  5804               	movf	((c:___lodiv@divisor+4)),c,w
  4011  000762  500D               	subwfb	((c:___lodiv@dividend+4)),c,w
  4012  000764  5805               	movf	((c:___lodiv@divisor+5)),c,w
  4013  000766  500E               	subwfb	((c:___lodiv@dividend+5)),c,w
  4014  000768  5806               	movf	((c:___lodiv@divisor+6)),c,w
  4015  00076A  500F               	subwfb	((c:___lodiv@dividend+6)),c,w
  4016  00076C  5807               	movf	((c:___lodiv@divisor+7)),c,w
  4017  00076E  5010               	subwfb	((c:___lodiv@dividend+7)),c,w
  4018  000770  5808               	btfss	status,0
  4019  000772  A0D8               	goto	u481
  4020  000774  EFBE  F003         	goto	u480
  4021  000778  EFC0  F003         
  4022                           u481:
  4023  00077C                     	goto	l1280
  4024  00077C  EFD3  F003         u480:
  4025  000780                     	line	25
  4026                           	
  4027                           l1276:
  4028  000780                     	movf	((c:___lodiv@divisor)),c,w
  4029  000780  5009               	subwf	((c:___lodiv@dividend)),c
  4030  000782  5E01               	movf	((c:___lodiv@divisor+1)),c,w
  4031  000784  500A               	subwfb	((c:___lodiv@dividend+1)),c
  4032  000786  5A02               	movf	((c:___lodiv@divisor+2)),c,w
  4033  000788  500B               	subwfb	((c:___lodiv@dividend+2)),c
  4034  00078A  5A03               	movf	((c:___lodiv@divisor+3)),c,w
  4035  00078C  500C               	subwfb	((c:___lodiv@dividend+3)),c
  4036  00078E  5A04               	movf	((c:___lodiv@divisor+4)),c,w
  4037  000790  500D               	subwfb	((c:___lodiv@dividend+4)),c
  4038  000792  5A05               	movf	((c:___lodiv@divisor+5)),c,w
  4039  000794  500E               	subwfb	((c:___lodiv@dividend+5)),c
  4040  000796  5A06               	movf	((c:___lodiv@divisor+6)),c,w
  4041  000798  500F               	subwfb	((c:___lodiv@dividend+6)),c
  4042  00079A  5A07               	movf	((c:___lodiv@divisor+7)),c,w
  4043  00079C  5010               	subwfb	((c:___lodiv@dividend+7)),c
  4044  00079E  5A08               	line	26
  4045                           	
  4046                           l1278:
  4047  0007A0                     	bsf	(0+(0/8)+(c:___lodiv@quotient)),c,(0)&7
  4048  0007A0  8011               	goto	l1280
  4049  0007A2  EFD3  F003         	line	27
  4050                           	
  4051                           l622:
  4052  0007A6                     	line	28
  4053                           	
  4054                           l1280:
  4055  0007A6                     	bcf	status,0
  4056  0007A6  90D8               	rrcf	((c:___lodiv@divisor+7)),c
  4057  0007A8  3210               	rrcf	((c:___lodiv@divisor+6)),c
  4058  0007AA  320F               	rrcf	((c:___lodiv@divisor+5)),c
  4059  0007AC  320E               	rrcf	((c:___lodiv@divisor+4)),c
  4060  0007AE  320D               	rrcf	((c:___lodiv@divisor+3)),c
  4061  0007B0  320C               	rrcf	((c:___lodiv@divisor+2)),c
  4062  0007B2  320B               	rrcf	((c:___lodiv@divisor+1)),c
  4063  0007B4  320A               	rrcf	((c:___lodiv@divisor)),c
  4064  0007B6  3209               	line	29
  4065                           	
  4066                           l1282:
  4067  0007B8                     	decfsz	((c:___lodiv@counter)),c
  4068  0007B8  2E19               	
  4069                           	goto	l1272
  4070  0007BA  EFA0  F003         	goto	l617
  4071  0007BE  EFE1  F003         	
  4072                           l623:
  4073  0007C2                     	line	30
  4074                           	
  4075                           l617:
  4076  0007C2                     	line	31
  4077                           	movff	(c:___lodiv@quotient),(c:?___lodiv)
  4078  0007C2  C011  F001         	movff	(c:___lodiv@quotient+1),(c:?___lodiv+1)
  4079  0007C6  C012  F002         	movff	(c:___lodiv@quotient+2),(c:?___lodiv+2)
  4080  0007CA  C013  F003         	movff	(c:___lodiv@quotient+3),(c:?___lodiv+3)
  4081  0007CE  C014  F004         	movff	(c:___lodiv@quotient+4),(c:?___lodiv+4)
  4082  0007D2  C015  F005         	movff	(c:___lodiv@quotient+5),(c:?___lodiv+5)
  4083  0007D6  C016  F006         	movff	(c:___lodiv@quotient+6),(c:?___lodiv+6)
  4084  0007DA  C017  F007         	movff	(c:___lodiv@quotient+7),(c:?___lodiv+7)
  4085  0007DE  C018  F008         	line	32
  4086                           	
  4087                           l624:
  4088  0007E2                     	return	;funcret
  4089  0007E2  0012               	opt stack 0
  4090                           GLOBAL	__end_of___lodiv
  4091                           	__end_of___lodiv:
  4092  0007E4                     	signat	___lodiv,8319
  4093                           	global	_read_IR
  4094                           
  4095 ;; *************** function _read_IR *****************
  4096 ;; Defined at:
  4097 ;;		line 52 in file "ir.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  values          2    0[COMRAM] PTR struct Sensor_ir
  4100 ;;		 -> main@values(4), 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4112 ;;      Params:         2       0       0       0
  4113 ;;      Locals:         0       0       0       0
  4114 ;;      Temps:          2       0       0       0
  4115 ;;      Totals:         4       0       0       0
  4116 ;;Total ram usage:        4 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_main
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           psect	text12,class=CODE,space=0,reloc=2,group=0
  4125                           	file	"ir.c"
  4126                           	line	52
  4127                           global __ptext12
  4128                           __ptext12:
  4129  000DB2                     psect	text12
  4130                           	file	"ir.c"
  4131                           	line	52
  4132                           	global	__size_of_read_IR
  4133                           	__size_of_read_IR	equ	__end_of_read_IR-_read_IR
  4134  0000                     	
  4135                           _read_IR:
  4136  000DB2                     ;incstack = 0
  4137                           	opt	stack 30
  4138                           	line	54
  4139                           	
  4140                           l1466:
  4141  000DB2                     ;ir.c: 52: void read_IR(struct Sensor_ir *values);ir.c: 53: {;ir.c: 54:     values->left
                                  = ((CAP2BUFH << 8) | (CAP2BUFL))/1;
  4142                           	movf	((c:3942)),c,w	;volatile
  4143  000DB2  5066               	movff	(c:3943),??_read_IR+0+0	;volatile
  4144  000DB4  CF67 F003          	clrf	(??_read_IR+0+0+1)&0ffh,c
  4145  000DB8  6A04               	movff	??_read_IR+0+0,??_read_IR+0+1
  4146  000DBA  C003  F004         	clrf	(??_read_IR+0+0),c
  4147  000DBE  6A03               	iorwf	(??_read_IR+0+0),c
  4148  000DC0  1203               	movlw	0
  4149  000DC2  0E00               	iorwf	(??_read_IR+0+1),c
  4150  000DC4  1204               	movff	(c:read_IR@values),fsr2l
  4151  000DC6  C001  FFD9         	movff	(c:read_IR@values+1),fsr2h
  4152  000DCA  C002  FFDA         	movff	??_read_IR+0+0,postinc2
  4153  000DCE  C003  FFDE         	movff	??_read_IR+0+1,postdec2
  4154  000DD2  C004  FFDD         
  4155                           	line	55
  4156                           ;ir.c: 55:     values->right = ((CAP1BUFH << 8) | (CAP1BUFL))/1;
  4157                           	movf	((c:3944)),c,w	;volatile
  4158  000DD6  5068               	movff	(c:3945),??_read_IR+0+0	;volatile
  4159  000DD8  CF69 F003          	clrf	(??_read_IR+0+0+1)&0ffh,c
  4160  000DDC  6A04               	movff	??_read_IR+0+0,??_read_IR+0+1
  4161  000DDE  C003  F004         	clrf	(??_read_IR+0+0),c
  4162  000DE2  6A03               	iorwf	(??_read_IR+0+0),c
  4163  000DE4  1203               	movlw	0
  4164  000DE6  0E00               	iorwf	(??_read_IR+0+1),c
  4165  000DE8  1204               	lfsr	2,02h
  4166  000DEA  EE20 F002          	movf	((c:read_IR@values)),c,w
  4167  000DEE  5001               	addwf	fsr2l
  4168  000DF0  26D9               	movf	((c:read_IR@values+1)),c,w
  4169  000DF2  5002               	addwfc	fsr2h
  4170  000DF4  22DA               	movff	??_read_IR+0+0,postinc2
  4171  000DF6  C003  FFDE         	movff	??_read_IR+0+1,postdec2
  4172  000DFA  C004  FFDD         
  4173                           	line	56
  4174                           	
  4175                           l119:
  4176  000DFE                     	return	;funcret
  4177  000DFE  0012               	opt stack 0
  4178                           GLOBAL	__end_of_read_IR
  4179                           	__end_of_read_IR:
  4180  000E00                     	signat	_read_IR,4217
  4181                           	global	_init_capture
  4182                           
  4183 ;; *************** function _init_capture *****************
  4184 ;; Defined at:
  4185 ;;		line 27 in file "ir.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;		None
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;		None
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  1    wreg      void 
  4192 ;; Registers used:
  4193 ;;		wreg, status,2
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4199 ;;      Params:         0       0       0       0
  4200 ;;      Locals:         0       0       0       0
  4201 ;;      Temps:          0       0       0       0
  4202 ;;      Totals:         0       0       0       0
  4203 ;;Total ram usage:        0 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		_main
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           psect	text13,class=CODE,space=0,reloc=2,group=0
  4212                           	line	27
  4213                           global __ptext13
  4214                           __ptext13:
  4215  000F28                     psect	text13
  4216                           	file	"ir.c"
  4217                           	line	27
  4218                           	global	__size_of_init_capture
  4219                           	__size_of_init_capture	equ	__end_of_init_capture-_init_capture
  4220  0000                     	
  4221                           _init_capture:
  4222  000F28                     ;incstack = 0
  4223                           	opt	stack 30
  4224                           	line	41
  4225                           	
  4226                           l1464:
  4227  000F28                     ;ir.c: 41:     LATA = 0;
  4228                           	movlw	low(0)
  4229  000F28  0E00               	movwf	((c:3977)),c	;volatile
  4230  000F2A  6E89               	line	42
  4231                           ;ir.c: 42:     TRISA = 0b00001100;
  4232                           	movlw	low(0Ch)
  4233  000F2C  0E0C               	movwf	((c:3986)),c	;volatile
  4234  000F2E  6E92               	line	43
  4235                           ;ir.c: 43:     CAP1CON = 0b01000110;
  4236                           	movlw	low(046h)
  4237  000F30  0E46               	movwf	((c:3939)),c	;volatile
  4238  000F32  6E63               	line	44
  4239                           ;ir.c: 44:     CAP2CON = 0b01000110;
  4240                           	movlw	low(046h)
  4241  000F34  0E46               	movwf	((c:3938)),c	;volatile
  4242  000F36  6E62               	line	45
  4243                           ;ir.c: 45:     T5CON = 0b00001001;
  4244                           	movlw	low(09h)
  4245  000F38  0E09               	movwf	((c:4023)),c	;volatile
  4246  000F3A  6EB7               	line	46
  4247                           ;ir.c: 46:     DFLTCON = 0b00011000;
  4248                           	movlw	low(018h)
  4249  000F3C  0E18               	movwf	((c:3936)),c	;volatile
  4250  000F3E  6E60               	line	47
  4251                           	
  4252                           l116:
  4253  000F40                     	return	;funcret
  4254  000F40  0012               	opt stack 0
  4255                           GLOBAL	__end_of_init_capture
  4256                           	__end_of_init_capture:
  4257  000F42                     	signat	_init_capture,89
  4258                           	global	_LCD_string
  4259                           
  4260 ;; *************** function _LCD_string *****************
  4261 ;; Defined at:
  4262 ;;		line 105 in file "lcd.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  string          2    4[COMRAM] PTR unsigned char 
  4265 ;;		 -> main@buf(16), 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;		None
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4277 ;;      Params:         2       0       0       0
  4278 ;;      Locals:         0       0       0       0
  4279 ;;      Temps:          0       0       0       0
  4280 ;;      Totals:         2       0       0       0
  4281 ;;Total ram usage:        2 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:    3
  4284 ;; This function calls:
  4285 ;;		_LCD_send
  4286 ;; This function is called by:
  4287 ;;		_main
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           psect	text14,class=CODE,space=0,reloc=2,group=0
  4291                           	file	"lcd.c"
  4292                           	line	105
  4293                           global __ptext14
  4294                           __ptext14:
  4295  000E9A                     psect	text14
  4296                           	file	"lcd.c"
  4297                           	line	105
  4298                           	global	__size_of_LCD_string
  4299                           	__size_of_LCD_string	equ	__end_of_LCD_string-_LCD_string
  4300  0000                     	
  4301                           _LCD_string:
  4302  000E9A                     ;incstack = 0
  4303                           	opt	stack 27
  4304                           	line	107
  4305                           	
  4306                           l1454:
  4307  000E9A                     ;lcd.c: 105: void LCD_string (char *string);lcd.c: 106: {;lcd.c: 107: while(*string != 0
                                 )
  4308                           	goto	l1462
  4309  000E9A  EF60  F007         	
  4310                           l48:
  4311  000E9E                     	line	111
  4312                           	
  4313                           l1456:
  4314  000E9E                     ;lcd.c: 108:     {;lcd.c: 111:     LCD_send(*string++,1);
  4315                           	movlw	low(01h)
  4316  000E9E  0E01               	movwf	((c:LCD_send@type)),c
  4317  000EA0  6E03               	movff	(c:LCD_string@string),fsr2l
  4318  000EA2  C005  FFD9         	movff	(c:LCD_string@string+1),fsr2h
  4319  000EA6  C006  FFDA         	movf	indf2,w
  4320  000EAA  50DF               	
  4321                           	call	_LCD_send
  4322  000EAC  EC6F  F007         	
  4323                           l1458:
  4324  000EB0                     	infsnz	((c:LCD_string@string)),c
  4325  000EB0  4A05               	incf	((c:LCD_string@string+1)),c
  4326  000EB2  2A06               	line	112
  4327                           	
  4328                           l1460:
  4329  000EB4                     ;lcd.c: 112:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4330                           	opt asmopt_push
  4331                           opt asmopt_off
  4332                           	movlw	33
  4333  000EB4  0E21               u697:
  4334  000EB6                     decfsz	wreg,f
  4335  000EB6  2EE8               	bra	u697
  4336  000EB8  D7FE               	nop
  4337  000EBA  F000               opt asmopt_pop
  4338                           
  4339                           	goto	l1462
  4340  000EBC  EF60  F007         	line	115
  4341                           ;lcd.c: 115:     }
  4342                           	
  4343                           l47:
  4344  000EC0                     	line	107
  4345                           	
  4346                           l1462:
  4347  000EC0                     ;lcd.c: 107: while(*string != 0)
  4348                           	movff	(c:LCD_string@string),fsr2l
  4349  000EC0  C005  FFD9         	movff	(c:LCD_string@string+1),fsr2h
  4350  000EC4  C006  FFDA         	movf	indf2,w
  4351  000EC8  50DF               	btfss	status,2
  4352  000ECA  A4D8               	goto	u661
  4353  000ECC  EF6A  F007         	goto	u660
  4354  000ED0  EF6C  F007         u661:
  4355  000ED4                     	goto	l1456
  4356  000ED4  EF4F  F007         u660:
  4357  000ED8                     	goto	l50
  4358  000ED8  EF6E  F007         	
  4359                           l49:
  4360  000EDC                     	line	116
  4361                           	
  4362                           l50:
  4363  000EDC                     	return	;funcret
  4364  000EDC  0012               	opt stack 0
  4365                           GLOBAL	__end_of_LCD_string
  4366                           	__end_of_LCD_string:
  4367  000EDE                     	signat	_LCD_string,4217
  4368                           	global	_LCD_line
  4369                           
  4370 ;; *************** function _LCD_line *****************
  4371 ;; Defined at:
  4372 ;;		line 92 in file "lcd.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  line            1    wreg     unsigned char 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  line            1    4[COMRAM] unsigned char 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, status,0, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4386 ;;      Params:         0       0       0       0
  4387 ;;      Locals:         1       0       0       0
  4388 ;;      Temps:          0       0       0       0
  4389 ;;      Totals:         1       0       0       0
  4390 ;;Total ram usage:        1 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    3
  4393 ;; This function calls:
  4394 ;;		_LCD_send
  4395 ;; This function is called by:
  4396 ;;		_main
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           psect	text15,class=CODE,space=0,reloc=2,group=0
  4400                           	line	92
  4401                           global __ptext15
  4402                           __ptext15:
  4403  000E00                     psect	text15
  4404                           	file	"lcd.c"
  4405                           	line	92
  4406                           	global	__size_of_LCD_line
  4407                           	__size_of_LCD_line	equ	__end_of_LCD_line-_LCD_line
  4408  0000                     	
  4409                           _LCD_line:
  4410  000E00                     ;incstack = 0
  4411                           	opt	stack 27
  4412                           ;LCD_line@line stored from wreg
  4413                           	movwf	((c:LCD_line@line)),c
  4414  000E00  6E05               	line	94
  4415                           	
  4416                           l1444:
  4417  000E02                     ;lcd.c: 92: void LCD_line (char line);lcd.c: 93: {;lcd.c: 94:     if (line == 1){
  4418                           		decf	((c:LCD_line@line)),c,w
  4419  000E02  0405               	btfss	status,2
  4420  000E04  A4D8               	goto	u641
  4421  000E06  EF07  F007         	goto	u640
  4422  000E0A  EF09  F007         
  4423                           u641:
  4424  000E0E                     	goto	l1448
  4425  000E0E  EF10  F007         u640:
  4426  000E12                     	line	95
  4427                           	
  4428                           l1446:
  4429  000E12                     ;lcd.c: 95:     LCD_send(0x80,0);
  4430                           	movlw	low(0)
  4431  000E12  0E00               	movwf	((c:LCD_send@type)),c
  4432  000E14  6E03               	movlw	(080h)&0ffh
  4433  000E16  0E80               	
  4434                           	call	_LCD_send
  4435  000E18  EC6F  F007         	line	96
  4436                           ;lcd.c: 96:     }
  4437                           	goto	l1452
  4438  000E1C  EF22  F007         	line	97
  4439                           ;lcd.c: 97:     else if (line == 2){
  4440                           	
  4441                           l41:
  4442  000E20                     	
  4443                           l1448:
  4444  000E20                     		movlw	2
  4445  000E20  0E02               	xorwf	((c:LCD_line@line)),c,w
  4446  000E22  1805               	btfss	status,2
  4447  000E24  A4D8               	goto	u651
  4448  000E26  EF17  F007         	goto	u650
  4449  000E2A  EF19  F007         
  4450                           u651:
  4451  000E2E                     	goto	l1452
  4452  000E2E  EF22  F007         u650:
  4453  000E32                     	line	98
  4454                           	
  4455                           l1450:
  4456  000E32                     ;lcd.c: 98:     LCD_send(0xC0,0);
  4457                           	movlw	low(0)
  4458  000E32  0E00               	movwf	((c:LCD_send@type)),c
  4459  000E34  6E03               	movlw	(0C0h)&0ffh
  4460  000E36  0EC0               	
  4461                           	call	_LCD_send
  4462  000E38  EC6F  F007         	goto	l1452
  4463  000E3C  EF22  F007         	line	99
  4464                           ;lcd.c: 99:     }
  4465                           	
  4466                           l43:
  4467  000E40                     	goto	l1452
  4468  000E40  EF22  F007         	
  4469                           l42:
  4470  000E44                     	line	100
  4471                           	
  4472                           l1452:
  4473  000E44                     ;lcd.c: 100:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4474                           	opt asmopt_push
  4475                           opt asmopt_off
  4476                           	movlw	33
  4477  000E44  0E21               u707:
  4478  000E46                     decfsz	wreg,f
  4479  000E46  2EE8               	bra	u707
  4480  000E48  D7FE               	nop
  4481  000E4A  F000               opt asmopt_pop
  4482                           
  4483                           	line	101
  4484                           	
  4485                           l44:
  4486  000E4C                     	return	;funcret
  4487  000E4C  0012               	opt stack 0
  4488                           GLOBAL	__end_of_LCD_line
  4489                           	__end_of_LCD_line:
  4490  000E4E                     	signat	_LCD_line,4217
  4491                           	global	_LCD_init
  4492                           
  4493 ;; *************** function _LCD_init *****************
  4494 ;; Defined at:
  4495 ;;		line 52 in file "lcd.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4509 ;;      Params:         0       0       0       0
  4510 ;;      Locals:         0       0       0       0
  4511 ;;      Temps:          1       0       0       0
  4512 ;;      Totals:         1       0       0       0
  4513 ;;Total ram usage:        1 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    3
  4516 ;; This function calls:
  4517 ;;		_LCD_out
  4518 ;;		_LCD_send
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           psect	text16,class=CODE,space=0,reloc=2,group=0
  4524                           	line	52
  4525                           global __ptext16
  4526                           __ptext16:
  4527  0007E4                     psect	text16
  4528                           	file	"lcd.c"
  4529                           	line	52
  4530                           	global	__size_of_LCD_init
  4531                           	__size_of_LCD_init	equ	__end_of_LCD_init-_LCD_init
  4532  0000                     	
  4533                           _LCD_init:
  4534  0007E4                     ;incstack = 0
  4535                           	opt	stack 27
  4536                           	line	56
  4537                           	
  4538                           l1404:
  4539  0007E4                     ;lcd.c: 56:     LATA=0;
  4540                           	movlw	low(0)
  4541  0007E4  0E00               	movwf	((c:3977)),c	;volatile
  4542  0007E6  6E89               	line	57
  4543                           ;lcd.c: 57:     LATC=0;
  4544                           	movlw	low(0)
  4545  0007E8  0E00               	movwf	((c:3979)),c	;volatile
  4546  0007EA  6E8B               	line	58
  4547                           ;lcd.c: 58:     LATD=0;
  4548                           	movlw	low(0)
  4549  0007EC  0E00               	movwf	((c:3980)),c	;volatile
  4550  0007EE  6E8C               	line	61
  4551                           ;lcd.c: 61:     TRISA=0;
  4552                           	movlw	low(0)
  4553  0007F0  0E00               	movwf	((c:3986)),c	;volatile
  4554  0007F2  6E92               	line	62
  4555                           ;lcd.c: 62:     TRISC=0;
  4556                           	movlw	low(0)
  4557  0007F4  0E00               	movwf	((c:3988)),c	;volatile
  4558  0007F6  6E94               	line	63
  4559                           ;lcd.c: 63:     TRISD=0;
  4560                           	movlw	low(0)
  4561  0007F8  0E00               	movwf	((c:3989)),c	;volatile
  4562  0007FA  6E95               	line	67
  4563                           	
  4564                           l1406:
  4565  0007FC                     ;lcd.c: 67:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4566                           	opt asmopt_push
  4567                           opt asmopt_off
  4568                           movlw	39
  4569  0007FC  0E27               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4570  0007FE  6E05               	movlw	245
  4571  000800  0EF5               u717:
  4572  000802                     decfsz	wreg,f
  4573  000802  2EE8               	bra	u717
  4574  000804  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4575  000806  2E05               	bra	u717
  4576  000808  D7FC               	nop
  4577  00080A  F000               opt asmopt_pop
  4578                           
  4579                           	line	68
  4580                           	
  4581                           l1408:
  4582  00080C                     ;lcd.c: 68:     LCD_out(0b0011);
  4583                           	movlw	(03h)&0ffh
  4584  00080C  0E03               	
  4585                           	call	_LCD_out
  4586  00080E  EC12  F006         	line	69
  4587                           	
  4588                           l1410:
  4589  000812                     ;lcd.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4590                           	opt asmopt_push
  4591                           opt asmopt_off
  4592                           movlw	13
  4593  000812  0E0D               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4594  000814  6E05               	movlw	252
  4595  000816  0EFC               u727:
  4596  000818                     decfsz	wreg,f
  4597  000818  2EE8               	bra	u727
  4598  00081A  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4599  00081C  2E05               	bra	u727
  4600  00081E  D7FC               opt asmopt_pop
  4601                           
  4602                           	line	70
  4603                           	
  4604                           l1412:
  4605  000820                     ;lcd.c: 70:     LCD_out(0b0011);
  4606                           	movlw	(03h)&0ffh
  4607  000820  0E03               	
  4608                           	call	_LCD_out
  4609  000822  EC12  F006         	line	71
  4610                           	
  4611                           l1414:
  4612  000826                     ;lcd.c: 71:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  4613                           	opt asmopt_push
  4614                           opt asmopt_off
  4615                           	movlw	133
  4616  000826  0E85               u737:
  4617  000828                     decfsz	wreg,f
  4618  000828  2EE8               	bra	u737
  4619  00082A  D7FE               	nop
  4620  00082C  F000               opt asmopt_pop
  4621                           
  4622                           	line	72
  4623                           	
  4624                           l1416:
  4625  00082E                     ;lcd.c: 72:     LCD_out(0b0011);
  4626                           	movlw	(03h)&0ffh
  4627  00082E  0E03               	
  4628                           	call	_LCD_out
  4629  000830  EC12  F006         	line	73
  4630                           	
  4631                           l1418:
  4632  000834                     ;lcd.c: 73:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4633                           	opt asmopt_push
  4634                           opt asmopt_off
  4635                           	movlw	33
  4636  000834  0E21               u747:
  4637  000836                     decfsz	wreg,f
  4638  000836  2EE8               	bra	u747
  4639  000838  D7FE               	nop
  4640  00083A  F000               opt asmopt_pop
  4641                           
  4642                           	line	74
  4643                           	
  4644                           l1420:
  4645  00083C                     ;lcd.c: 74:     LCD_out(0b0010);
  4646                           	movlw	(02h)&0ffh
  4647  00083C  0E02               	
  4648                           	call	_LCD_out
  4649  00083E  EC12  F006         	line	75
  4650                           	
  4651                           l1422:
  4652  000842                     ;lcd.c: 75:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4653                           	opt asmopt_push
  4654                           opt asmopt_off
  4655                           	movlw	33
  4656  000842  0E21               u757:
  4657  000844                     decfsz	wreg,f
  4658  000844  2EE8               	bra	u757
  4659  000846  D7FE               	nop
  4660  000848  F000               opt asmopt_pop
  4661                           
  4662                           	line	77
  4663                           	
  4664                           l1424:
  4665  00084A                     ;lcd.c: 77:     LCD_send(0b00101000,0);
  4666                           	movlw	low(0)
  4667  00084A  0E00               	movwf	((c:LCD_send@type)),c
  4668  00084C  6E03               	movlw	(028h)&0ffh
  4669  00084E  0E28               	
  4670                           	call	_LCD_send
  4671  000850  EC6F  F007         	line	78
  4672                           	
  4673                           l1426:
  4674  000854                     ;lcd.c: 78:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4675                           	opt asmopt_push
  4676                           opt asmopt_off
  4677                           movlw	6
  4678  000854  0E06               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4679  000856  6E05               	movlw	48
  4680  000858  0E30               u767:
  4681  00085A                     decfsz	wreg,f
  4682  00085A  2EE8               	bra	u767
  4683  00085C  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4684  00085E  2E05               	bra	u767
  4685  000860  D7FC               	nop2
  4686  000862  D000               opt asmopt_pop
  4687                           
  4688                           	line	79
  4689                           	
  4690                           l1428:
  4691  000864                     ;lcd.c: 79:     LCD_send(0b00001000,0);
  4692                           	movlw	low(0)
  4693  000864  0E00               	movwf	((c:LCD_send@type)),c
  4694  000866  6E03               	movlw	(08h)&0ffh
  4695  000868  0E08               	
  4696                           	call	_LCD_send
  4697  00086A  EC6F  F007         	line	80
  4698                           	
  4699                           l1430:
  4700  00086E                     ;lcd.c: 80:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4701                           	opt asmopt_push
  4702                           opt asmopt_off
  4703                           movlw	6
  4704  00086E  0E06               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4705  000870  6E05               	movlw	48
  4706  000872  0E30               u777:
  4707  000874                     decfsz	wreg,f
  4708  000874  2EE8               	bra	u777
  4709  000876  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4710  000878  2E05               	bra	u777
  4711  00087A  D7FC               	nop2
  4712  00087C  D000               opt asmopt_pop
  4713                           
  4714                           	line	81
  4715                           	
  4716                           l1432:
  4717  00087E                     ;lcd.c: 81:     LCD_send(0b00000001,0);
  4718                           	movlw	low(0)
  4719  00087E  0E00               	movwf	((c:LCD_send@type)),c
  4720  000880  6E03               	movlw	(01h)&0ffh
  4721  000882  0E01               	
  4722                           	call	_LCD_send
  4723  000884  EC6F  F007         	line	82
  4724                           	
  4725                           l1434:
  4726  000888                     ;lcd.c: 82:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4727                           	opt asmopt_push
  4728                           opt asmopt_off
  4729                           movlw	6
  4730  000888  0E06               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4731  00088A  6E05               	movlw	48
  4732  00088C  0E30               u787:
  4733  00088E                     decfsz	wreg,f
  4734  00088E  2EE8               	bra	u787
  4735  000890  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4736  000892  2E05               	bra	u787
  4737  000894  D7FC               	nop2
  4738  000896  D000               opt asmopt_pop
  4739                           
  4740                           	line	83
  4741                           	
  4742                           l1436:
  4743  000898                     ;lcd.c: 83:     LCD_send(0b00000110,0);
  4744                           	movlw	low(0)
  4745  000898  0E00               	movwf	((c:LCD_send@type)),c
  4746  00089A  6E03               	movlw	(06h)&0ffh
  4747  00089C  0E06               	
  4748                           	call	_LCD_send
  4749  00089E  EC6F  F007         	line	84
  4750                           	
  4751                           l1438:
  4752  0008A2                     ;lcd.c: 84:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4753                           	opt asmopt_push
  4754                           opt asmopt_off
  4755                           movlw	6
  4756  0008A2  0E06               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4757  0008A4  6E05               	movlw	48
  4758  0008A6  0E30               u797:
  4759  0008A8                     decfsz	wreg,f
  4760  0008A8  2EE8               	bra	u797
  4761  0008AA  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4762  0008AC  2E05               	bra	u797
  4763  0008AE  D7FC               	nop2
  4764  0008B0  D000               opt asmopt_pop
  4765                           
  4766                           	line	85
  4767                           	
  4768                           l1440:
  4769  0008B2                     ;lcd.c: 85:     LCD_send(0b00001100,0);
  4770                           	movlw	low(0)
  4771  0008B2  0E00               	movwf	((c:LCD_send@type)),c
  4772  0008B4  6E03               	movlw	(0Ch)&0ffh
  4773  0008B6  0E0C               	
  4774                           	call	_LCD_send
  4775  0008B8  EC6F  F007         	line	86
  4776                           	
  4777                           l1442:
  4778  0008BC                     ;lcd.c: 86:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4779                           	opt asmopt_push
  4780                           opt asmopt_off
  4781                           movlw	6
  4782  0008BC  0E06               movwf	(??_LCD_init+0+0)&0ffh,c,f
  4783  0008BE  6E05               	movlw	48
  4784  0008C0  0E30               u807:
  4785  0008C2                     decfsz	wreg,f
  4786  0008C2  2EE8               	bra	u807
  4787  0008C4  D7FE               	decfsz	(??_LCD_init+0+0)&0ffh,c,f
  4788  0008C6  2E05               	bra	u807
  4789  0008C8  D7FC               	nop2
  4790  0008CA  D000               opt asmopt_pop
  4791                           
  4792                           	line	88
  4793                           	
  4794                           l38:
  4795  0008CC                     	return	;funcret
  4796  0008CC  0012               	opt stack 0
  4797                           GLOBAL	__end_of_LCD_init
  4798                           	__end_of_LCD_init:
  4799  0008CE                     	signat	_LCD_init,89
  4800                           	global	_LCD_send
  4801                           
  4802 ;; *************** function _LCD_send *****************
  4803 ;; Defined at:
  4804 ;;		line 36 in file "lcd.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  Byte            1    wreg     unsigned char 
  4807 ;;  type            1    2[COMRAM] unsigned char 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  Byte            1    3[COMRAM] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4819 ;;      Params:         1       0       0       0
  4820 ;;      Locals:         1       0       0       0
  4821 ;;      Temps:          0       0       0       0
  4822 ;;      Totals:         2       0       0       0
  4823 ;;Total ram usage:        2 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    2
  4826 ;; This function calls:
  4827 ;;		_LCD_out
  4828 ;; This function is called by:
  4829 ;;		_LCD_init
  4830 ;;		_LCD_line
  4831 ;;		_LCD_string
  4832 ;;		_main
  4833 ;;		_LCD_clear
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           psect	text17,class=CODE,space=0,reloc=2,group=0
  4837                           	line	36
  4838                           global __ptext17
  4839                           __ptext17:
  4840  000EDE                     psect	text17
  4841                           	file	"lcd.c"
  4842                           	line	36
  4843                           	global	__size_of_LCD_send
  4844                           	__size_of_LCD_send	equ	__end_of_LCD_send-_LCD_send
  4845  0000                     	
  4846                           _LCD_send:
  4847  000EDE                     ;incstack = 0
  4848                           	opt	stack 27
  4849                           ;LCD_send@Byte stored from wreg
  4850                           	movwf	((c:LCD_send@Byte)),c
  4851  000EDE  6E04               	line	41
  4852                           	
  4853                           l1388:
  4854  000EE0                     ;lcd.c: 36: void LCD_send (unsigned char Byte,char type);lcd.c: 37: {;lcd.c: 41:     POR
                                 TAbits.RA6=type;
  4855                           	btfsc	(c:LCD_send@type),c,0
  4856  000EE0  B003               	bra	u625
  4857  000EE2  D002               	bcf	((c:3968)),c,6	;volatile
  4858  000EE4  9C80               	bra	u626
  4859  000EE6  D001               	u625:
  4860  000EE8                     	bsf	((c:3968)),c,6	;volatile
  4861  000EE8  8C80               	u626:
  4862  000EEA                     
  4863                           	line	44
  4864                           	
  4865                           l1390:
  4866  000EEA                     ;lcd.c: 44:     LCD_out(Byte>>4);
  4867                           	swapf	((c:LCD_send@Byte)),c,w
  4868  000EEA  3804               	andlw	(0ffh shr 4) & 0ffh
  4869  000EEC  0B0F               	
  4870                           	call	_LCD_out
  4871  000EEE  EC12  F006         	line	45
  4872                           	
  4873                           l1392:
  4874  000EF2                     ;lcd.c: 45:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  4875                           	opt asmopt_push
  4876                           opt asmopt_off
  4877                           	movlw	6
  4878  000EF2  0E06               u817:
  4879  000EF4                     decfsz	wreg,f
  4880  000EF4  2EE8               	bra	u817
  4881  000EF6  D7FE               	nop2
  4882  000EF8  D000               opt asmopt_pop
  4883                           
  4884                           	line	47
  4885                           	
  4886                           l1394:
  4887  000EFA                     ;lcd.c: 47:     LCD_out(Byte);
  4888                           	movf	((c:LCD_send@Byte)),c,w
  4889  000EFA  5004               	
  4890                           	call	_LCD_out
  4891  000EFC  EC12  F006         	line	48
  4892                           ;lcd.c: 48:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  4893                           	opt asmopt_push
  4894                           opt asmopt_off
  4895                           	movlw	33
  4896  000F00  0E21               u827:
  4897  000F02                     decfsz	wreg,f
  4898  000F02  2EE8               	bra	u827
  4899  000F04  D7FE               	nop
  4900  000F06  F000               opt asmopt_pop
  4901                           
  4902                           	line	50
  4903                           	
  4904                           l35:
  4905  000F08                     	return	;funcret
  4906  000F08  0012               	opt stack 0
  4907                           GLOBAL	__end_of_LCD_send
  4908                           	__end_of_LCD_send:
  4909  000F0A                     	signat	_LCD_send,8313
  4910                           	global	_LCD_out
  4911                           
  4912 ;; *************** function _LCD_out *****************
  4913 ;; Defined at:
  4914 ;;		line 19 in file "lcd.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  number          1    wreg     unsigned char 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  number          1    1[COMRAM] unsigned char 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4928 ;;      Params:         0       0       0       0
  4929 ;;      Locals:         1       0       0       0
  4930 ;;      Temps:          1       0       0       0
  4931 ;;      Totals:         2       0       0       0
  4932 ;;Total ram usage:        2 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    1
  4935 ;; This function calls:
  4936 ;;		_E_TOG
  4937 ;; This function is called by:
  4938 ;;		_LCD_send
  4939 ;;		_LCD_init
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           psect	text18,class=CODE,space=0,reloc=2,group=0
  4943                           	line	19
  4944                           global __ptext18
  4945                           __ptext18:
  4946  000C24                     psect	text18
  4947                           	file	"lcd.c"
  4948                           	line	19
  4949                           	global	__size_of_LCD_out
  4950                           	__size_of_LCD_out	equ	__end_of_LCD_out-_LCD_out
  4951  0000                     	
  4952                           _LCD_out:
  4953  000C24                     ;incstack = 0
  4954                           	opt	stack 27
  4955                           ;LCD_out@number stored from wreg
  4956                           	movwf	((c:LCD_out@number)),c
  4957  000C24  6E02               	line	23
  4958                           	
  4959                           l1342:
  4960  000C26                     ;lcd.c: 19: void LCD_out(unsigned char number);lcd.c: 21: {;lcd.c: 23:     PORTCbits.RC1
                                 =(number&0b0001);
  4961                           	movff	(c:LCD_out@number),??_LCD_out+0+0
  4962  000C26  C002  F001         	movlw	01h
  4963  000C2A  0E01               	andwf	(??_LCD_out+0+0),c
  4964  000C2C  1601               	rlncf	(??_LCD_out+0+0),c
  4965  000C2E  4601               	movf	((c:3970)),c,w	;volatile
  4966  000C30  5082               	xorwf	(??_LCD_out+0+0),c,w
  4967  000C32  1801               	andlw	not (((1<<1)-1)<<1)
  4968  000C34  0BFD               	xorwf	(??_LCD_out+0+0),c,w
  4969  000C36  1801               	movwf	((c:3970)),c	;volatile
  4970  000C38  6E82               	line	24
  4971                           ;lcd.c: 24:     PORTCbits.RC2=(number&0b0010)>>1;
  4972                           	movff	(c:LCD_out@number),??_LCD_out+0+0
  4973  000C3A  C002  F001         	bcf	status,0
  4974  000C3E  90D8               	rrcf	(??_LCD_out+0+0),c
  4975  000C40  3201               
  4976                           	movlw	01h
  4977  000C42  0E01               	andwf	(??_LCD_out+0+0),c
  4978  000C44  1601               	rlncf	(??_LCD_out+0+0),c
  4979  000C46  4601               	rlncf	(??_LCD_out+0+0),c
  4980  000C48  4601               	movf	((c:3970)),c,w	;volatile
  4981  000C4A  5082               	xorwf	(??_LCD_out+0+0),c,w
  4982  000C4C  1801               	andlw	not (((1<<1)-1)<<2)
  4983  000C4E  0BFB               	xorwf	(??_LCD_out+0+0),c,w
  4984  000C50  1801               	movwf	((c:3970)),c	;volatile
  4985  000C52  6E82               	line	25
  4986                           ;lcd.c: 25:     PORTDbits.RD0=(number&0b0100)>>2;
  4987                           	movff	(c:LCD_out@number),??_LCD_out+0+0
  4988  000C54  C002  F001         	bcf	status,0
  4989  000C58  90D8               	rrcf	(??_LCD_out+0+0),c
  4990  000C5A  3201               	bcf	status,0
  4991  000C5C  90D8               	rrcf	(??_LCD_out+0+0),c
  4992  000C5E  3201               
  4993                           	movlw	01h
  4994  000C60  0E01               	andwf	(??_LCD_out+0+0),c
  4995  000C62  1601               	movf	((c:3971)),c,w	;volatile
  4996  000C64  5083               	xorwf	(??_LCD_out+0+0),c,w
  4997  000C66  1801               	andlw	not ((1<<1)-1)
  4998  000C68  0BFE               	xorwf	(??_LCD_out+0+0),c,w
  4999  000C6A  1801               	movwf	((c:3971)),c	;volatile
  5000  000C6C  6E83               	line	26
  5001                           ;lcd.c: 26:     PORTDbits.RD1=(number&0b1000)>>3;
  5002                           	movff	(c:LCD_out@number),??_LCD_out+0+0
  5003  000C6E  C002  F001         	bcf	status,0
  5004  000C72  90D8               	rrcf	(??_LCD_out+0+0),c
  5005  000C74  3201               	bcf	status,0
  5006  000C76  90D8               	rrcf	(??_LCD_out+0+0),c
  5007  000C78  3201               	bcf	status,0
  5008  000C7A  90D8               	rrcf	(??_LCD_out+0+0),c
  5009  000C7C  3201               
  5010                           	movlw	01h
  5011  000C7E  0E01               	andwf	(??_LCD_out+0+0),c
  5012  000C80  1601               	rlncf	(??_LCD_out+0+0),c
  5013  000C82  4601               	movf	((c:3971)),c,w	;volatile
  5014  000C84  5083               	xorwf	(??_LCD_out+0+0),c,w
  5015  000C86  1801               	andlw	not (((1<<1)-1)<<1)
  5016  000C88  0BFD               	xorwf	(??_LCD_out+0+0),c,w
  5017  000C8A  1801               	movwf	((c:3971)),c	;volatile
  5018  000C8C  6E83               	line	28
  5019                           	
  5020                           l1344:
  5021  000C8E                     ;lcd.c: 28:     E_TOG();
  5022                           	call	_E_TOG	;wreg free
  5023  000C8E  ECA1  F007         	line	29
  5024                           	
  5025                           l1346:
  5026  000C92                     ;lcd.c: 29:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  5027                           	opt asmopt_push
  5028                           opt asmopt_off
  5029                           	movlw	3
  5030  000C92  0E03               u837:
  5031  000C94                     decfsz	wreg,f
  5032  000C94  2EE8               	bra	u837
  5033  000C96  D7FE               	nop
  5034  000C98  F000               opt asmopt_pop
  5035                           
  5036                           	line	30
  5037                           	
  5038                           l32:
  5039  000C9A                     	return	;funcret
  5040  000C9A  0012               	opt stack 0
  5041                           GLOBAL	__end_of_LCD_out
  5042                           	__end_of_LCD_out:
  5043  000C9C                     	signat	_LCD_out,4217
  5044                           	global	_E_TOG
  5045                           
  5046 ;; *************** function _E_TOG *****************
  5047 ;; Defined at:
  5048 ;;		line 3 in file "lcd.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;		None
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;		None
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1    wreg      void 
  5055 ;; Registers used:
  5056 ;;		wreg
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5062 ;;      Params:         0       0       0       0
  5063 ;;      Locals:         0       0       0       0
  5064 ;;      Temps:          0       0       0       0
  5065 ;;      Totals:         0       0       0       0
  5066 ;;Total ram usage:        0 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_LCD_out
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           psect	text19,class=CODE,space=0,reloc=2,group=0
  5075                           	line	3
  5076                           global __ptext19
  5077                           __ptext19:
  5078  000F42                     psect	text19
  5079                           	file	"lcd.c"
  5080                           	line	3
  5081                           	global	__size_of_E_TOG
  5082                           	__size_of_E_TOG	equ	__end_of_E_TOG-_E_TOG
  5083  0000                     	
  5084                           _E_TOG:
  5085  000F42                     ;incstack = 0
  5086                           	opt	stack 27
  5087                           	line	5
  5088                           	
  5089                           l1300:
  5090  000F42                     ;lcd.c: 5:     PORTCbits.RC0=1;
  5091                           	bsf	((c:3970)),c,0	;volatile
  5092  000F42  8082               	line	6
  5093                           	
  5094                           l1302:
  5095  000F44                     ;lcd.c: 6:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  5096                           	opt asmopt_push
  5097                           opt asmopt_off
  5098                           	movlw	3
  5099  000F44  0E03               u847:
  5100  000F46                     decfsz	wreg,f
  5101  000F46  2EE8               	bra	u847
  5102  000F48  D7FE               	nop
  5103  000F4A  F000               opt asmopt_pop
  5104                           
  5105                           	line	7
  5106                           	
  5107                           l1304:
  5108  000F4C                     ;lcd.c: 7:     PORTCbits.RC0=0;
  5109                           	bcf	((c:3970)),c,0	;volatile
  5110  000F4C  9082               	line	8
  5111                           ;lcd.c: 8:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  5112                           	opt asmopt_push
  5113                           opt asmopt_off
  5114                           	movlw	3
  5115  000F4E  0E03               u857:
  5116  000F50                     decfsz	wreg,f
  5117  000F50  2EE8               	bra	u857
  5118  000F52  D7FE               	nop
  5119  000F54  F000               opt asmopt_pop
  5120                           
  5121                           	line	9
  5122                           	
  5123                           l23:
  5124  000F56                     	return	;funcret
  5125  000F56  0012               	opt stack 0
  5126                           GLOBAL	__end_of_E_TOG
  5127                           	__end_of_E_TOG:
  5128  000F58                     	signat	_E_TOG,89
  5129                           psect	smallconst
  5130                           	db 0	; dummy byte at the end
  5131  000314  00                 	global	__smallconst
  5132                           	global	__mediumconst
  5133                           	GLOBAL	__activetblptr
  5134                           __activetblptr	EQU	1
  5135  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  5136                           	PSECT	rparam,class=COMRAM,space=1,noexec
  5137                           	GLOBAL	__Lrparam
  5138                           	FNCONF	rparam,??,?
  5139                           	GLOBAL	___rparam_used
  5140                           	___rparam_used EQU 1
  5141  0000                     	GLOBAL	___param_bank
  5142                           	___param_bank EQU 0
  5143  0000                     GLOBAL	__Lparam, __Hparam
  5144                           GLOBAL	__Lrparam, __Hrparam
  5145                           __Lparam	EQU	__Lrparam
  5146  0000                     __Hparam	EQU	__Hrparam
  5147  0000                     	end


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     30      68
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> main@buf(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buf(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S966_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buf(BANK0[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buf(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    read_IR@values	PTR struct Sensor_ir size(2) Largest target is 4
		 -> main@values(BANK0[4]), 

    LCD_string@string	PTR unsigned char  size(2) Largest target is 16
		 -> main@buf(BANK0[16]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _LCD_string->_LCD_send
    _LCD_line->_LCD_send
    _LCD_init->_LCD_send
    _LCD_send->_LCD_out

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   10256
                                             91 COMRAM     2     2      0
                                             10 BANK0     20    20      0
                           _LCD_init
                           _LCD_line
                           _LCD_send
                         _LCD_string
                       _init_capture
                            _read_IR
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    5986
                                             85 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5483
                                             77 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5130
                                             59 COMRAM    18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3759
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               6     4      2     166
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (1) _read_IR                                              4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_capture                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_string                                           2     0      2    1111
                                              4 COMRAM     2     0      2
                           _LCD_send
 ---------------------------------------------------------------------------------
 (1) _LCD_line                                             1     1      0     958
                                              4 COMRAM     1     1      0
                           _LCD_send
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0    1002
                                              4 COMRAM     1     1      0
                            _LCD_out
                           _LCD_send
 ---------------------------------------------------------------------------------
 (2) _LCD_send                                             2     1      1     914
                                              2 COMRAM     2     1      1
                            _LCD_out
 ---------------------------------------------------------------------------------
 (3) _LCD_out                                              2     2      0      88
                                              0 COMRAM     2     2      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (4) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_out
       _E_TOG
     _LCD_send
       _LCD_out
         _E_TOG
   _LCD_line
     _LCD_send
       _LCD_out
         _E_TOG
   _LCD_send
     _LCD_out
       _E_TOG
   _LCD_string
     _LCD_send
       _LCD_out
         _E_TOG
   _init_capture
   _read_IR
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      44       5       42.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3       3        0.0%
DATA                 0      0      A3      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Nov 30 11:49:59 2018

                     l23 0F56                       l32 0C9A                       l41 0E20  
                     l42 0E44                       l50 0EDC                       l35 0F08  
                     l43 0E40                       l44 0E4C                       l38 08CC  
                     l47 0EC0                       l48 0E9E                       l49 0EDC  
                     l82 0B72                       l83 0B72                       l84 0B84  
                     l85 0B90                       l86 0C1C                       l87 0C20  
                     l88 0C20                      l116 0F40                      l140 0AB6  
                    l142 0AD0                      l119 0DFE                      l144 0AD8  
                    l160 0508                      l152 032C                      l145 0B00  
                    l146 0AE4                      l162 0504                      l154 0352  
                    l170 0682                      l147 0B1E                      l163 050C  
                    l148 0B44                      l164 0538                      l156 035A  
                    l149 0B60                      l157 048E                      l173 0CDC  
                    l158 039E                      l174 0CB2                      l167 06A0  
                    l175 0CF8                      l168 062C                      l176 0D00  
                    l169 06DE                      l620 073C                      l621 0740  
                    l622 07A6                      l630 091E                      l623 07C2  
                    l631 0922                      l624 07E2                      l632 0974  
                    l617 07C2                      l633 0990                      l618 072A  
                    l634 09B0                      l619 0712                      l627 0990  
                    l628 090C                      l629 08F4                      l861 0A3C  
                    l862 0A8E                      l870 0E98                      l855 09E4  
                    l880 0F58                      l857 09DA                      l858 0A8A  
                    l859 0A86                      l867 0E74                      l883 0D74  
                    l868 0E5A                      l884 0D6C                      l869 0E98  
                    l885 0D90                      l877 0D5E                      l886 0DB0  
                    u400 0D8C                      u401 0D88                      u410 0A9E  
                    u411 0A9A                      u500 091A                      u420 0AC4  
                    u501 0916                      u421 0AC0                      u510 0950  
                    u350 09C4                      u430 0B1E                      u511 094C  
                    u351 09C0                      u431 0B1A                      u360 09D6  
                    u440 0B2C                      u520 0326                      u600 05A6  
                    u361 09D2                      u441 0B28                      u521 0322  
                    u601 05A2                      u370 0A02                      u530 0346  
                    u610 0650                      u451 06E6                      u371 09FE  
                    u531 0342                      u611 064C                      u460 070A  
                    u380 0A38                      u540 04A0                      u461 0706  
                    u381 0A34                      u541 049C                      u470 0738  
                    u390 0E94                      u550 04BE                      u630 0CF8  
                    u471 0734                      u391 0E90                      u551 04BA  
                    u631 0CF4                      u640 0E12                      u480 0780  
                    u560 04D8                      u625 0EE8                      u641 0E0E  
                    u481 077C                      u561 04D4                      u626 0EEA  
                    u650 0E32                      u490 08EC                      u570 04F2  
                    u707 0E46                      u651 0E2E                      u491 08E8  
                    u571 04EE                      u660 0ED8                      u580 0500  
                    u717 0802                      u661 0ED4                      u581 04FC  
                    u590 055E                      u670 0B80                      u807 08C2  
                    u727 0818                      u591 055A                      u671 0B7C  
                    u817 0EF4                      u737 0828                      u827 0F02  
                    u747 0836                      u837 0C94                      u757 0844  
                    u847 0F46                      u767 085A                      u687 0C0C  
                    u857 0F50                      u777 0874                      u697 0EB6  
                    u787 088E                      u797 08A8                      _pad 0A90  
                    wreg 000FE8              ?_LCD_string 0005             __CFG_LVP$OFF 000000  
        __end_of_LCD_out 0C9C                     l1210 09C4                     l1300 0F42  
                   l1220 0A8E                     l1212 09DA                     l1302 0F44  
                   l1214 09E4                     l1222 0E4E                     l1230 0D60  
                   l1310 032C                     l1304 0F4C                     l1216 0A02  
                   l1208 09B2                     l1224 0E5A                     l1232 0D6C  
                   l1240 0A90                     l1320 03A4                     l1312 0346  
                   l1400 0CB2                     l1410 0812                     l1218 0A3C  
                   l1226 0E6C                     l1234 0D74                     l1250 0AE4  
                   l1242 0A9E                     l1330 04A0                     l1322 041A  
                   l1314 0382                     l1306 0316                     l1402 0CDC  
                   l1420 083C                     l1412 0820                     l1404 07E4  
                   l1228 0E74                     l1236 0D90                     l1260 0B60  
                   l1252 0AF8                     l1244 0AB6                     l1340 0538  
                   l1332 04BE                     l1324 0420                     l1316 038A  
                   l1308 0326                     l1500 0BD4                     l1342 0C26  
                   l1430 086E                     l1422 0842                     l1414 0826  
                   l1406 07FC                     l1270 072A                     l1262 06E0  
                   l1238 0DB0                     l1254 0B00                     l1246 0AC4  
                   l1334 04D8                     l1326 0426                     l1318 039E  
                   l1350 055E                     l1502 0BDA                     l1344 0C8E  
                   l1440 08B2                     l1432 087E                     l1424 084A  
                   l1416 082E                     l1408 080C                     l1280 07A6  
                   l1272 0740                     l1264 06EC                     l1256 0B2C  
                   l1248 0AD0                     l1336 04F2                     l1328 048E  
                   l1360 05F0                     l1352 056C                     l1504 0BF6  
                   l1346 0C92                     l1442 08BC                     l1434 0888  
                   l1426 0854                     l1418 0834                     l1450 0E32  
                   l1282 07B8                     l1274 0752                     l1266 070A  
                   l1290 090C                     l1258 0B44                     l1338 050C  
                   l1370 0672                     l1362 0628                     l1354 057E  
                   l1506 0C02                     l1436 0898                     l1428 0864  
                   l1452 0E44                     l1444 0E02                     l1460 0EB4  
                   l1276 0780                     l1268 0712                     l1292 0922  
                   l1284 08CE                     l1372 067E                     l1364 062C  
                   l1356 0582                     l1380 06A0                     l1348 053A  
                   l1390 0EEA                     l1438 08A2                     l1446 0E12  
                   l1462 0EC0                     l1454 0E9A                     l1278 07A0  
                   l1294 0950                     l1286 08EC                     l1382 06C4  
                   l1366 0650                     l1374 0682                     l1358 05A6  
                   l1470 0D14                     l1392 0EF2                     l1448 0E20  
                   l1456 0E9E                     l1464 0F28                     l1296 0974  
                   l1288 08F4                     l1384 06D2                     l1376 0690  
                   l1368 065E                     l1472 0D1C                     l1394 0EFA  
                   l1458 0EB0                     l1466 0DB2                     l1298 0986  
                   l1386 06DE                     l1378 069C                     l1474 0D24  
                   l1490 0B90                     l1388 0EE0                     l1396 0C9C  
                   l1476 0D48                     l1468 0D02                     l1492 0B9C  
                   l1484 0B62                     l1398 0CA4                     l1478 0D5E  
                   l1494 0BA6                     l1486 0B84                     l1496 0BAC  
                   l1488 0B88                     l1498 0BC8                     ?_pad 0011  
                   STR_1 030B                     STR_2 0301                     _LATA 000F89  
                   _LATC 000F8B                     _LATD 000F8C                     _dbuf 0066  
                   _main 0B62                     _prec 0064                     _nout 0060  
                   pad@i 0018                     pad@p 0015                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 001A                     fsr2l 000FD9                     _utoa 0316  
                   start 0000             ___param_bank 000000                    ??_pad 0017  
       __end_of_LCD_line 0E4E         __end_of_LCD_init 08CE         __end_of_LCD_send 0F0A  
                  ?_main 0001                    ?_utoa 001C          __end_of___lodiv 07E4  
        __end_of___lomod 09B2                    _T5CON 000FB7                    _E_TOG 0F42  
           vfpfcnvrt@fmt 003E             vfpfcnvrt@llu 0046                    _TRISA 000F92  
                  _TRISC 000F94                    _TRISD 000F95                    _flags 005E  
        __end_of_read_IR 0E00                    _fputc 09B2                    _fputs 0E4E  
                  pad@fp 0011                    _width 0062                    _putch 0F58  
                  tablat 000FF5                    utoa@d 001E                    utoa@i 003A  
                  utoa@n 0032                    utoa@p 002E                    utoa@w 0030  
                  status 000FD8          __end_of_sprintf 0D60         ___lodiv@dividend 0001  
         __CFG_MCLRE$OFF 000000          __initialization 0F0A      __size_of_LCD_string 0044  
           __end_of_main 0C24             __end_of_utoa 053A           __CFG_OSC$IRCIO 000000  
                 ??_main 005C                   ??_utoa 0026            __activetblptr 000001  
                 ?_E_TOG 0001                ??_LCD_out 0001         ___lodiv@quotient 0011  
                 ?_fputc 0001                   ?_fputs 000A                   _ANSEL0 000FB8  
                 _ANSEL1 000FB9                   ?_putch 0001            ?_init_capture 0001  
                 _OSCCON 000FD3             vfprintf@cfmt 0054                ??___lodiv 0011  
              ??___lomod 0011                   clear_0 0F10                   pad@buf 0013  
                 _strlen 0D60                   fputc@c 0001                ??_read_IR 0003  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 0D02  
                 utoa@fp 001C                ??_sprintf 005C           ??_init_capture 0001  
             __accesstop 0060  __end_of__initialization 0F1A                ?_LCD_line 0001  
              ?_LCD_init 0001                ?_LCD_send 0003            ___rparam_used 000001  
          __end_of_E_TOG 0F58             LCD_line@line 0005           __pcstackCOMRAM 0001  
          __end_of_fputc 0A90            __end_of_fputs 0E9A            __end_of_putch 0F5A  
           LCD_send@Byte 0004             LCD_send@type 0003                  ??_E_TOG 0001  
           ??_LCD_string 0007                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 0060         LCD_string@string 0005  
             ??_LCD_line 0005               ??_LCD_init 0005               ??_LCD_send 0004  
     __end_of_LCD_string 0EDE                  _CAP1CON 000F63                  _CAP2CON 000F62  
                _DFLTCON 000F60                  ?_strlen 0001                  _LCD_out 0C24  
     __size_of_vfpfcnvrt 01A6         ___lomod@dividend 0001                  __Hparam 0000  
                __Lparam 0000                  ___lodiv 06E0                  ___lomod 08CE  
   __end_of_init_capture 0F42                ?_vfprintf 004E             __psmallconst 0300  
                __pcinit 0F0A                  __ramtop 0300                  __ptext0 0B62  
                __ptext1 0D02                  __ptext2 0C9C                  __ptext3 053A  
                __ptext4 0316                  __ptext5 0A90                  __ptext6 0D60  
                __ptext7 0E4E                  __ptext8 09B2                  __ptext9 0F58  
        __size_of_strlen 0052                  _read_IR 0DB2             __size_of_pad 00D2  
              _T5CONbits 000FB7                  main@buf 0090                  _sprintf 0D02  
   end_of_initialization 0F1A                  fputc@fp 0003                  fputs@fp 000C  
      __end_of_vfpfcnvrt 06E0                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0054  
                strlen@a 0005                  strlen@s 0001                _PORTAbits 000F80  
              _PORTCbits 000F82                _PORTDbits 000F83               main@values 00A0  
      __size_of_LCD_line 004E        __size_of_LCD_init 00EA        __size_of_LCD_send 002C  
            vfpfcnvrt@ap 0040              vfpfcnvrt@fp 003C           __end_of_strlen 0DB2  
    start_initialization 0F0A          ___lodiv@divisor 0009          ___lodiv@counter 0019  
            __end_of_pad 0B62    __size_of_init_capture 001A              vfprintf@fmt 0050  
          LCD_out@number 0002                 ??_strlen 0003                 ?_LCD_out 0001  
            __pbssCOMRAM 005E            __pcstackBANK0 0086             _init_capture 0F28  
               ?___lodiv 0001                 ?___lomod 0001        __size_of_vfprintf 0066  
               _CAP1BUFH 000F69                 _CAP1BUFL 000F68                 _CAP2BUFH 000F67  
               _CAP2BUFL 000F66          ___lomod@divisor 0009              __smallconst 0300  
        ___lomod@counter 0011                 ?_read_IR 0001           __size_of_E_TOG 0016  
               ?_sprintf 0056           __size_of_fputc 00DE           __size_of_fputs 004C  
         __size_of_putch 0002                 _LCD_line 0E00                 _LCD_init 07E4  
               _LCD_send 0EDE            read_IR@values 0001                _vfpfcnvrt 053A  
       __size_of_LCD_out 0078                 __Hrparam 0000               vfprintf@ap 0052  
               __Lrparam 0000               vfprintf@fp 004E             __Lsmallconst 0300  
       __size_of___lodiv 0104         __size_of___lomod 00E4               ?_vfpfcnvrt 003C  
             sprintf@fmt 0058               sprintf@ret 0086         __size_of_read_IR 004E  
               __ptext10 08CE                 __ptext11 06E0                 __ptext12 0DB2  
               __ptext13 0F28                 __ptext14 0E9A                 __ptext15 0E00  
               __ptext16 07E4                 __ptext17 0EDE                 __ptext18 0C24  
               __ptext19 0F42         __size_of_sprintf 005E            __size_of_main 00C2  
          __size_of_utoa 0224                 _vfprintf 0C9C               _LCD_string 0E9A  
              sprintf@ap 0088               _OSCCONbits 000FD3              ??_vfpfcnvrt 0042  
               sprintf@f 008A                 sprintf@s 0056  
